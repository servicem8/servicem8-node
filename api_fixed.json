{
  "openapi": "3.0.1",
  "info": {
    "title": "ServiceM8 API",
    "description": "Move your app forward with the ServiceM8 API\n\n\n\n## Limits and Throttling\nTo ensure continuous quality of service, API usage can be subject to throttling. The throttle will be applied once an API consumer reaches a certain \nthreshold in terms of a maximum number of requests per minute. Most clients will never hit this threshold, but those that do, will get met by a \nHTTP 429 Too Many Requests response code. \n \nThere is a limit of 180 requests per minute, if you reach this you will receive a HTTP 429 with a text body of \"Number of allowed API requests per minute exceeded\".\nThere is a limit of 20000 requests per day, if you reach this you will receive a HTTP 429 with a text body of \"Number of allowed API requests per day exceeded\".\n\nWe encourage all API developers to anticipate this error, and take appropriate measures like e.g. using a cached value from a previous call, or passing on a message to the end user that gets subjected to this behaviour (if any).\n\nLimits are per Addon per account.\n",
    "termsOfService": "https://www.servicem8.com/terms-of-service",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.servicem8.com/api_1.0"
    }
  ],
  "security": [
    {
      "oauth2": []
    },
    {
      "basicAuth": []
    }
  ],
  "paths": {
    "/allocationwindow.json": {
      "get": {
        "tags": [
          "Allocation Windows"
        ],
        "operationId": "listAllocationWindows",
        "summary": "List all Allocation Windows",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Allocation Windows",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AllocationWindow"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-92f6-40a1-ab74-22b3783a0f2b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string",
                  "start_time": "number",
                  "end_time": "number",
                  "sort_priority": "number"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Allocation Windows"
        ],
        "operationId": "createAllocationWindows",
        "summary": "Create a new Allocation Window",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Allocation Window",
            "in": "body",
            "description": "Allocation Window record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AllocationWindow"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Allocation Window record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/allocationwindow/{uuid}.json": {
      "get": {
        "tags": [
          "Allocation Windows"
        ],
        "operationId": "getAllocationWindows",
        "summary": "Retrieve an Allocation Window",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Allocation Window",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Allocation Window record",
            "schema": {
              "$ref": "#/definitions/AllocationWindow"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-4035-44fd-9e53-22b37dfdb23b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string",
                "start_time": "number",
                "end_time": "number",
                "sort_priority": "number"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Allocation Windows"
        ],
        "operationId": "updateAllocationWindows",
        "summary": "Update an Allocation Window",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Allocation Window",
            "required": true
          },
          {
            "name": "Allocation Window",
            "in": "body",
            "description": "Allocation Window fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AllocationWindow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Allocation Windows"
        ],
        "operationId": "deleteAllocationWindows",
        "summary": "Delete an Allocation Window",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Allocation Window",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Allocation Window successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset.json": {
      "get": {
        "tags": [
          "Assets"
        ],
        "operationId": "listAssets",
        "summary": "List all Assets",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Assets",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Asset"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-2c7d-41e3-80ba-22b37716b9eb",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "company_uuid": "123e4567-52f0-47d4-be4d-22b37fd06e7b",
                  "asset_code": "string",
                  "asset_type_uuid": "123e4567-a657-455b-858e-22b37ba3a8bb",
                  "name": "string",
                  "lat": "number",
                  "lng": "number",
                  "geo_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "altitude": "number",
                  "field_data": [
                    {
                      "uuid": "string",
                      "fieldType": "string",
                      "fieldName": "string",
                      "fieldValue": "string",
                      "sortOrder": "number"
                    }
                  ]
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/{uuid}.json": {
      "get": {
        "tags": [
          "Assets"
        ],
        "operationId": "getAssets",
        "summary": "Retrieve an Asset",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Asset",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Asset record",
            "schema": {
              "$ref": "#/definitions/Asset"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-1a81-416a-9dc0-22b37392a34b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "company_uuid": "123e4567-836a-43eb-b872-22b37b0e8fcb",
                "asset_code": "string",
                "asset_type_uuid": "123e4567-d413-4875-b204-22b37dbaf06b",
                "name": "string",
                "lat": "number",
                "lng": "number",
                "geo_timestamp": "YYYY-MM-DD HH:MM:SS",
                "altitude": "number",
                "field_data": [
                  {
                    "uuid": "string",
                    "fieldType": "string",
                    "fieldName": "string",
                    "fieldValue": "string",
                    "sortOrder": "number"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Assets"
        ],
        "operationId": "updateAssets",
        "summary": "Update an Asset",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Asset",
            "required": true
          },
          {
            "name": "Asset",
            "in": "body",
            "description": "Asset fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Assets"
        ],
        "operationId": "deleteAssets",
        "summary": "Delete an Asset",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Asset",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Asset successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/assettype.json": {
      "get": {
        "tags": [
          "Asset Types"
        ],
        "operationId": "listAssetTypes",
        "summary": "List all Asset Types",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Asset Types",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetType"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-a95a-420d-a0b4-22b375fe517b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Asset Types"
        ],
        "operationId": "createAssetTypes",
        "summary": "Create a new Asset Type",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_assets**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Asset Type",
            "in": "body",
            "description": "Asset Type record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetType"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Asset Type record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/assettype/{uuid}.json": {
      "get": {
        "tags": [
          "Asset Types"
        ],
        "operationId": "getAssetTypes",
        "summary": "Retrieve an Asset Type",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Asset Type",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Asset Type record",
            "schema": {
              "$ref": "#/definitions/AssetType"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-27ad-48d6-93b9-22b3774894ab",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Asset Types"
        ],
        "operationId": "updateAssetTypes",
        "summary": "Update an Asset Type",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Asset Type",
            "required": true
          },
          {
            "name": "Asset Type",
            "in": "body",
            "description": "Asset Type fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Asset Types"
        ],
        "operationId": "deleteAssetTypes",
        "summary": "Delete an Asset Type",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Asset Type",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Asset Type successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/assettypefield.json": {
      "get": {
        "tags": [
          "Asset Type Fields"
        ],
        "operationId": "listAssetTypeFields",
        "summary": "List all Asset Type Fields",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Asset Type Fields",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetTypeField"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-2322-4790-ba38-22b3753e952b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "asset_type_uuid": "123e4567-8819-4cdd-b104-22b37bce27eb",
                  "name": "string",
                  "field_data": {
                    "fieldType": "string",
                    "mandatory": "string",
                    "choices": [
                      "string"
                    ]
                  },
                  "sort_order": "number"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Asset Type Fields"
        ],
        "operationId": "createAssetTypeFields",
        "summary": "Create a new Asset Type Field",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_assets**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Asset Type Field",
            "in": "body",
            "description": "Asset Type Field record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetTypeField"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Asset Type Field record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/assettypefield/{uuid}.json": {
      "get": {
        "tags": [
          "Asset Type Fields"
        ],
        "operationId": "getAssetTypeFields",
        "summary": "Retrieve an Asset Type Field",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_assets"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Asset Type Field",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Asset Type Field record",
            "schema": {
              "$ref": "#/definitions/AssetTypeField"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-4833-4d80-957a-22b37d86d0fb",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "asset_type_uuid": "123e4567-81f0-4ff5-811a-22b37ac3127b",
                "name": "string",
                "field_data": {
                  "fieldType": "string",
                  "mandatory": "string",
                  "choices": [
                    "string"
                  ]
                },
                "sort_order": "number"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Asset Type Fields"
        ],
        "operationId": "updateAssetTypeFields",
        "summary": "Update an Asset Type Field",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Asset Type Field",
            "required": true
          },
          {
            "name": "Asset Type Field",
            "in": "body",
            "description": "Asset Type Field fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetTypeField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Asset Type Fields"
        ],
        "operationId": "deleteAssetTypeFields",
        "summary": "Delete an Asset Type Field",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Asset Type Field",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Asset Type Field successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/attachment.json": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "operationId": "listAttachments",
        "summary": "List all Attachments",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Attachments",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Attachment"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-b1c1-4920-a3bc-22b376a7853b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "related_object": "string",
                  "related_object_uuid": "123e4567-4e20-4905-a082-22b3742a37ab",
                  "attachment_name": "string",
                  "file_type": "string",
                  "created_by_staff_uuid": "123e4567-3e6d-4f50-9546-22b375bce52b",
                  "timestamp": "string",
                  "attachment_source": "string",
                  "tags": "string",
                  "lng": "number",
                  "lat": "number",
                  "photo_width": "string",
                  "photo_height": "string",
                  "extracted_info": "string",
                  "is_favourite": "string",
                  "class_name": "string",
                  "metadata": "string"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attachments"
        ],
        "operationId": "createAttachments",
        "summary": "Create a new Attachment",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Attachment",
            "in": "body",
            "description": "Attachment record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Attachment record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/attachment/{uuid}.json": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "operationId": "getAttachments",
        "summary": "Retrieve an Attachment",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Attachment",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment record",
            "schema": {
              "$ref": "#/definitions/Attachment"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-f2f8-4499-8b93-22b3796e3a7b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "related_object": "string",
                "related_object_uuid": "123e4567-7df5-4d48-a3d9-22b37b0a652b",
                "attachment_name": "string",
                "file_type": "string",
                "created_by_staff_uuid": "123e4567-42bf-4a27-9cc1-22b37e1ba10b",
                "timestamp": "string",
                "attachment_source": "string",
                "tags": "string",
                "lng": "number",
                "lat": "number",
                "photo_width": "string",
                "photo_height": "string",
                "extracted_info": "string",
                "is_favourite": "string",
                "class_name": "string",
                "metadata": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attachments"
        ],
        "operationId": "updateAttachments",
        "summary": "Update an Attachment",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Attachment",
            "required": true
          },
          {
            "name": "Attachment",
            "in": "body",
            "description": "Attachment fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Attachments"
        ],
        "operationId": "deleteAttachments",
        "summary": "Delete an Attachment",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Attachment",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/badge.json": {
      "get": {
        "tags": [
          "Badges"
        ],
        "operationId": "listBadges",
        "summary": "List all Badges",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_badges**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_badges"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Badges",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Badge"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-b26c-40cc-92d0-22b37354bfdb",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string",
                  "automatically_allocated": "string",
                  "file_name": "string",
                  "regarding_form_uuid": "123e4567-b977-40ce-a7ac-22b37311bc2b",
                  "regarding_asset_type_uuid": "123e4567-e0d0-4347-ab1b-22b37058123b"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Badges"
        ],
        "operationId": "createBadges",
        "summary": "Create a new Badge",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_badges**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_badges"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Badge",
            "in": "body",
            "description": "Badge record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Badge"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Badge record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/badge/{uuid}.json": {
      "get": {
        "tags": [
          "Badges"
        ],
        "operationId": "getBadges",
        "summary": "Retrieve a Badge",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_badges**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_badges"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Badge",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Badge record",
            "schema": {
              "$ref": "#/definitions/Badge"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-6216-4c8f-af3a-22b37028f90b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string",
                "automatically_allocated": "string",
                "file_name": "string",
                "regarding_form_uuid": "123e4567-08e8-4861-a6cb-22b37956c3ab",
                "regarding_asset_type_uuid": "123e4567-2f4c-40d1-a382-22b37af8745b"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Badges"
        ],
        "operationId": "updateBadges",
        "summary": "Update a Badge",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Badge",
            "required": true
          },
          {
            "name": "Badge",
            "in": "body",
            "description": "Badge fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Badge"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Badges"
        ],
        "operationId": "deleteBadges",
        "summary": "Delete a Badge",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Badge",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Badge successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/category.json": {
      "get": {
        "tags": [
          "Categories"
        ],
        "operationId": "listCategories",
        "summary": "List all Categories",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_categories**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_categories"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Categories",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-ac18-4ad5-b894-22b373115ecb",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string",
                  "colour": "string"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "operationId": "createCategories",
        "summary": "Create a new Category",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_categories**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_categories"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Category",
            "in": "body",
            "description": "Category record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Category record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/category/{uuid}.json": {
      "get": {
        "tags": [
          "Categories"
        ],
        "operationId": "getCategories",
        "summary": "Retrieve a Category",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_categories**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_categories"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Category",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Category record",
            "schema": {
              "$ref": "#/definitions/Category"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-82ea-4245-93d5-22b379c9825b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string",
                "colour": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "operationId": "updateCategories",
        "summary": "Update a Category",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_categories**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_categories"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Category",
            "required": true
          },
          {
            "name": "Category",
            "in": "body",
            "description": "Category fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "operationId": "deleteCategories",
        "summary": "Delete a Category",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_categories**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_categories"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Category",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Category successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/company.json": {
      "get": {
        "tags": [
          "Clients"
        ],
        "operationId": "listClients",
        "summary": "List all Clients",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_customers**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_customers"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Clients",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Company"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-2ba9-47fe-ac22-22b37c1c612b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string",
                  "website": "string",
                  "abn_number": "string",
                  "is_individual": "string",
                  "address_street": "string",
                  "address_city": "string",
                  "address_state": "string",
                  "address_postcode": "string",
                  "address_country": "string",
                  "fax_number": "string",
                  "address": "string",
                  "billing_address": "string",
                  "badges": "string",
                  "tax_rate_uuid": "123e4567-2dfe-4774-b495-22b37b30393b",
                  "billing_attention": "string",
                  "payment_terms": "string"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "operationId": "createClients",
        "summary": "Create a new Client",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customers**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_customers"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Client",
            "in": "body",
            "description": "Client record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Client record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/company/{uuid}.json": {
      "get": {
        "tags": [
          "Clients"
        ],
        "operationId": "getClients",
        "summary": "Retrieve a Client",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_customers**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_customers"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Client",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Client record",
            "schema": {
              "$ref": "#/definitions/Company"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-0305-4389-9c8e-22b377882e8b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string",
                "website": "string",
                "abn_number": "string",
                "is_individual": "string",
                "address_street": "string",
                "address_city": "string",
                "address_state": "string",
                "address_postcode": "string",
                "address_country": "string",
                "fax_number": "string",
                "address": "string",
                "billing_address": "string",
                "badges": "string",
                "tax_rate_uuid": "123e4567-47ae-4061-8656-22b374b8c92b",
                "billing_attention": "string",
                "payment_terms": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "operationId": "updateClients",
        "summary": "Update a Client",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customers**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_customers"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Client",
            "required": true
          },
          {
            "name": "Client",
            "in": "body",
            "description": "Client fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "operationId": "deleteClients",
        "summary": "Delete a Client",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customers**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_customers"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Client",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Client successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/companycontact.json": {
      "get": {
        "tags": [
          "Company Contacts"
        ],
        "operationId": "listCompanyContacts",
        "summary": "List all Company Contacts",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_customer_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_customer_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Company Contacts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyContact"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-2b16-4a24-9330-22b371151b9b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "company_uuid": "123e4567-e922-4915-a505-22b378e94d7b",
                  "first": "string",
                  "last": "string",
                  "phone": "string",
                  "mobile": "string",
                  "email": "string",
                  "type": "string",
                  "is_primary_contact": "string"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Company Contacts"
        ],
        "operationId": "createCompanyContacts",
        "summary": "Create a new Company Contact",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customer_contacts**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_customer_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Company Contact",
            "in": "body",
            "description": "Company Contact record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyContact"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Company Contact record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/companycontact/{uuid}.json": {
      "get": {
        "tags": [
          "Company Contacts"
        ],
        "operationId": "getCompanyContacts",
        "summary": "Retrieve a Company Contact",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_customer_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_customer_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Company Contact",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Company Contact record",
            "schema": {
              "$ref": "#/definitions/CompanyContact"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-8df3-48f4-bc8d-22b37e8e232b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "company_uuid": "123e4567-0518-4662-b902-22b373da74ab",
                "first": "string",
                "last": "string",
                "phone": "string",
                "mobile": "string",
                "email": "string",
                "type": "string",
                "is_primary_contact": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Company Contacts"
        ],
        "operationId": "updateCompanyContacts",
        "summary": "Update a Company Contact",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customer_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_customer_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Company Contact",
            "required": true
          },
          {
            "name": "Company Contact",
            "in": "body",
            "description": "Company Contact fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Company Contacts"
        ],
        "operationId": "deleteCompanyContacts",
        "summary": "Delete a Company Contact",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customer_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_customer_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Company Contact",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Company Contact successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/emailtemplate.json": {
      "get": {
        "tags": [
          "Email Templates"
        ],
        "operationId": "listEmailTemplates",
        "summary": "List all Email Templates",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Email Templates",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmailTemplate"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-6e54-4c2c-b796-22b37628f6fb",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string",
                  "subject": "string",
                  "message": "string"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Email Templates"
        ],
        "operationId": "createEmailTemplates",
        "summary": "Create a new Email Template",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Email Template",
            "in": "body",
            "description": "Email Template record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Email Template record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/emailtemplate/{uuid}.json": {
      "get": {
        "tags": [
          "Email Templates"
        ],
        "operationId": "getEmailTemplates",
        "summary": "Retrieve an Email Template",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Email Template",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Email Template record",
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-6a6e-4a2b-a366-22b37201ae3b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string",
                "subject": "string",
                "message": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Email Templates"
        ],
        "operationId": "updateEmailTemplates",
        "summary": "Update an Email Template",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Email Template",
            "required": true
          },
          {
            "name": "Email Template",
            "in": "body",
            "description": "Email Template fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Email Templates"
        ],
        "operationId": "deleteEmailTemplates",
        "summary": "Delete an Email Template",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Email Template",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Email Template successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/feedback.json": {
      "get": {
        "tags": [
          "Feedback"
        ],
        "operationId": "listFeedback",
        "summary": "List all Feedback",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Feedback",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Feedback"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-d600-4c30-beeb-22b37092b35b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "timestamp": "string",
                  "related_object": "string",
                  "related_object_uuid": "123e4567-9bfb-4719-8163-22b370e1398b",
                  "rating": "string",
                  "comment": "string"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Feedback"
        ],
        "operationId": "createFeedback",
        "summary": "Create a new Feedback",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Feedback",
            "in": "body",
            "description": "Feedback record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Feedback"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Feedback record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/feedback/{uuid}.json": {
      "get": {
        "tags": [
          "Feedback"
        ],
        "operationId": "getFeedback",
        "summary": "Retrieve a Feedback",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Feedback",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback record",
            "schema": {
              "$ref": "#/definitions/Feedback"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-d164-4865-a0f3-22b3736c567b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "timestamp": "string",
                "related_object": "string",
                "related_object_uuid": "123e4567-ffb0-4199-ac05-22b37f65b68b",
                "rating": "string",
                "comment": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Feedback"
        ],
        "operationId": "updateFeedback",
        "summary": "Update a Feedback",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Feedback",
            "required": true
          },
          {
            "name": "Feedback",
            "in": "body",
            "description": "Feedback fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Feedback"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Feedback"
        ],
        "operationId": "deleteFeedback",
        "summary": "Delete a Feedback",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Feedback",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/form.json": {
      "get": {
        "tags": [
          "Forms"
        ],
        "operationId": "listForms",
        "summary": "List all Forms",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Forms",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Form"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-a519-450b-b58e-22b37c44720b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string",
                  "document_template_uuid": "123e4567-f329-48e4-bbc2-22b37f05f68b",
                  "can_be_used_independently": "string",
                  "badge_mandatory_state": "string",
                  "template_fields": [
                    {
                      "name": "string",
                      "fieldType": "string",
                      "value": "string",
                      "sortOrder": "string"
                    }
                  ]
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Forms"
        ],
        "operationId": "createForms",
        "summary": "Create a new Form",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Form",
            "in": "body",
            "description": "Form record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Form"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Form record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/form/{uuid}.json": {
      "get": {
        "tags": [
          "Forms"
        ],
        "operationId": "getForms",
        "summary": "Retrieve a Form",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Form",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Form record",
            "schema": {
              "$ref": "#/definitions/Form"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-4758-4eb3-a8f0-22b37ee18a1b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string",
                "document_template_uuid": "123e4567-86c5-4ad6-b3c9-22b37a8e6b4b",
                "can_be_used_independently": "string",
                "badge_mandatory_state": "string",
                "template_fields": [
                  {
                    "name": "string",
                    "fieldType": "string",
                    "value": "string",
                    "sortOrder": "string"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Forms"
        ],
        "operationId": "updateForms",
        "summary": "Update a Form",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Form",
            "required": true
          },
          {
            "name": "Form",
            "in": "body",
            "description": "Form fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Form"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Forms"
        ],
        "operationId": "deleteForms",
        "summary": "Delete a Form",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Form",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Form successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/formfield.json": {
      "get": {
        "tags": [
          "Form Fields"
        ],
        "operationId": "listFormFields",
        "summary": "List all Form Fields",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Form Fields",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FormField"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-af64-4df3-988c-22b37259f48b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "form_uuid": "123e4567-9243-4849-bb0a-22b37a78ec8b",
                  "name": "string",
                  "field_data_json": "string",
                  "sort_order": "string"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Form Fields"
        ],
        "operationId": "createFormFields",
        "summary": "Create a new Form Field",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Form Field",
            "in": "body",
            "description": "Form Field record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormField"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Form Field record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/formfield/{uuid}.json": {
      "get": {
        "tags": [
          "Form Fields"
        ],
        "operationId": "getFormFields",
        "summary": "Retrieve a Form Field",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Form Field",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Form Field record",
            "schema": {
              "$ref": "#/definitions/FormField"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-d1dd-441a-b418-22b377b5240b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "form_uuid": "123e4567-68b1-4b48-beb9-22b37f0fcc6b",
                "name": "string",
                "field_data_json": "string",
                "sort_order": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Form Fields"
        ],
        "operationId": "updateFormFields",
        "summary": "Update a Form Field",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Form Field",
            "required": true
          },
          {
            "name": "Form Field",
            "in": "body",
            "description": "Form Field fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Form Fields"
        ],
        "operationId": "deleteFormFields",
        "summary": "Delete a Form Field",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Form Field",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Form Field successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/formresponse.json": {
      "get": {
        "tags": [
          "Form Responses"
        ],
        "operationId": "listFormResponses",
        "summary": "List all Form Responses",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Form Responses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FormResponse"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-f7ac-4810-9353-22b37985d8fb",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "form_uuid": "123e4567-2a3b-4768-ad67-22b37ad29cfb",
                  "staff_uuid": "123e4567-1c90-4bef-9e96-22b370c5126b",
                  "regarding_object": "string",
                  "regarding_object_uuid": "123e4567-6d38-4829-8f86-22b37980d23b",
                  "field_data": "string",
                  "timestamp": "YYYY-MM-DD HH:MM:SS",
                  "form_by_staff_uuid": "123e4567-55b4-4a41-95b6-22b3710f057b",
                  "document_attachment_uuid": "123e4567-3eb9-4cfd-ab1c-22b374fa744b",
                  "asset_uuid": "123e4567-0e3d-40a4-96a6-22b3721e67fb"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Form Responses"
        ],
        "operationId": "createFormResponses",
        "summary": "Create a new Form Response",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Form Response",
            "in": "body",
            "description": "Form Response record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Form Response record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/formresponse/{uuid}.json": {
      "get": {
        "tags": [
          "Form Responses"
        ],
        "operationId": "getFormResponses",
        "summary": "Retrieve a Form Response",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Form Response",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Form Response record",
            "schema": {
              "$ref": "#/definitions/FormResponse"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-63f4-475c-8738-22b37e4b0cdb",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "form_uuid": "123e4567-18be-43af-83ff-22b375cea42b",
                "staff_uuid": "123e4567-5f45-41fc-8d17-22b37cab662b",
                "regarding_object": "string",
                "regarding_object_uuid": "123e4567-8cf4-4be1-9ccd-22b37468d77b",
                "field_data": "string",
                "timestamp": "YYYY-MM-DD HH:MM:SS",
                "form_by_staff_uuid": "123e4567-deca-4518-8c11-22b37a092a2b",
                "document_attachment_uuid": "123e4567-ced9-4165-8440-22b3722fa50b",
                "asset_uuid": "123e4567-f9fb-4620-8287-22b37d45f9ab"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Form Responses"
        ],
        "operationId": "updateFormResponses",
        "summary": "Update a Form Response",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Form Response",
            "required": true
          },
          {
            "name": "Form Response",
            "in": "body",
            "description": "Form Response fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Form Responses"
        ],
        "operationId": "deleteFormResponses",
        "summary": "Delete a Form Response",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Form Response",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Form Response successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/job.json": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "listJobs",
        "summary": "List all Jobs",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_jobs**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_jobs"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Jobs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-4d22-4d9f-a994-22b375803c1b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "created_by_staff_uuid": "123e4567-2127-41bf-b0db-22b37159972b",
                  "date": "YYYY-MM-DD",
                  "company_uuid": "123e4567-823e-4837-8613-22b373f947cb",
                  "job_address": "string",
                  "billing_address": "string",
                  "status": "string",
                  "job_description": "string",
                  "work_done_description": "string",
                  "lng": "number",
                  "lat": "number",
                  "generated_job_id": "string",
                  "payment_date": "YYYY-MM-DD HH:MM:SS",
                  "payment_actioned_by_uuid": "123e4567-6ffb-4217-8e26-22b37ee7967b",
                  "payment_method": "string",
                  "payment_amount": "string",
                  "total_invoice_amount": "string",
                  "category_uuid": "123e4567-1adf-46f1-9740-22b37d8247cb",
                  "payment_note": "string",
                  "geo_is_valid": "string",
                  "purchase_order_number": "string",
                  "invoice_sent": "string",
                  "invoice_sent_stamp": "YYYY-MM-DD HH:MM:SS",
                  "ready_to_invoice": "string",
                  "ready_to_invoice_stamp": "YYYY-MM-DD HH:MM:SS",
                  "payment_processed": "string",
                  "payment_processed_stamp": "YYYY-MM-DD HH:MM:SS",
                  "geo_country": "string",
                  "geo_postcode": "string",
                  "geo_state": "string",
                  "geo_city": "string",
                  "geo_street": "string",
                  "geo_number": "string",
                  "queue_uuid": "123e4567-19a1-4cb0-b145-22b37524c89b",
                  "queue_expiry_date": "YYYY-MM-DD HH:MM:SS",
                  "queue_assigned_staff_uuid": "123e4567-38d7-4e5a-9166-22b37149589b",
                  "payment_received": "string",
                  "payment_received_stamp": "YYYY-MM-DD HH:MM:SS",
                  "badges": "string",
                  "quote_date": "YYYY-MM-DD HH:MM:SS",
                  "quote_sent": "number",
                  "quote_sent_stamp": "YYYY-MM-DD HH:MM:SS",
                  "work_order_date": "YYYY-MM-DD HH:MM:SS",
                  "completion_date": "YYYY-MM-DD HH:MM:SS",
                  "completion_actioned_by_uuid": "123e4567-0535-47be-a664-22b3750d658b",
                  "unsuccessful_date": "YYYY-MM-DD HH:MM:SS",
                  "job_is_scheduled_until_stamp": "YYYY-MM-DD HH:MM:SS",
                  "active_network_request_uuid": "123e4567-1520-4e69-abbd-22b37e88549b",
                  "related_knowledge_articles": [
                    {
                      "knowledge_article_uuid": "string",
                      "relevance": "number"
                    }
                  ]
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Jobs"
        ],
        "operationId": "createJobs",
        "summary": "Create a new Job",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **create_jobs**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "create_jobs"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Job",
            "in": "body",
            "description": "Job record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Job record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/job/{uuid}.json": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "getJobs",
        "summary": "Retrieve a Job",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_jobs**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_jobs"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job record",
            "schema": {
              "$ref": "#/definitions/Job"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-9d53-45e7-b7f5-22b372d1392b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "created_by_staff_uuid": "123e4567-edd0-4c60-8f0d-22b3752e14bb",
                "date": "YYYY-MM-DD",
                "company_uuid": "123e4567-b239-47df-ac18-22b37ddd10fb",
                "job_address": "string",
                "billing_address": "string",
                "status": "string",
                "job_description": "string",
                "work_done_description": "string",
                "lng": "number",
                "lat": "number",
                "generated_job_id": "string",
                "payment_date": "YYYY-MM-DD HH:MM:SS",
                "payment_actioned_by_uuid": "123e4567-16d7-420d-b019-22b37c459b5b",
                "payment_method": "string",
                "payment_amount": "string",
                "total_invoice_amount": "string",
                "category_uuid": "123e4567-bad8-4812-825a-22b37e2c798b",
                "payment_note": "string",
                "geo_is_valid": "string",
                "purchase_order_number": "string",
                "invoice_sent": "string",
                "invoice_sent_stamp": "YYYY-MM-DD HH:MM:SS",
                "ready_to_invoice": "string",
                "ready_to_invoice_stamp": "YYYY-MM-DD HH:MM:SS",
                "payment_processed": "string",
                "payment_processed_stamp": "YYYY-MM-DD HH:MM:SS",
                "geo_country": "string",
                "geo_postcode": "string",
                "geo_state": "string",
                "geo_city": "string",
                "geo_street": "string",
                "geo_number": "string",
                "queue_uuid": "123e4567-4f27-4a11-bd8b-22b37c662beb",
                "queue_expiry_date": "YYYY-MM-DD HH:MM:SS",
                "queue_assigned_staff_uuid": "123e4567-4279-4616-94af-22b3789a11ab",
                "payment_received": "string",
                "payment_received_stamp": "YYYY-MM-DD HH:MM:SS",
                "badges": "string",
                "quote_date": "YYYY-MM-DD HH:MM:SS",
                "quote_sent": "number",
                "quote_sent_stamp": "YYYY-MM-DD HH:MM:SS",
                "work_order_date": "YYYY-MM-DD HH:MM:SS",
                "completion_date": "YYYY-MM-DD HH:MM:SS",
                "completion_actioned_by_uuid": "123e4567-f48b-4d51-95e9-22b37c826dcb",
                "unsuccessful_date": "YYYY-MM-DD HH:MM:SS",
                "job_is_scheduled_until_stamp": "YYYY-MM-DD HH:MM:SS",
                "active_network_request_uuid": "123e4567-2416-4404-b867-22b37a59ddfb",
                "related_knowledge_articles": [
                  {
                    "knowledge_article_uuid": "string",
                    "relevance": "number"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Jobs"
        ],
        "operationId": "updateJobs",
        "summary": "Update a Job",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_jobs**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_jobs"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job",
            "required": true
          },
          {
            "name": "Job",
            "in": "body",
            "description": "Job fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Jobs"
        ],
        "operationId": "deleteJobs",
        "summary": "Delete a Job",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_jobs**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_jobs"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobactivity.json": {
      "get": {
        "tags": [
          "Job Activities"
        ],
        "operationId": "listJobActivities",
        "summary": "List all Job Activities",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_schedule**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Activities",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobActivity"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-1230-4140-a3fe-22b37639550b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "job_uuid": "123e4567-34ce-4b9a-b70a-22b37b3ac73b",
                  "staff_uuid": "123e4567-8e19-4fe0-9f53-22b37831a20b",
                  "start_date": "YYYY-MM-DD HH:MM:SS",
                  "end_date": "YYYY-MM-DD HH:MM:SS",
                  "activity_was_scheduled": "string",
                  "activity_was_recorded": "string",
                  "activity_was_automated": "string",
                  "has_been_opened": "string",
                  "has_been_opened_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "travel_time_in_seconds": "string",
                  "travel_distance_in_meters": "string",
                  "allocated_by_staff_uuid": "123e4567-1bff-4d05-9a6f-22b37e19f36b",
                  "allocated_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "material_uuid": "123e4567-2df6-4b45-bc7c-22b370d27e7b",
                  "edit_by_staff_uuid": "123e4567-fa17-4a7d-a4bc-22b376d0342b"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Activities"
        ],
        "operationId": "createJobActivities",
        "summary": "Create a new Job Activity",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Job Activity",
            "in": "body",
            "description": "Job Activity record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobActivity"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Job Activity record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobactivity/{uuid}.json": {
      "get": {
        "tags": [
          "Job Activities"
        ],
        "operationId": "getJobActivities",
        "summary": "Retrieve a Job Activity",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_schedule**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Activity",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Activity record",
            "schema": {
              "$ref": "#/definitions/JobActivity"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-a74f-4f05-afcc-22b378f2065b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "job_uuid": "123e4567-3741-4005-b134-22b37333e41b",
                "staff_uuid": "123e4567-281c-4b0b-844b-22b370e838fb",
                "start_date": "YYYY-MM-DD HH:MM:SS",
                "end_date": "YYYY-MM-DD HH:MM:SS",
                "activity_was_scheduled": "string",
                "activity_was_recorded": "string",
                "activity_was_automated": "string",
                "has_been_opened": "string",
                "has_been_opened_timestamp": "YYYY-MM-DD HH:MM:SS",
                "travel_time_in_seconds": "string",
                "travel_distance_in_meters": "string",
                "allocated_by_staff_uuid": "123e4567-5939-4ba7-a854-22b3735517db",
                "allocated_timestamp": "YYYY-MM-DD HH:MM:SS",
                "material_uuid": "123e4567-7909-48b0-a88d-22b37dff24eb",
                "edit_by_staff_uuid": "123e4567-9c60-47ff-b6fc-22b3777f2ffb"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Activities"
        ],
        "operationId": "updateJobActivities",
        "summary": "Update a Job Activity",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Activity",
            "required": true
          },
          {
            "name": "Job Activity",
            "in": "body",
            "description": "Job Activity fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobActivity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Activities"
        ],
        "operationId": "deleteJobActivities",
        "summary": "Delete a Job Activity",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Activity",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Activity successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/joballocation.json": {
      "get": {
        "tags": [
          "Job Allocations"
        ],
        "operationId": "listJobAllocations",
        "summary": "List all Job Allocations",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_schedule**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Allocations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobAllocation"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-3465-412b-ba50-22b37593448b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "job_uuid": "123e4567-8c47-4a1a-94b3-22b3772921eb",
                  "queue_uuid": "123e4567-168b-4c41-a2e5-22b371e316fb",
                  "staff_uuid": "123e4567-b6dd-48af-b5a7-22b37cc7219b",
                  "allocation_date": "YYYY-MM-DD HH:MM:SS",
                  "allocation_window_uuid": "123e4567-85c0-4fc7-b254-22b3758a050b",
                  "allocated_by_staff_uuid": "123e4567-766c-4cb6-ac16-22b370770b1b",
                  "allocated_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "expiry_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "read_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "completion_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "estimated_duration": "string",
                  "revised_duration": "string",
                  "sort_priority": "string",
                  "requires_acceptance": "string",
                  "acceptance_status": "string",
                  "acceptance_timestamp": "YYYY-MM-DD HH:MM:SS"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Allocations"
        ],
        "operationId": "createJobAllocations",
        "summary": "Create a new Job Allocation",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Job Allocation",
            "in": "body",
            "description": "Job Allocation record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobAllocation"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Job Allocation record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/joballocation/{uuid}.json": {
      "get": {
        "tags": [
          "Job Allocations"
        ],
        "operationId": "getJobAllocations",
        "summary": "Retrieve a Job Allocation",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_schedule**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_schedule"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Allocation",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Allocation record",
            "schema": {
              "$ref": "#/definitions/JobAllocation"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-9447-402c-817a-22b37d8f661b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "job_uuid": "123e4567-2483-4129-b019-22b37921717b",
                "queue_uuid": "123e4567-b9e8-4132-8d11-22b375777e9b",
                "staff_uuid": "123e4567-d954-4089-b1c1-22b377c326db",
                "allocation_date": "YYYY-MM-DD HH:MM:SS",
                "allocation_window_uuid": "123e4567-868c-4492-b7d3-22b37dc0e0bb",
                "allocated_by_staff_uuid": "123e4567-9620-4cad-9a2d-22b3732e4f0b",
                "allocated_timestamp": "YYYY-MM-DD HH:MM:SS",
                "expiry_timestamp": "YYYY-MM-DD HH:MM:SS",
                "read_timestamp": "YYYY-MM-DD HH:MM:SS",
                "completion_timestamp": "YYYY-MM-DD HH:MM:SS",
                "estimated_duration": "string",
                "revised_duration": "string",
                "sort_priority": "string",
                "requires_acceptance": "string",
                "acceptance_status": "string",
                "acceptance_timestamp": "YYYY-MM-DD HH:MM:SS"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Allocations"
        ],
        "operationId": "updateJobAllocations",
        "summary": "Update a Job Allocation",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Allocation",
            "required": true
          },
          {
            "name": "Job Allocation",
            "in": "body",
            "description": "Job Allocation fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobAllocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Allocations"
        ],
        "operationId": "deleteJobAllocations",
        "summary": "Delete a Job Allocation",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Allocation",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Allocation successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobchecklist.json": {
      "get": {
        "tags": [
          "Job Checklists"
        ],
        "operationId": "listJobChecklists",
        "summary": "List all Job Checklists",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Checklists",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobChecklist"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-134f-4efa-b65b-22b372306c5b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "job_uuid": "123e4567-e9f7-4ec1-86af-22b373f395fb",
                  "name": "string",
                  "section_name": "string",
                  "item_type": "string",
                  "sort_order": "number",
                  "completed_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "completed_by_staff_uuid": "123e4567-a389-4a5c-9403-22b37c4c084b",
                  "completed_during_checkin_uuid": "123e4567-6935-45fb-9d13-22b3717df6bb",
                  "reminder_type": "string",
                  "reminder_data": "string",
                  "regarding_object": "string",
                  "regarding_object_uuid": "123e4567-7c95-495c-9602-22b37114299b",
                  "fulfilled_by_object_name": "string",
                  "fulfilled_by_object_uuid": "123e4567-2021-4d36-b22f-22b3750c1e8b",
                  "assigned_to_staff_uuids": "123e4567-591a-47e4-a7f8-22b370f491cb",
                  "is_locked": "number",
                  "assigned_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "assigned_by_staff_uuid": "123e4567-d9dc-4f01-bcd4-22b376eb8e6b"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Checklists"
        ],
        "operationId": "createJobChecklists",
        "summary": "Create a new Job Checklist",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Job Checklist",
            "in": "body",
            "description": "Job Checklist record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobChecklist"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Job Checklist record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobchecklist/{uuid}.json": {
      "get": {
        "tags": [
          "Job Checklists"
        ],
        "operationId": "getJobChecklists",
        "summary": "Retrieve a Job Checklist",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Checklist",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Checklist record",
            "schema": {
              "$ref": "#/definitions/JobChecklist"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-f5ee-47ac-af0d-22b37949eccb",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "job_uuid": "123e4567-7365-4d1b-9b2c-22b371aca9bb",
                "name": "string",
                "section_name": "string",
                "item_type": "string",
                "sort_order": "number",
                "completed_timestamp": "YYYY-MM-DD HH:MM:SS",
                "completed_by_staff_uuid": "123e4567-2b04-4d52-9b5d-22b373d4492b",
                "completed_during_checkin_uuid": "123e4567-9886-4eeb-b26a-22b37481208b",
                "reminder_type": "string",
                "reminder_data": "string",
                "regarding_object": "string",
                "regarding_object_uuid": "123e4567-0334-485e-a3fd-22b3735e4a0b",
                "fulfilled_by_object_name": "string",
                "fulfilled_by_object_uuid": "123e4567-0f51-48b7-84d1-22b375b3a60b",
                "assigned_to_staff_uuids": "123e4567-6b93-4b05-bbfe-22b37e87da4b",
                "is_locked": "number",
                "assigned_timestamp": "YYYY-MM-DD HH:MM:SS",
                "assigned_by_staff_uuid": "123e4567-7390-40c1-bda7-22b378a3a72b"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Checklists"
        ],
        "operationId": "updateJobChecklists",
        "summary": "Update a Job Checklist",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Checklist",
            "required": true
          },
          {
            "name": "Job Checklist",
            "in": "body",
            "description": "Job Checklist fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobChecklist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Checklists"
        ],
        "operationId": "deleteJobChecklists",
        "summary": "Delete a Job Checklist",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Checklist",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Checklist successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobcontact.json": {
      "get": {
        "tags": [
          "Job Contacts"
        ],
        "operationId": "listJobContacts",
        "summary": "List all Job Contacts",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Contacts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobContact"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-30c6-4242-b735-22b37faf8eab",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "job_uuid": "123e4567-5bad-406c-814b-22b370d382fb",
                  "first": "string",
                  "last": "string",
                  "phone": "string",
                  "mobile": "string",
                  "email": "string",
                  "type": "string",
                  "is_primary_contact": "string"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Contacts"
        ],
        "operationId": "createJobContacts",
        "summary": "Create a new Job Contact",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_contacts**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Job Contact",
            "in": "body",
            "description": "Job Contact record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobContact"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Job Contact record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobcontact/{uuid}.json": {
      "get": {
        "tags": [
          "Job Contacts"
        ],
        "operationId": "getJobContacts",
        "summary": "Retrieve a Job Contact",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Contact",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Contact record",
            "schema": {
              "$ref": "#/definitions/JobContact"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-aca9-48ba-b8eb-22b37dd0a5cb",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "job_uuid": "123e4567-4eb5-40c9-bb04-22b37b03d43b",
                "first": "string",
                "last": "string",
                "phone": "string",
                "mobile": "string",
                "email": "string",
                "type": "string",
                "is_primary_contact": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Contacts"
        ],
        "operationId": "updateJobContacts",
        "summary": "Update a Job Contact",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Contact",
            "required": true
          },
          {
            "name": "Job Contact",
            "in": "body",
            "description": "Job Contact fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Contacts"
        ],
        "operationId": "deleteJobContacts",
        "summary": "Delete a Job Contact",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_contacts**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_contacts"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Contact",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Contact successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobmaterial.json": {
      "get": {
        "tags": [
          "Job Materials"
        ],
        "operationId": "listJobMaterials",
        "summary": "List all Job Materials",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_materials**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_materials"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Materials",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobMaterial"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-3e9e-48d0-8024-22b37f98eacb",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "job_uuid": "123e4567-5bd0-46cb-9011-22b37f97922b",
                  "material_uuid": "123e4567-2d9e-49a9-82b1-22b378eea2fb",
                  "name": "string",
                  "quantity": "string",
                  "price": "string",
                  "displayed_amount": "string",
                  "displayed_amount_is_tax_inclusive": "string",
                  "tax_rate_uuid": "123e4567-51de-4c0f-9522-22b371b0189b",
                  "sort_order": "string",
                  "cost": "string",
                  "displayed_cost": "string",
                  "job_material_bundle_uuid": "123e4567-3c26-4837-ab38-22b37b2f9e5b"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Materials"
        ],
        "operationId": "createJobMaterials",
        "summary": "Create a new Job Material",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_materials**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_materials"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Job Material",
            "in": "body",
            "description": "Job Material record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobMaterial"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Job Material record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobmaterial/{uuid}.json": {
      "get": {
        "tags": [
          "Job Materials"
        ],
        "operationId": "getJobMaterials",
        "summary": "Retrieve a Job Material",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_materials**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_materials"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Material",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Material record",
            "schema": {
              "$ref": "#/definitions/JobMaterial"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-67db-49ed-a5e3-22b37280ed4b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "job_uuid": "123e4567-fe80-407b-98ed-22b37568e07b",
                "material_uuid": "123e4567-edcd-4807-ab23-22b37f14ebbb",
                "name": "string",
                "quantity": "string",
                "price": "string",
                "displayed_amount": "string",
                "displayed_amount_is_tax_inclusive": "string",
                "tax_rate_uuid": "123e4567-03d7-4db2-8755-22b37b2b24eb",
                "sort_order": "string",
                "cost": "string",
                "displayed_cost": "string",
                "job_material_bundle_uuid": "123e4567-0da7-4632-82c1-22b37097ef6b"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Materials"
        ],
        "operationId": "updateJobMaterials",
        "summary": "Update a Job Material",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_materials**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_materials"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Material",
            "required": true
          },
          {
            "name": "Job Material",
            "in": "body",
            "description": "Job Material fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobMaterial"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Materials"
        ],
        "operationId": "deleteJobMaterials",
        "summary": "Delete a Job Material",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_materials**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_materials"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Material",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Material successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobmaterialbundle.json": {
      "get": {
        "tags": [
          "Job Material Bundles"
        ],
        "operationId": "listJobMaterialBundles",
        "summary": "List all Job Material Bundles",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Material Bundles",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobMaterialBundle"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-459c-47c0-85c6-22b3742df9cb",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "item_number": "string",
                  "name": "string",
                  "quantity": "string",
                  "sort_order": "number",
                  "material_bundle_uuid": "123e4567-c29f-47fe-83bb-22b3713cc62b",
                  "job_uuid": "123e4567-a00e-47a1-8756-22b378c7192b"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Material Bundles"
        ],
        "operationId": "createJobMaterialBundles",
        "summary": "Create a new Job Material Bundle",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Job Material Bundle",
            "in": "body",
            "description": "Job Material Bundle record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobMaterialBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Job Material Bundle record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobmaterialbundle/{uuid}.json": {
      "get": {
        "tags": [
          "Job Material Bundles"
        ],
        "operationId": "getJobMaterialBundles",
        "summary": "Retrieve a Job Material Bundle",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Material Bundle",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Material Bundle record",
            "schema": {
              "$ref": "#/definitions/JobMaterialBundle"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-16ed-4673-bd1a-22b373258bbb",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "item_number": "string",
                "name": "string",
                "quantity": "string",
                "sort_order": "number",
                "material_bundle_uuid": "123e4567-af81-4dc0-be24-22b37cce1b5b",
                "job_uuid": "123e4567-3118-44fa-866e-22b37f1f880b"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Material Bundles"
        ],
        "operationId": "updateJobMaterialBundles",
        "summary": "Update a Job Material Bundle",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Material Bundle",
            "required": true
          },
          {
            "name": "Job Material Bundle",
            "in": "body",
            "description": "Job Material Bundle fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobMaterialBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Material Bundles"
        ],
        "operationId": "deleteJobMaterialBundles",
        "summary": "Delete a Job Material Bundle",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Material Bundle",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Material Bundle successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobpayment.json": {
      "get": {
        "tags": [
          "Job Payments"
        ],
        "operationId": "listJobPayments",
        "summary": "List all Job Payments",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Payments",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobPayment"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-d9ac-410f-ac29-22b37c5a0f6b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "job_uuid": "123e4567-c01a-49f4-bde0-22b375adff9b",
                  "actioned_by_uuid": "123e4567-03b9-4fef-833f-22b3734aaf0b",
                  "timestamp": "string",
                  "amount": "string",
                  "method": "string",
                  "note": "string",
                  "attachment_uuid": "123e4567-c7bf-4582-9257-22b37d44971b",
                  "is_deposit": "number"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Payments"
        ],
        "operationId": "createJobPayments",
        "summary": "Create a new Job Payment",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Job Payment",
            "in": "body",
            "description": "Job Payment record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Job Payment record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/jobpayment/{uuid}.json": {
      "get": {
        "tags": [
          "Job Payments"
        ],
        "operationId": "getJobPayments",
        "summary": "Retrieve a Job Payment",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Payment",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Payment record",
            "schema": {
              "$ref": "#/definitions/JobPayment"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-dc4f-459b-b098-22b377e401cb",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "job_uuid": "123e4567-4850-4b07-a961-22b3766e748b",
                "actioned_by_uuid": "123e4567-4801-45b8-8b77-22b37619f1fb",
                "timestamp": "string",
                "amount": "string",
                "method": "string",
                "note": "string",
                "attachment_uuid": "123e4567-f0da-49ce-b9c5-22b37ecf30eb",
                "is_deposit": "number"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Payments"
        ],
        "operationId": "updateJobPayments",
        "summary": "Update a Job Payment",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Payment",
            "required": true
          },
          {
            "name": "Job Payment",
            "in": "body",
            "description": "Job Payment fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Payments"
        ],
        "operationId": "deleteJobPayments",
        "summary": "Delete a Job Payment",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Payment",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Payment successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/knowledgearticle.json": {
      "get": {
        "tags": [
          "Knowledge Articles"
        ],
        "operationId": "listKnowledgeArticles",
        "summary": "List all Knowledge Articles",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_knowledge**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_knowledge"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Knowledge Articles",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KnowledgeArticle"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-5fad-4c9d-a104-22b377ec1a4b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string",
                  "content": "string",
                  "article_type": "string",
                  "tags": "string",
                  "relationships": [
                    {
                      "object_name": "string",
                      "object_uuid": "string",
                      "object_description": "string",
                      "create_date": "string"
                    }
                  ]
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Knowledge Articles"
        ],
        "operationId": "createKnowledgeArticles",
        "summary": "Create a new Knowledge Article",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_knowledge**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_knowledge"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Knowledge Article",
            "in": "body",
            "description": "Knowledge Article record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KnowledgeArticle"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Knowledge Article record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/knowledgearticle/{uuid}.json": {
      "get": {
        "tags": [
          "Knowledge Articles"
        ],
        "operationId": "getKnowledgeArticles",
        "summary": "Retrieve a Knowledge Article",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_knowledge**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_knowledge"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Knowledge Article",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Knowledge Article record",
            "schema": {
              "$ref": "#/definitions/KnowledgeArticle"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-be3b-4775-a6cf-22b370c6eacb",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string",
                "content": "string",
                "article_type": "string",
                "tags": "string",
                "relationships": [
                  {
                    "object_name": "string",
                    "object_uuid": "string",
                    "object_description": "string",
                    "create_date": "string"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Knowledge Articles"
        ],
        "operationId": "updateKnowledgeArticles",
        "summary": "Update a Knowledge Article",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Knowledge Article",
            "required": true
          },
          {
            "name": "Knowledge Article",
            "in": "body",
            "description": "Knowledge Article fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KnowledgeArticle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Knowledge Articles"
        ],
        "operationId": "deleteKnowledgeArticles",
        "summary": "Delete a Knowledge Article",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Knowledge Article",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Knowledge Article successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/location.json": {
      "get": {
        "tags": [
          "Locations"
        ],
        "operationId": "listLocations",
        "summary": "List all Locations",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_locations**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_locations"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Locations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Location"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-db85-4b25-b30c-22b373be20cb",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string",
                  "line1": "string",
                  "line2": "string",
                  "line3": "string",
                  "city": "string",
                  "country": "string",
                  "post_code": "string",
                  "phone_1": "string",
                  "state": "string",
                  "lng": "number",
                  "lat": "number"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "operationId": "createLocations",
        "summary": "Create a new Location",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_locations**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_locations"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Location",
            "in": "body",
            "description": "Location record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Location record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/location/{uuid}.json": {
      "get": {
        "tags": [
          "Locations"
        ],
        "operationId": "getLocations",
        "summary": "Retrieve a Location",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_locations**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_locations"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Location",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Location record",
            "schema": {
              "$ref": "#/definitions/Location"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-5d41-411b-b51e-22b371688c7b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string",
                "line1": "string",
                "line2": "string",
                "line3": "string",
                "city": "string",
                "country": "string",
                "post_code": "string",
                "phone_1": "string",
                "state": "string",
                "lng": "number",
                "lat": "number"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "operationId": "updateLocations",
        "summary": "Update a Location",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_locations**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_locations"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Location",
            "required": true
          },
          {
            "name": "Location",
            "in": "body",
            "description": "Location fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "operationId": "deleteLocations",
        "summary": "Delete a Location",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_locations**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_locations"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Location",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Location successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/material.json": {
      "get": {
        "tags": [
          "Materials"
        ],
        "operationId": "listMaterials",
        "summary": "List all Materials",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_inventory**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_inventory"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Materials",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Material"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-f144-44b0-a3b8-22b375297c3b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string",
                  "item_number": "string",
                  "price": "string",
                  "cost": "string",
                  "item_description": "string",
                  "quantity_in_stock": "number",
                  "price_includes_taxes": "number",
                  "use_description_for_invoicing": "string",
                  "tax_rate_uuid": "123e4567-7cd1-4213-83cc-22b378f514eb",
                  "barcode": "string",
                  "item_is_inventoried": "number"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Materials"
        ],
        "operationId": "createMaterials",
        "summary": "Create a new Material",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_inventory**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_inventory"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Material",
            "in": "body",
            "description": "Material record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Material"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Material record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/material/{uuid}.json": {
      "get": {
        "tags": [
          "Materials"
        ],
        "operationId": "getMaterials",
        "summary": "Retrieve a Material",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_inventory**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_inventory"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Material",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Material record",
            "schema": {
              "$ref": "#/definitions/Material"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-10b6-4df8-ba1a-22b37ca5710b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string",
                "item_number": "string",
                "price": "string",
                "cost": "string",
                "item_description": "string",
                "quantity_in_stock": "number",
                "price_includes_taxes": "number",
                "use_description_for_invoicing": "string",
                "tax_rate_uuid": "123e4567-5fc5-4f41-8942-22b3744bffcb",
                "barcode": "string",
                "item_is_inventoried": "number"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Materials"
        ],
        "operationId": "updateMaterials",
        "summary": "Update a Material",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_inventory**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_inventory"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Material",
            "required": true
          },
          {
            "name": "Material",
            "in": "body",
            "description": "Material fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Material"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Materials"
        ],
        "operationId": "deleteMaterials",
        "summary": "Delete a Material",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_inventory**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_inventory"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Material",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Material successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/materialbundle.json": {
      "get": {
        "tags": [
          "Bundles"
        ],
        "operationId": "listBundles",
        "summary": "List all Bundles",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Bundles",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MaterialBundle"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-6394-440f-86a1-22b37687975b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "item_number": "string",
                  "name": "string",
                  "material_list": [
                    {
                      "uuid": "string",
                      "quantity": "number"
                    }
                  ]
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bundles"
        ],
        "operationId": "createBundles",
        "summary": "Create a new Bundle",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Bundle",
            "in": "body",
            "description": "Bundle record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MaterialBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Bundle record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/materialbundle/{uuid}.json": {
      "get": {
        "tags": [
          "Bundles"
        ],
        "operationId": "getBundles",
        "summary": "Retrieve a Bundle",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Bundle",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Bundle record",
            "schema": {
              "$ref": "#/definitions/MaterialBundle"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-217f-4202-82ba-22b37db7b05b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "item_number": "string",
                "name": "string",
                "material_list": [
                  {
                    "uuid": "string",
                    "quantity": "number"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bundles"
        ],
        "operationId": "updateBundles",
        "summary": "Update a Bundle",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Bundle",
            "required": true
          },
          {
            "name": "Bundle",
            "in": "body",
            "description": "Bundle fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MaterialBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bundles"
        ],
        "operationId": "deleteBundles",
        "summary": "Delete a Bundle",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Bundle",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Bundle successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/note.json": {
      "get": {
        "tags": [
          "Notes"
        ],
        "operationId": "listNotes",
        "summary": "List all Notes",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Notes",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Note"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-a2eb-46ed-a662-22b37d25af8b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "related_object": "string",
                  "related_object_uuid": "123e4567-1388-4b13-a9b0-22b3706c79fb",
                  "note": "string",
                  "action_required": "string",
                  "action_completed_by_staff_uuid": "123e4567-f6a2-41eb-baf3-22b37914dedb",
                  "edit_by_staff_uuid": "123e4567-eba2-4ab0-b692-22b373d8989b",
                  "create_date": "YYYY-MM-DD HH:MM:SS"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "operationId": "createNotes",
        "summary": "Create a new Note",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Note",
            "in": "body",
            "description": "Note record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Note"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Note record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/note/{uuid}.json": {
      "get": {
        "tags": [
          "Notes"
        ],
        "operationId": "getNotes",
        "summary": "Retrieve a Note",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Note",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Note record",
            "schema": {
              "$ref": "#/definitions/Note"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-8fa6-4e49-9583-22b37b9fe89b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "related_object": "string",
                "related_object_uuid": "123e4567-261a-4e85-be5d-22b37fb1efeb",
                "note": "string",
                "action_required": "string",
                "action_completed_by_staff_uuid": "123e4567-d2e0-44a0-b283-22b37a12377b",
                "edit_by_staff_uuid": "123e4567-8a69-4b35-8edb-22b37014cfcb",
                "create_date": "YYYY-MM-DD HH:MM:SS"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "operationId": "updateNotes",
        "summary": "Update a Note",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Note",
            "required": true
          },
          {
            "name": "Note",
            "in": "body",
            "description": "Note fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Note"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Notes"
        ],
        "operationId": "deleteNotes",
        "summary": "Delete a Note",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Note",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Note successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/queue.json": {
      "get": {
        "tags": [
          "Job Queues"
        ],
        "operationId": "listJobQueues",
        "summary": "List all Job Queues",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_queues**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_queues"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Job Queues",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Queue"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-79d1-4f1c-9e7e-22b37bc42ffb",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string",
                  "default_timeframe": "number",
                  "subscribed_staff": "string",
                  "requires_assignment": "number"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Queues"
        ],
        "operationId": "createJobQueues",
        "summary": "Create a new Job Queue",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_queues**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_queues"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Job Queue",
            "in": "body",
            "description": "Job Queue record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Queue"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Job Queue record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/queue/{uuid}.json": {
      "get": {
        "tags": [
          "Job Queues"
        ],
        "operationId": "getJobQueues",
        "summary": "Retrieve a Job Queue",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_queues**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_job_queues"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Queue",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Queue record",
            "schema": {
              "$ref": "#/definitions/Queue"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-7a77-41e8-8fb9-22b3724458fb",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string",
                "default_timeframe": "number",
                "subscribed_staff": "string",
                "requires_assignment": "number"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Queues"
        ],
        "operationId": "updateJobQueues",
        "summary": "Update a Job Queue",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_queues**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_queues"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Queue",
            "required": true
          },
          {
            "name": "Job Queue",
            "in": "body",
            "description": "Job Queue fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Queue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Queues"
        ],
        "operationId": "deleteJobQueues",
        "summary": "Delete a Job Queue",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_queues**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_job_queues"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Job Queue",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Queue successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/securityrole.json": {
      "get": {
        "tags": [
          "Security Roles"
        ],
        "operationId": "listSecurityRoles",
        "summary": "List all Security Roles",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Security Roles",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityRole"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-ac99-4e5d-8970-22b37e7a797b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string",
                  "role_description": "string"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Security Roles"
        ],
        "operationId": "createSecurityRoles",
        "summary": "Create a new Security Role",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Security Role",
            "in": "body",
            "description": "Security Role record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityRole"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Security Role record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/securityrole/{uuid}.json": {
      "get": {
        "tags": [
          "Security Roles"
        ],
        "operationId": "getSecurityRoles",
        "summary": "Retrieve a Security Role",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Security Role",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Security Role record",
            "schema": {
              "$ref": "#/definitions/SecurityRole"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-40a5-49d0-b9f1-22b37afeefab",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string",
                "role_description": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Security Roles"
        ],
        "operationId": "updateSecurityRoles",
        "summary": "Update a Security Role",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Security Role",
            "required": true
          },
          {
            "name": "Security Role",
            "in": "body",
            "description": "Security Role fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Security Roles"
        ],
        "operationId": "deleteSecurityRoles",
        "summary": "Delete a Security Role",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Security Role",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Security Role successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/smstemplate.json": {
      "get": {
        "tags": [
          "SMS Templates"
        ],
        "operationId": "listSMSTemplates",
        "summary": "List all SMS Templates",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of SMS Templates",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SmsTemplate"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-2782-47ae-8d93-22b373ae25ab",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string",
                  "message": "string"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SMS Templates"
        ],
        "operationId": "createSMSTemplates",
        "summary": "Create a new SMS Template",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "SMS Template",
            "in": "body",
            "description": "SMS Template record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmsTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created SMS Template record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/smstemplate/{uuid}.json": {
      "get": {
        "tags": [
          "SMS Templates"
        ],
        "operationId": "getSMSTemplates",
        "summary": "Retrieve a SMS Template",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the SMS Template",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "SMS Template record",
            "schema": {
              "$ref": "#/definitions/SmsTemplate"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-ba14-4beb-ab9d-22b3769fe39b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string",
                "message": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SMS Templates"
        ],
        "operationId": "updateSMSTemplates",
        "summary": "Update a SMS Template",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the SMS Template",
            "required": true
          },
          {
            "name": "SMS Template",
            "in": "body",
            "description": "SMS Template fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmsTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SMS Templates"
        ],
        "operationId": "deleteSMSTemplates",
        "summary": "Delete a SMS Template",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the SMS Template",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "SMS Template successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/staff.json": {
      "get": {
        "tags": [
          "Staff Members"
        ],
        "operationId": "listStaffMembers",
        "summary": "List all Staff Members",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_staff**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_staff"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Staff Members",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Staff"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-72cb-4275-bf46-22b377f282eb",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "first": "string",
                  "last": "string",
                  "email": "string",
                  "mobile": "string",
                  "lng": "number",
                  "lat": "number",
                  "geo_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "job_title": "string",
                  "navigating_to_job_uuid": "123e4567-5482-424f-ae41-22b377e4c22b",
                  "navigating_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "navigating_expiry_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "color": "string",
                  "custom_icon_url": "string",
                  "status_message": "string",
                  "status_message_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "can_receive_push_notification": "string",
                  "hide_from_schedule": "number",
                  "security_role_uuid": "123e4567-4f83-4df8-a7e7-22b376eb79eb"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Staff Members"
        ],
        "operationId": "createStaffMembers",
        "summary": "Create a new Staff Member",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_staff**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_staff"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Staff Member",
            "in": "body",
            "description": "Staff Member record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Staff"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Staff Member record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/staff/{uuid}.json": {
      "get": {
        "tags": [
          "Staff Members"
        ],
        "operationId": "getStaffMembers",
        "summary": "Retrieve a Staff Member",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_staff**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_staff"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Staff Member",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Staff Member record",
            "schema": {
              "$ref": "#/definitions/Staff"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-4140-49bd-835a-22b370dcd25b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "first": "string",
                "last": "string",
                "email": "string",
                "mobile": "string",
                "lng": "number",
                "lat": "number",
                "geo_timestamp": "YYYY-MM-DD HH:MM:SS",
                "job_title": "string",
                "navigating_to_job_uuid": "123e4567-0973-4f7c-97e6-22b37e87f65b",
                "navigating_timestamp": "YYYY-MM-DD HH:MM:SS",
                "navigating_expiry_timestamp": "YYYY-MM-DD HH:MM:SS",
                "color": "string",
                "custom_icon_url": "string",
                "status_message": "string",
                "status_message_timestamp": "YYYY-MM-DD HH:MM:SS",
                "can_receive_push_notification": "string",
                "hide_from_schedule": "number",
                "security_role_uuid": "123e4567-21ff-4ed2-93f2-22b37243186b"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Staff Members"
        ],
        "operationId": "updateStaffMembers",
        "summary": "Update a Staff Member",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_staff**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_staff"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Staff Member",
            "required": true
          },
          {
            "name": "Staff Member",
            "in": "body",
            "description": "Staff Member fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Staff"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Staff Members"
        ],
        "operationId": "deleteStaffMembers",
        "summary": "Delete a Staff Member",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_staff**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_staff"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Staff Member",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Staff Member successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/staffmessage.json": {
      "get": {
        "tags": [
          "Staff Messages"
        ],
        "operationId": "listStaffMessages",
        "summary": "List all Staff Messages",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Staff Messages",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StaffMessage"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-bf69-4bc0-acd2-22b37304e3cb",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "from_staff_uuid": "123e4567-8c71-493e-8704-22b377a6961b",
                  "to_staff_uuid": "123e4567-3854-4fd6-b7c0-22b3776d33fb",
                  "sent_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "delivered_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "read_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "message": "string",
                  "regarding_job_uuid": "123e4567-dfef-4dab-8408-22b37ce0e27b",
                  "attached_json": "string"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Staff Messages"
        ],
        "operationId": "createStaffMessages",
        "summary": "Create a new Staff Message",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Staff Message",
            "in": "body",
            "description": "Staff Message record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaffMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Staff Message record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/staffmessage/{uuid}.json": {
      "get": {
        "tags": [
          "Staff Messages"
        ],
        "operationId": "getStaffMessages",
        "summary": "Retrieve a Staff Message",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Staff Message",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Staff Message record",
            "schema": {
              "$ref": "#/definitions/StaffMessage"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-edae-4416-8e49-22b37a4258eb",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "from_staff_uuid": "123e4567-6f48-4e85-a578-22b37213dbdb",
                "to_staff_uuid": "123e4567-4290-4dfa-96bf-22b3743267fb",
                "sent_timestamp": "YYYY-MM-DD HH:MM:SS",
                "delivered_timestamp": "YYYY-MM-DD HH:MM:SS",
                "read_timestamp": "YYYY-MM-DD HH:MM:SS",
                "message": "string",
                "regarding_job_uuid": "123e4567-827c-41b1-bd2f-22b37211863b",
                "attached_json": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Staff Messages"
        ],
        "operationId": "updateStaffMessages",
        "summary": "Update a Staff Message",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Staff Message",
            "required": true
          },
          {
            "name": "Staff Message",
            "in": "body",
            "description": "Staff Message fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaffMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Staff Messages"
        ],
        "operationId": "deleteStaffMessages",
        "summary": "Delete a Staff Message",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Staff Message",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Staff Message successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task.json": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "operationId": "listTasks",
        "summary": "List all Tasks",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_tasks**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_tasks"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Tasks",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-853d-4989-a482-22b37d36e74b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "due_date": "YYYY-MM-DD",
                  "task_details": "string",
                  "name": "string",
                  "related_object": "string",
                  "related_object_uuid": "123e4567-b0ea-4e49-b628-22b3787b71ab",
                  "task_complete": "string",
                  "completed_timestamp": "YYYY-MM-DD HH:MM:SS",
                  "completed_by_staff_uuid": "123e4567-ae14-4db6-8e8b-22b3749ae45b",
                  "assigned_to_staff_uuid": "123e4567-2bdc-40ea-9f68-22b373d713bb",
                  "lng": "number",
                  "lat": "number",
                  "created_by_staff_uuid": "123e4567-0aee-4498-a88f-22b37599e0eb",
                  "create_date": "YYYY-MM-DD HH:MM:SS"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "operationId": "createTasks",
        "summary": "Create a new Task",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_tasks**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_tasks"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Task",
            "in": "body",
            "description": "Task record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Task record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task/{uuid}.json": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "operationId": "getTasks",
        "summary": "Retrieve a Task",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_tasks**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "read_tasks"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Task",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Task record",
            "schema": {
              "$ref": "#/definitions/Task"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-f393-4e16-86f8-22b3719c6fab",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "due_date": "YYYY-MM-DD",
                "task_details": "string",
                "name": "string",
                "related_object": "string",
                "related_object_uuid": "123e4567-9ed0-404a-82d2-22b37b361d0b",
                "task_complete": "string",
                "completed_timestamp": "YYYY-MM-DD HH:MM:SS",
                "completed_by_staff_uuid": "123e4567-4437-4ab3-8337-22b37d9080ab",
                "assigned_to_staff_uuid": "123e4567-3985-4c04-afc4-22b370c6cb2b",
                "lng": "number",
                "lat": "number",
                "created_by_staff_uuid": "123e4567-b3f9-4b4b-90c4-22b37991803b",
                "create_date": "YYYY-MM-DD HH:MM:SS"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "operationId": "updateTasks",
        "summary": "Update a Task",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_tasks**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_tasks"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Task",
            "required": true
          },
          {
            "name": "Task",
            "in": "body",
            "description": "Task fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "operationId": "deleteTasks",
        "summary": "Delete a Task",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_tasks**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "manage_tasks"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Task",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Task successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/taxrate.json": {
      "get": {
        "tags": [
          "Tax Rates"
        ],
        "operationId": "listTaxRates",
        "summary": "List all Tax Rates",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Tax Rates",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxRate"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-e898-429d-8aba-22b379cd873b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string",
                  "amount": "string",
                  "is_default_tax_rate": "number"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tax Rates"
        ],
        "operationId": "createTaxRates",
        "summary": "Create a new Tax Rate",
        "description": "\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Tax Rate",
            "in": "body",
            "description": "Tax Rate record to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxRate"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-record-uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of newly created Tax Rate record"
              }
            },
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/taxrate/{uuid}.json": {
      "get": {
        "tags": [
          "Tax Rates"
        ],
        "operationId": "getTaxRates",
        "summary": "Retrieve a Tax Rate",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Tax Rate",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Tax Rate record",
            "schema": {
              "$ref": "#/definitions/TaxRate"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-0739-49c6-b127-22b37e5d0d3b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string",
                "amount": "string",
                "is_default_tax_rate": "number"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tax Rates"
        ],
        "operationId": "updateTaxRates",
        "summary": "Update a Tax Rate",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Tax Rate",
            "required": true
          },
          {
            "name": "Tax Rate",
            "in": "body",
            "description": "Tax Rate fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxRate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tax Rates"
        ],
        "operationId": "deleteTaxRates",
        "summary": "Delete a Tax Rate",
        "description": "\n\t\t\t\nIn ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.\n\n\t\t\t",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Tax Rate",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Tax Rate successfully archived",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vendor.json": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "operationId": "listVendors",
        "summary": "List all Vendors",
        "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **vendor**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "vendor"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Vendors",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vendor"
              }
            },
            "examples": {
              "application/json": [
                {
                  "uuid": "123e4567-a79e-4096-b409-22b37b52330b",
                  "active": 1,
                  "edit_date": "YYYY-MM-DD HH:MM:SS",
                  "name": "string",
                  "abn_number": "string",
                  "business_number": "string",
                  "website": "string",
                  "email": "string",
                  "email_accounts": "string",
                  "billing_address": "string",
                  "accepted_payment_methods": "string",
                  "default_region": "string",
                  "currency": "string",
                  "opening_time_monday": "string",
                  "closing_time_monday": "string",
                  "opening_time_tuesday": "string",
                  "closing_time_tuesday": "string",
                  "opening_time_wednesday": "string",
                  "closing_time_wednesday": "string",
                  "opening_time_thursday": "string",
                  "closing_time_thursday": "string",
                  "opening_time_friday": "string",
                  "closing_time_friday": "string",
                  "opening_time_saturday": "string",
                  "closing_time_saturday": "string",
                  "opening_time_sunday": "string",
                  "closing_time_sunday": "string",
                  "timezone_name": "string",
                  "invoice_terms": "string",
                  "job_default_status": "string"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vendor/{uuid}.json": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "operationId": "getVendors",
        "summary": "Retrieve a Vendor",
        "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **vendor**.\n\n\t\t\t",
        "security": [
          {
            "oauth2": [
              "vendor"
            ]
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Vendor",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Vendor record",
            "schema": {
              "$ref": "#/definitions/Vendor"
            },
            "examples": {
              "application/json": {
                "uuid": "123e4567-821e-40b1-a7df-22b371b58d2b",
                "active": 1,
                "edit_date": "YYYY-MM-DD HH:MM:SS",
                "name": "string",
                "abn_number": "string",
                "business_number": "string",
                "website": "string",
                "email": "string",
                "email_accounts": "string",
                "billing_address": "string",
                "accepted_payment_methods": "string",
                "default_region": "string",
                "currency": "string",
                "opening_time_monday": "string",
                "closing_time_monday": "string",
                "opening_time_tuesday": "string",
                "closing_time_tuesday": "string",
                "opening_time_wednesday": "string",
                "closing_time_wednesday": "string",
                "opening_time_thursday": "string",
                "closing_time_thursday": "string",
                "opening_time_friday": "string",
                "closing_time_friday": "string",
                "opening_time_saturday": "string",
                "closing_time_saturday": "string",
                "opening_time_sunday": "string",
                "closing_time_sunday": "string",
                "timezone_name": "string",
                "invoice_terms": "string",
                "job_default_status": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vendors"
        ],
        "operationId": "updateVendors",
        "summary": "Update a Vendor",
        "description": "",
        "security": [
          {
            "oauth2": []
          },
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "description": "UUID of the Vendor",
            "required": true
          },
          {
            "name": "Vendor",
            "in": "body",
            "description": "Vendor fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Result"
            },
            "examples": {
              "application/json": {
                "errorCode": "0",
                "message": "OK"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "errorCode": "1000",
                "message": "An error occurred completing your request"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://api.servicem8.com/oauth/authorize",
            "tokenUrl": "https://api.servicem8.com/oauth/access_token",
            "scopes": {
              "staff_locations": "Access to real-time GPS information about staff",
              "staff_activity": "Access to clock on, lunch break and clock off information about staff",
              "publish_sms": "Access to send SMS messages to customers and/or staff on your behalf. Note sending SMS messages will incur account charges.",
              "publish_email": "Access to send Email messages to customers and/or staff on your behalf",
              "vendor": "Access to basic account information",
              "vendor_logo": "Access to account logo",
              "vendor_email": "Access to account holder email address",
              "read_locations": "Read-only access to Location Endpoint",
              "manage_locations": "Full access to Location Endpoint",
              "read_staff": "Read-only access to Staff Endpoint",
              "manage_staff": "Full access to Staff Endpoint",
              "read_customers": "Read-only access to Company Endpoint",
              "manage_customers": "Full access to Company Endpoint",
              "read_customer_contacts": "Read-only access to CompanyContact Endpoint",
              "manage_customer_contacts": "Full access to CompanyContact Endpoint",
              "read_jobs": "Read-only access to Job Endpoint",
              "manage_jobs": "Full access to Job Endpoint",
              "create_jobs": "Ability to create jobs on behalf of account. Note creating jobs may incur account charges.",
              "read_job_contacts": "Read-only access to JobContact Endpoint",
              "manage_job_contacts": "Full access to JobContact Endpoint",
              "read_job_materials": "Read-only access to JobMaterials Endpoint",
              "manage_job_materials": "Full access to JobMaterials Endpoint",
              "read_job_categories": "Read-only access to Categories Endpoint",
              "manage_job_categories": "Full access to Categories Endpoint",
              "read_job_queues": "Read-only access to Job Queues Endpoint",
              "manage_job_queues": "Full access to Job Queues Endpoint",
              "read_tasks": "Read-only access to Tasks Endpoint",
              "manage_tasks": "Full access to Tasks Endpoint",
              "read_schedule": "Read-only access to JobActivity Endpoint",
              "manage_schedule": "Full access to JobActivity Endpoint",
              "read_inventory": "Read-only access to Materials Endpoint",
              "manage_inventory": "Full access to Materials Endpoint",
              "read_job_notes": "Read-only access to job notes",
              "publish_job_notes": "Ability to add new job notes",
              "read_job_photos": "Read-only access to job photos",
              "publish_job_photos": "Ability to add new job photos",
              "read_attachments": "Read-only access to Attachments Endpoint",
              "manage_attachments": "Full access to Attachments Endpoint",
              "read_inbox": "Read-only access to inbox messages",
              "read_messages": "Read-only access to staff messages",
              "manage_notifications": "Ability to read notifications and mark as read",
              "manage_templates": "Full-access to email, sms and document templates",
              "manage_badges": "Full-access to create/modify job badges"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Result": {
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "number",
          "format": "int32",
          "example": "0"
        },
        "message": {
          "type": "string",
          "example": "OK"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "number",
          "format": "int32",
          "example": "1000"
        },
        "message": {
          "type": "string",
          "example": "An error occurred completing your request"
        }
      }
    },
    "AllocationWindow": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-335a-4a09-8af9-22b3718d7bcb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string"
        },
        "start_time": {
          "type": "number"
        },
        "end_time": {
          "type": "number"
        },
        "sort_priority": {
          "type": "number"
        }
      }
    },
    "Asset": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-b65e-4501-879e-22b37f98c3db"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "company_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-6f24-483b-9c95-22b373384d9b",
          "description": "UUID of the Client to which this Asset is attached"
        },
        "asset_code": {
          "type": "string",
          "description": "The unique code printed on this Asset's attached label (read only) (Read-only)"
        },
        "asset_type_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-67b8-4ed8-9795-22b37e0587eb",
          "description": "UUID of an Asset Type which defines the fields that can be stored for this Asset (read only) (Read-only)"
        },
        "name": {
          "type": "string",
          "description": "User-facing description of this asset",
          "maxLength": 100
        },
        "lat": {
          "type": "number",
          "format": "float",
          "description": "Latitude component of the Asset's location in degrees"
        },
        "lng": {
          "type": "number",
          "format": "float",
          "description": "Longitude component of the Asset's location in degrees"
        },
        "geo_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "description": "Timestamp at which the Asset's location was last updated"
        },
        "altitude": {
          "type": "number",
          "description": "Altitude component of the Asset's location in metres"
        },
        "field_data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid",
                "description": "Must be the UUID of an AssetTypeField"
              },
              "fieldType": {
                "type": "string"
              },
              "fieldName": {
                "type": "string"
              },
              "fieldValue": {
                "type": "string",
                "description": "Convert all values to string. Dates shall be in Y-m-d format."
              },
              "sortOrder": {
                "type": "number"
              }
            },
            "required": [
              "uuid",
              "fieldType",
              "fieldName",
              "fieldValue",
              "sortOrder"
            ]
          }
        }
      }
    },
    "AssetType": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-d702-451c-8d13-22b3758e63bb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "AssetTypeField": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-bc6a-4df6-a7f3-22b378aec6cb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "asset_type_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-0cd0-44d6-b66e-22b377ee2aeb",
          "description": "(Read-only)"
        },
        "name": {
          "type": "string"
        },
        "field_data": {
          "type": "object",
          "properties": {
            "fieldType": {
              "type": "string",
              "enum": [
                "Text",
                "Number",
                "Date",
                "Multiple Choice"
              ]
            },
            "mandatory": {
              "type": "boolean"
            },
            "choices": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "fieldType",
            "mandatory"
          ]
        },
        "sort_order": {
          "type": "number"
        }
      },
      "required": [
        "name"
      ]
    },
    "Attachment": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-2056-474f-8ab2-22b37d601f0b"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "related_object": {
          "type": "string"
        },
        "related_object_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-b943-4084-a2cc-22b37e6b44db"
        },
        "attachment_name": {
          "type": "string",
          "description": "The security roles description",
          "maxLength": 127
        },
        "file_type": {
          "type": "string",
          "description": "Location's name",
          "maxLength": 50
        },
        "created_by_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-d7f3-4486-b5f1-22b37ef270db"
        },
        "timestamp": {
          "type": "string"
        },
        "attachment_source": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "lng": {
          "type": "number",
          "format": "float"
        },
        "lat": {
          "type": "number",
          "format": "float"
        },
        "photo_width": {
          "type": "string"
        },
        "photo_height": {
          "type": "string"
        },
        "extracted_info": {
          "type": "string"
        },
        "is_favourite": {
          "type": "string"
        },
        "class_name": {
          "type": "string"
        },
        "metadata": {
          "type": "string"
        }
      }
    },
    "Badge": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-0508-45f5-95cc-22b375a2b5cb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string",
          "description": "Badge Name",
          "maxLength": 50
        },
        "automatically_allocated": {
          "type": "string"
        },
        "file_name": {
          "type": "string"
        },
        "regarding_form_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-193d-43a0-beb1-22b3782d190b"
        },
        "regarding_asset_type_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-6038-46e4-9745-22b37bd9e03b"
        }
      },
      "required": [
        "name"
      ]
    },
    "Category": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-6387-409d-892a-22b37449cceb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string"
        },
        "colour": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "Company": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-2d4b-4026-96a4-22b37e42ca7b"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string",
          "description": "Company Name",
          "maxLength": 100
        },
        "website": {
          "type": "string"
        },
        "abn_number": {
          "type": "string"
        },
        "is_individual": {
          "type": "string"
        },
        "address_street": {
          "type": "string",
          "maxLength": 500
        },
        "address_city": {
          "type": "string"
        },
        "address_state": {
          "type": "string"
        },
        "address_postcode": {
          "type": "string"
        },
        "address_country": {
          "type": "string"
        },
        "fax_number": {
          "type": "string"
        },
        "address": {
          "type": "string",
          "description": "Password",
          "maxLength": 500
        },
        "billing_address": {
          "type": "string",
          "description": "Confirm Password",
          "maxLength": 500
        },
        "badges": {
          "type": "string"
        },
        "tax_rate_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-cef0-466b-b01e-22b374a25b4b"
        },
        "billing_attention": {
          "type": "string"
        },
        "payment_terms": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "CompanyContact": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-f73d-4610-a29f-22b3783f184b"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "company_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-d17f-466b-9f85-22b37d2b14db"
        },
        "first": {
          "type": "string"
        },
        "last": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "type": {
          "type": "string"
        },
        "is_primary_contact": {
          "type": "string"
        }
      }
    },
    "EmailTemplate": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-40a5-412d-aeaf-22b37fefd38b"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string",
          "maxLength": 50
        },
        "subject": {
          "type": "string",
          "maxLength": 100
        },
        "message": {
          "type": "string",
          "maxLength": 1000
        }
      },
      "required": [
        "name"
      ]
    },
    "Feedback": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-b64a-49e3-abb4-22b37f5098eb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "timestamp": {
          "type": "string"
        },
        "related_object": {
          "type": "string"
        },
        "related_object_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-aad2-483f-870a-22b37595d29b"
        },
        "rating": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "Form": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-8ffa-44f0-a876-22b37e275afb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string"
        },
        "document_template_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-d393-4c14-b4e5-22b37e8adb8b"
        },
        "can_be_used_independently": {
          "type": "string"
        },
        "badge_mandatory_state": {
          "type": "string"
        },
        "template_fields": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "fieldType": {
                "type": "string",
                "enum": [
                  "Text"
                ]
              },
              "value": {
                "type": "string"
              },
              "sortOrder": {
                "type": "integer"
              }
            },
            "required": [
              "name",
              "fieldType",
              "value",
              "sortOrder"
            ]
          },
          "minItems": 0,
          "maxItems": 10
        }
      }
    },
    "FormField": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-aeac-4538-8225-22b377b5e0cb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "form_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-0868-4604-ae5b-22b37649d47b"
        },
        "name": {
          "type": "string"
        },
        "field_data_json": {
          "type": "string"
        },
        "sort_order": {
          "type": "string"
        }
      }
    },
    "FormResponse": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-8ce5-4840-a724-22b37750b9eb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "form_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-0f33-40a1-bb02-22b37b050f5b"
        },
        "staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-1130-4b02-8524-22b374bc3c2b"
        },
        "regarding_object": {
          "type": "string"
        },
        "regarding_object_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-7627-489f-8b06-22b3726b344b"
        },
        "field_data": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "form_by_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-8385-47a4-8196-22b37e33194b"
        },
        "document_attachment_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-9488-4e97-bab5-22b37fae1dbb"
        },
        "asset_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-9b4c-463a-b9bd-22b37b1da88b"
        }
      }
    },
    "Job": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-9630-4978-976c-22b37f644b2b"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "created_by_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-605e-4c2e-922b-22b37aa4e43b"
        },
        "date": {
          "type": "string",
          "example": "YYYY-MM-DD"
        },
        "company_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-220b-4003-b374-22b376be7deb"
        },
        "job_address": {
          "type": "string",
          "maxLength": 500
        },
        "billing_address": {
          "type": "string",
          "maxLength": 500
        },
        "status": {
          "type": "string",
          "maxLength": 20
        },
        "job_description": {
          "type": "string"
        },
        "work_done_description": {
          "type": "string",
          "description": "Email Address"
        },
        "lng": {
          "type": "number",
          "format": "float"
        },
        "lat": {
          "type": "number",
          "format": "float"
        },
        "generated_job_id": {
          "type": "string",
          "description": "(Read-only)"
        },
        "payment_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "payment_actioned_by_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-ce74-4177-b661-22b374d0826b"
        },
        "payment_method": {
          "type": "string"
        },
        "payment_amount": {
          "type": "string"
        },
        "total_invoice_amount": {
          "type": "string"
        },
        "category_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-3ba6-4522-a7c0-22b37f5889bb"
        },
        "payment_note": {
          "type": "string"
        },
        "geo_is_valid": {
          "type": "string"
        },
        "purchase_order_number": {
          "type": "string",
          "maxLength": 100
        },
        "invoice_sent": {
          "type": "string"
        },
        "invoice_sent_stamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "ready_to_invoice": {
          "type": "string"
        },
        "ready_to_invoice_stamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "payment_processed": {
          "type": "string"
        },
        "payment_processed_stamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "geo_country": {
          "type": "string"
        },
        "geo_postcode": {
          "type": "string"
        },
        "geo_state": {
          "type": "string"
        },
        "geo_city": {
          "type": "string"
        },
        "geo_street": {
          "type": "string"
        },
        "geo_number": {
          "type": "string"
        },
        "queue_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-fdca-4f7f-9920-22b376d9f13b"
        },
        "queue_expiry_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "queue_assigned_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-24ec-487f-83dd-22b3733ba5db"
        },
        "payment_received": {
          "type": "string"
        },
        "payment_received_stamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "badges": {
          "type": "string"
        },
        "quote_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "quote_sent": {
          "type": "number",
          "description": "(Read-only). \n\nValid values are [0,1]",
          "enum": [
            0,
            1
          ]
        },
        "quote_sent_stamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "description": "(Read-only)"
        },
        "work_order_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "completion_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "completion_actioned_by_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-0b40-44e2-a545-22b3738f11cb"
        },
        "unsuccessful_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "job_is_scheduled_until_stamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "active_network_request_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-af54-42c2-8bf1-22b370b75ebb"
        },
        "related_knowledge_articles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "knowledge_article_uuid": {
                "type": "string",
                "format": "uuid"
              },
              "relevance": {
                "type": "number"
              }
            },
            "required": [
              "knowledge_article_uuid",
              "relevance"
            ]
          }
        }
      },
      "required": [
        "status"
      ]
    },
    "JobActivity": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-3253-4c74-9fa9-22b372f25a5b"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "job_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-56ac-4ca3-afb5-22b37f43c40b"
        },
        "staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-b575-4718-92e8-22b37bddc8ab"
        },
        "start_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "end_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "activity_was_scheduled": {
          "type": "string"
        },
        "activity_was_recorded": {
          "type": "string"
        },
        "activity_was_automated": {
          "type": "string"
        },
        "has_been_opened": {
          "type": "string"
        },
        "has_been_opened_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "travel_time_in_seconds": {
          "type": "string"
        },
        "travel_distance_in_meters": {
          "type": "string"
        },
        "allocated_by_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-3648-40b8-97d8-22b37ccb99db"
        },
        "allocated_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "material_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-17b4-44cd-97b3-22b37078865b"
        },
        "edit_by_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-298c-4d64-8457-22b37d84381b",
          "readOnly": true,
          "description": "Staff Member who last modified record"
        }
      }
    },
    "JobAllocation": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-0abd-4ecf-9744-22b37516fefb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "job_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-eac2-4212-aeb1-22b370c77cdb"
        },
        "queue_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-6cbf-43e9-afd9-22b37e6eea7b"
        },
        "staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-c0ee-4eb3-8c80-22b3736121ab"
        },
        "allocation_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "allocation_window_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-db88-481d-b062-22b373ed1afb"
        },
        "allocated_by_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-f60e-4849-8258-22b3765e6b0b"
        },
        "allocated_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "expiry_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "read_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "completion_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "estimated_duration": {
          "type": "string"
        },
        "revised_duration": {
          "type": "string"
        },
        "sort_priority": {
          "type": "string"
        },
        "requires_acceptance": {
          "type": "string"
        },
        "acceptance_status": {
          "type": "string"
        },
        "acceptance_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        }
      }
    },
    "JobChecklist": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-82ea-4b41-a99d-22b379d1990b"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "job_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-7f41-44f3-bed9-22b375bc8fcb"
        },
        "name": {
          "type": "string",
          "maxLength": 512
        },
        "section_name": {
          "type": "string",
          "maxLength": 256
        },
        "item_type": {
          "type": "string"
        },
        "sort_order": {
          "type": "number"
        },
        "completed_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "completed_by_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-e9dc-4495-af7c-22b37ecbd1ab"
        },
        "completed_during_checkin_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-8221-4e6f-ad3f-22b37614cbbb"
        },
        "reminder_type": {
          "type": "string"
        },
        "reminder_data": {
          "type": "string",
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "absoluteDateTime": {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}:\\d{2}:\\d{2}$"
                }
              },
              "required": [
                "absoluteDateTime"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "relativeDateTime": {
                  "type": "object",
                  "properties": {
                    "baseDate": {
                      "type": "string",
                      "enum": [
                        "JOB_CREATE_TIME",
                        "NEXT_BOOKING_TIME"
                      ]
                    },
                    "unit": {
                      "type": "string",
                      "enum": [
                        "DAY",
                        "HOUR",
                        "MINUTE"
                      ]
                    },
                    "quantity": {
                      "type": "integer",
                      "description": "Number of units to add/subtract from base date. Negative quantities mean the reminder occurs before the base date. Reminders scheduled into the past will not occur."
                    }
                  },
                  "required": [
                    "baseDate",
                    "unit",
                    "quantity"
                  ]
                }
              },
              "required": [
                "relativeDateTime"
              ],
              "additionalProperties": false
            }
          ]
        },
        "regarding_object": {
          "type": "string",
          "description": "The type of object which this checklist item is related to. For example, for Form checklists, this will be 'Form'."
        },
        "regarding_object_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-14c9-4dd3-a6f0-22b374c54c9b",
          "description": "The UUID of the object which this checklists item is related to. For example, for Form checklists, this is the UUID of the Form that must be completed to complete the checklist item."
        },
        "fulfilled_by_object_name": {
          "type": "string",
          "description": "The type of object which completes this checklist item. For example, for Form checklists, this will be 'FormResponse'."
        },
        "fulfilled_by_object_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-8705-4a42-8e6a-22b370a17f9b",
          "description": "The UUID of the object which completes this checklist item. For example, for Form checklists, this references the UUID of a FormResponse record."
        },
        "assigned_to_staff_uuids": {
          "type": "array",
          "format": "uuid",
          "example": "123e4567-8273-456f-8434-22b37f7ef7ab",
          "items": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "description": "Must be the UUID of a Staff record"
          },
          "maxItems": 1
        },
        "is_locked": {
          "type": "number",
          "description": "If this checklist item is locked (read-only) and cannot be modified. This is set by the system when the checklist item is created from a Task or Network Request. (Read-only). \n\nValid values are [0,1]",
          "enum": [
            0,
            1
          ]
        },
        "assigned_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "description": "The timestamp when the checklist item was assigned to the staff member. (Read-only)"
        },
        "assigned_by_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-f0eb-4e41-83bf-22b37825200b",
          "description": "The UUID of the staff member who assigned the checklist item to the staff member. (Read-only)"
        }
      }
    },
    "JobContact": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-3a65-40fa-baaa-22b37e9b7ffb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "job_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-e75b-4501-868d-22b37dd9e63b"
        },
        "first": {
          "type": "string"
        },
        "last": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "type": {
          "type": "string"
        },
        "is_primary_contact": {
          "type": "string"
        }
      }
    },
    "JobMaterial": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-03ef-412f-88b0-22b373b30a0b"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "job_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-608b-4de1-a938-22b371bff82b"
        },
        "material_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-6ab0-49d8-9ccc-22b37eb0b0db"
        },
        "name": {
          "type": "string",
          "maxLength": 500
        },
        "quantity": {
          "type": "string",
          "maxLength": 100
        },
        "price": {
          "type": "string"
        },
        "displayed_amount": {
          "type": "string"
        },
        "displayed_amount_is_tax_inclusive": {
          "type": "string"
        },
        "tax_rate_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-f0d9-41b5-94bb-22b378e7bd4b"
        },
        "sort_order": {
          "type": "string"
        },
        "cost": {
          "type": "string"
        },
        "displayed_cost": {
          "type": "string"
        },
        "job_material_bundle_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-2b6d-49d8-924f-22b370c53a3b",
          "description": "UUID of a JobMaterialBundle which this JobMaterial belongs to. The default value is blank, which means that the JobMaterial is not part of a JobMaterialBundle."
        }
      },
      "required": [
        "quantity"
      ]
    },
    "JobMaterialBundle": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-416d-4f0f-9a64-22b370a219eb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "item_number": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "quantity": {
          "type": "string"
        },
        "sort_order": {
          "type": "number"
        },
        "material_bundle_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-470b-4f09-b047-22b37437a6db",
          "description": "UUID of the MaterialBundle which this JobMaterialBundle was originally created from."
        },
        "job_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-597e-411c-8c70-22b3714416cb"
        }
      }
    },
    "JobPayment": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-2552-48dd-b5e5-22b3712782fb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "job_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-1f3d-4b80-90eb-22b37627766b"
        },
        "actioned_by_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-befb-4a24-a7cc-22b3798265fb"
        },
        "timestamp": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "attachment_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-82a0-4039-913c-22b373a7cecb"
        },
        "is_deposit": {
          "type": "number",
          "description": "(Read-only). \n\nValid values are [0,1]",
          "enum": [
            0,
            1
          ]
        }
      }
    },
    "KnowledgeArticle": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-4146-49dd-95f2-22b3742e34eb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "article_type": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "relationships": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "object_name": {
                "type": "string",
                "enum": [
                  "Job",
                  "job"
                ]
              },
              "object_uuid": {
                "type": "string",
                "format": "uuid"
              },
              "object_description": {
                "type": "string"
              },
              "create_date": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}:\\d{2}:\\d{2}$"
              }
            },
            "required": [
              "object_name",
              "object_uuid"
            ]
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "Location": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-5722-45b4-bf58-22b376cf0d8b"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string",
          "description": "Location's name",
          "maxLength": 50
        },
        "line1": {
          "type": "string",
          "maxLength": 100
        },
        "line2": {
          "type": "string",
          "maxLength": 100
        },
        "line3": {
          "type": "string",
          "maxLength": 100
        },
        "city": {
          "type": "string",
          "description": "Email Address",
          "maxLength": 50
        },
        "country": {
          "type": "string",
          "description": "Email Address",
          "maxLength": 100
        },
        "post_code": {
          "type": "string",
          "description": "Email Address",
          "maxLength": 100
        },
        "phone_1": {
          "type": "string",
          "maxLength": 100
        },
        "state": {
          "type": "string",
          "description": "Address State",
          "maxLength": 400
        },
        "lng": {
          "type": "number",
          "format": "float"
        },
        "lat": {
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "name"
      ]
    },
    "Material": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-a1af-4682-914c-22b37779fd1b"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string",
          "maxLength": 70
        },
        "item_number": {
          "type": "string",
          "maxLength": 30
        },
        "price": {
          "type": "string"
        },
        "cost": {
          "type": "string"
        },
        "item_description": {
          "type": "string"
        },
        "quantity_in_stock": {
          "type": "number"
        },
        "price_includes_taxes": {
          "type": "number",
          "enum": [
            0,
            1
          ],
          "description": "\n\nValid values are [0,1]"
        },
        "use_description_for_invoicing": {
          "type": "string"
        },
        "tax_rate_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-cefd-40f8-adba-22b37783d50b"
        },
        "barcode": {
          "type": "string"
        },
        "item_is_inventoried": {
          "type": "number",
          "enum": [
            0,
            1
          ],
          "description": "\n\nValid values are [0,1]"
        }
      },
      "required": [
        "name"
      ]
    },
    "MaterialBundle": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-6cdc-49c1-9605-22b378b00d8b"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "item_number": {
          "type": "string",
          "maxLength": 30
        },
        "name": {
          "type": "string"
        },
        "material_list": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid",
                "description": "Must be the UUID of a Material record"
              },
              "quantity": {
                "type": "number",
                "minimum": 0
              }
            },
            "required": [
              "uuid",
              "quantity"
            ]
          },
          "minItems": 1,
          "maxItems": 50
        }
      },
      "required": [
        "item_number"
      ]
    },
    "Note": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-7893-4086-a98d-22b37423bbdb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "related_object": {
          "type": "string"
        },
        "related_object_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-8b36-4140-a580-22b3776299ab"
        },
        "note": {
          "type": "string"
        },
        "action_required": {
          "type": "string"
        },
        "action_completed_by_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-6495-4f37-9495-22b37605bb8b"
        },
        "edit_by_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-c36d-4796-a1fc-22b372c38ddb",
          "readOnly": true,
          "description": "Staff Member who last modified record"
        },
        "create_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "description": "Record creation timestamp"
        }
      }
    },
    "Queue": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-5bb6-4570-82bd-22b378554dbb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string"
        },
        "default_timeframe": {
          "type": "number"
        },
        "subscribed_staff": {
          "type": "string"
        },
        "requires_assignment": {
          "type": "number",
          "enum": [
            0,
            1
          ],
          "description": "\n\nValid values are [0,1]"
        }
      }
    },
    "SecurityRole": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-cfb2-4c07-9cc6-22b37c7784db"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string",
          "description": "The name given to the security role",
          "maxLength": 50
        },
        "role_description": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "SmsTemplate": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-cc44-4fbf-91f7-22b3739d7d3b"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string",
          "maxLength": 50
        },
        "message": {
          "type": "string",
          "maxLength": 612
        }
      },
      "required": [
        "name"
      ]
    },
    "Staff": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-15a9-4356-b87c-22b373bf732b"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "first": {
          "type": "string",
          "description": "Staff First Name",
          "maxLength": 30
        },
        "last": {
          "type": "string",
          "description": "Staff Last Name",
          "maxLength": 30
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Staff Email Address. This is also your login name."
        },
        "mobile": {
          "type": "string"
        },
        "lng": {
          "type": "number",
          "format": "float"
        },
        "lat": {
          "type": "number",
          "format": "float"
        },
        "geo_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "job_title": {
          "type": "string"
        },
        "navigating_to_job_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-783c-4e9d-b97a-22b375693f7b"
        },
        "navigating_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "navigating_expiry_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "color": {
          "type": "string"
        },
        "custom_icon_url": {
          "type": "string"
        },
        "status_message": {
          "type": "string"
        },
        "status_message_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "can_receive_push_notification": {
          "type": "string"
        },
        "hide_from_schedule": {
          "type": "number",
          "enum": [
            0,
            1
          ],
          "description": "\n\nValid values are [0,1]"
        },
        "security_role_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-e4a2-42d2-9d74-22b3794b662b"
        }
      },
      "required": [
        "first",
        "last",
        "email"
      ]
    },
    "StaffMessage": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-b384-4193-9d24-22b378a0057b"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "from_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-9ac6-4f6d-9407-22b37c7e267b"
        },
        "to_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-0cba-4d27-90e1-22b37ddbaeeb"
        },
        "sent_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "delivered_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "read_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "message": {
          "type": "string"
        },
        "regarding_job_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-ab48-4a12-8207-22b3701a4f4b"
        },
        "attached_json": {
          "type": "string"
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-3379-4136-9dba-22b3787220eb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "due_date": {
          "type": "string",
          "example": "YYYY-MM-DD"
        },
        "task_details": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "related_object": {
          "type": "string"
        },
        "related_object_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-3a07-4bf9-b1ed-22b3752a41cb"
        },
        "task_complete": {
          "type": "string"
        },
        "completed_timestamp": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS"
        },
        "completed_by_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-6d83-4d0a-a102-22b375e0bc7b"
        },
        "assigned_to_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-4247-4a38-b1a9-22b37ee168ab"
        },
        "lng": {
          "type": "number",
          "format": "float"
        },
        "lat": {
          "type": "number",
          "format": "float"
        },
        "created_by_staff_uuid": {
          "type": "string",
          "format": "uuid",
          "example": "123e4567-ea5a-45f9-af7f-22b375087b3b"
        },
        "create_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "description": "Record creation timestamp"
        }
      },
      "required": [
        "name"
      ]
    },
    "TaxRate": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-764a-45b4-a2ea-22b37e7c8dbb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string",
          "maxLength": 50
        },
        "amount": {
          "type": "string"
        },
        "is_default_tax_rate": {
          "type": "number",
          "enum": [
            0,
            1
          ],
          "description": "\n\nValid values are [0,1]"
        }
      },
      "required": [
        "name"
      ]
    },
    "Vendor": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Record UUID key",
          "example": "123e4567-2087-4677-9b6e-22b37823ddeb"
        },
        "active": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "default": 1,
          "description": "Record active/deleted flag. \n\nValid values are [0,1]"
        },
        "edit_date": {
          "type": "string",
          "example": "YYYY-MM-DD HH:MM:SS",
          "readOnly": true,
          "description": "Record last modified timestamp"
        },
        "name": {
          "type": "string",
          "description": "Company Name",
          "maxLength": 200
        },
        "abn_number": {
          "type": "string"
        },
        "business_number": {
          "type": "string",
          "description": "Company Business Number"
        },
        "website": {
          "type": "string",
          "description": "Company Website address",
          "maxLength": 100
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "email_accounts": {
          "type": "string"
        },
        "billing_address": {
          "type": "string"
        },
        "accepted_payment_methods": {
          "type": "string"
        },
        "default_region": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "opening_time_monday": {
          "type": "string"
        },
        "closing_time_monday": {
          "type": "string"
        },
        "opening_time_tuesday": {
          "type": "string"
        },
        "closing_time_tuesday": {
          "type": "string"
        },
        "opening_time_wednesday": {
          "type": "string"
        },
        "closing_time_wednesday": {
          "type": "string"
        },
        "opening_time_thursday": {
          "type": "string"
        },
        "closing_time_thursday": {
          "type": "string"
        },
        "opening_time_friday": {
          "type": "string"
        },
        "closing_time_friday": {
          "type": "string"
        },
        "opening_time_saturday": {
          "type": "string"
        },
        "closing_time_saturday": {
          "type": "string"
        },
        "opening_time_sunday": {
          "type": "string"
        },
        "closing_time_sunday": {
          "type": "string"
        },
        "timezone_name": {
          "type": "string"
        },
        "invoice_terms": {
          "type": "string"
        },
        "job_default_status": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    }
  }
}
