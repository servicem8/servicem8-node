{
    "openapi": "3.1.0",
    "info": {
        "title": "ServiceM8 API",
        "description": "Move your app forward with the ServiceM8 API\n\n\n\n## Limits and Throttling\nTo ensure continuous quality of service, API usage can be subject to throttling. The throttle will be applied once an API consumer reaches a certain \nthreshold in terms of a maximum number of requests per minute. Most clients will never hit this threshold, but those that do, will get met by a \nHTTP 429 Too Many Requests response code. \n \nThere is a limit of 180 requests per minute, if you reach this you will receive a HTTP 429 with a text body of \"Number of allowed API requests per minute exceeded\".\nThere is a limit of 20000 requests per day, if you reach this you will receive a HTTP 429 with a text body of \"Number of allowed API requests per day exceeded\".\n\nWe encourage all API developers to anticipate this error, and take appropriate measures like e.g. using a cached value from a previous call, or passing on a message to the end user that gets subjected to this behaviour (if any).\n\nLimits are per Addon per account.\n",
        "termsOfService": "https://www.servicem8.com/terms-of-service",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.servicem8.com/api_1.0"
        }
    ],
    "security": [
        {
            "apiKey": []
        },
        {
            "oauth2": []
        }
    ],
    "paths": {
        "/allocationwindow.json": {
            "get": {
                "tags": [
                    "Allocation Windows"
                ],
                "operationId": "listAllocationWindows",
                "summary": "List all Allocation Windows",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_schedule**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_schedule"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Allocation Windows",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AllocationWindow"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-bc31-484c-bb16-233129e1bb2b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "name": "string",
                                                "start_time": "string",
                                                "end_time": "string",
                                                "sort_priority": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Allocation Windows"
                ],
                "operationId": "createAllocationWindows",
                "summary": "Create a new Allocation Window",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_schedule"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Allocation Window record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AllocationWindow"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Allocation Window record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/allocationwindow/{uuid}.json": {
            "get": {
                "tags": [
                    "Allocation Windows"
                ],
                "operationId": "getAllocationWindows",
                "summary": "Retrieve an Allocation Window",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_schedule**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_schedule"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Allocation Window",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Allocation Window record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllocationWindow"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-c3d4-494a-9960-233124d091db",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "name": "string",
                                            "start_time": "string",
                                            "end_time": "string",
                                            "sort_priority": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Allocation Windows"
                ],
                "operationId": "updateAllocationWindows",
                "summary": "Update an Allocation Window",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_schedule"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Allocation Window",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Allocation Window fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AllocationWindow"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Allocation Windows"
                ],
                "operationId": "deleteAllocationWindows",
                "summary": "Delete an Allocation Window",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_schedule"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Allocation Window",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Allocation Window successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/asset.json": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "operationId": "listAssets",
                "summary": "List all Assets",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_assets"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Assets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Asset"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-7978-4a75-b56d-23312e1a6a7b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "company_uuid": "123e4567-c896-4c06-8d65-233126ee954b",
                                                "asset_code": "string",
                                                "asset_type_uuid": "123e4567-1c4f-4068-9a9b-2331270562fb",
                                                "name": "string",
                                                "lat": "number",
                                                "lng": "number",
                                                "geo_timestamp": "2025-09-01 12:00:00",
                                                "altitude": "number",
                                                "field_data": [
                                                    {
                                                        "uuid": "string",
                                                        "fieldType": "string",
                                                        "fieldName": "string",
                                                        "fieldValue": "string",
                                                        "sortOrder": "number"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/asset/{uuid}.json": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "operationId": "getAssets",
                "summary": "Retrieve an Asset",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Asset",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Asset"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-1895-4461-a2ee-2331244be54b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "company_uuid": "123e4567-b055-4f6e-8499-23312073a9db",
                                            "asset_code": "string",
                                            "asset_type_uuid": "123e4567-d9b0-458c-af0f-23312850fb9b",
                                            "name": "string",
                                            "lat": "number",
                                            "lng": "number",
                                            "geo_timestamp": "2025-09-01 12:00:00",
                                            "altitude": "number",
                                            "field_data": [
                                                {
                                                    "uuid": "string",
                                                    "fieldType": "string",
                                                    "fieldName": "string",
                                                    "fieldValue": "string",
                                                    "sortOrder": "number"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Assets"
                ],
                "operationId": "updateAssets",
                "summary": "Update an Asset",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_assets**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Asset",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Asset fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Asset"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Assets"
                ],
                "operationId": "deleteAssets",
                "summary": "Delete an Asset",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_assets**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Asset",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/assettype.json": {
            "get": {
                "tags": [
                    "Asset Types"
                ],
                "operationId": "listAssetTypes",
                "summary": "List all Asset Types",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_assets"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Asset Types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AssetType"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-1fca-4c9e-af02-23312b8781db",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "name": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Asset Types"
                ],
                "operationId": "createAssetTypes",
                "summary": "Create a new Asset Type",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_assets**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_assets"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Asset Type record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssetType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Asset Type record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/assettype/{uuid}.json": {
            "get": {
                "tags": [
                    "Asset Types"
                ],
                "operationId": "getAssetTypes",
                "summary": "Retrieve an Asset Type",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Asset Type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset Type record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssetType"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-97e3-4019-98cb-233123986a5b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "name": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Asset Types"
                ],
                "operationId": "updateAssetTypes",
                "summary": "Update an Asset Type",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_assets**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Asset Type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Asset Type fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssetType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Asset Types"
                ],
                "operationId": "deleteAssetTypes",
                "summary": "Delete an Asset Type",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_assets**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Asset Type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset Type successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/assettypefield.json": {
            "get": {
                "tags": [
                    "Asset Type Fields"
                ],
                "operationId": "listAssetTypeFields",
                "summary": "List all Asset Type Fields",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_assets"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Asset Type Fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AssetTypeField"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-dbfa-4fcf-be3b-23312f84fb9b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "asset_type_uuid": "123e4567-9bb7-4a49-99c6-2331231f226b",
                                                "name": "string",
                                                "field_data": {
                                                    "fieldType": "string",
                                                    "mandatory": "string",
                                                    "choices": [
                                                        "string"
                                                    ]
                                                },
                                                "sort_order": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Asset Type Fields"
                ],
                "operationId": "createAssetTypeFields",
                "summary": "Create a new Asset Type Field",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_assets**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_assets"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Asset Type Field record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssetTypeField"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Asset Type Field record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/assettypefield/{uuid}.json": {
            "get": {
                "tags": [
                    "Asset Type Fields"
                ],
                "operationId": "getAssetTypeFields",
                "summary": "Retrieve an Asset Type Field",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_assets**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Asset Type Field",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset Type Field record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssetTypeField"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-4000-44ab-a6f6-233123b14dab",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "asset_type_uuid": "123e4567-3e3c-48fe-b6a6-23312b37e22b",
                                            "name": "string",
                                            "field_data": {
                                                "fieldType": "string",
                                                "mandatory": "string",
                                                "choices": [
                                                    "string"
                                                ]
                                            },
                                            "sort_order": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Asset Type Fields"
                ],
                "operationId": "updateAssetTypeFields",
                "summary": "Update an Asset Type Field",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_assets**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Asset Type Field",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Asset Type Field fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssetTypeField"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Asset Type Fields"
                ],
                "operationId": "deleteAssetTypeFields",
                "summary": "Delete an Asset Type Field",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_assets**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_assets"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Asset Type Field",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset Type Field successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/badge.json": {
            "get": {
                "tags": [
                    "Badges"
                ],
                "operationId": "listBadges",
                "summary": "List all Badges",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_badges**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_badges"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Badges",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Badge"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-f8c2-423a-ba18-23312b0422eb",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "name": "string",
                                                "automatically_allocated": "string",
                                                "file_name": "string",
                                                "regarding_form_uuid": "123e4567-f57f-4210-98be-2331206825fb",
                                                "regarding_asset_type_uuid": "123e4567-bf4f-48ee-a6dc-233125bd094b"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Badges"
                ],
                "operationId": "createBadges",
                "summary": "Create a new Badge",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_badges**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_badges"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Badge record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Badge"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Badge record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/badge/{uuid}.json": {
            "get": {
                "tags": [
                    "Badges"
                ],
                "operationId": "getBadges",
                "summary": "Retrieve a Badge",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_badges**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_badges"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Badge",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Badge record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Badge"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-83e7-4291-89d7-233124ee07db",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "name": "string",
                                            "automatically_allocated": "string",
                                            "file_name": "string",
                                            "regarding_form_uuid": "123e4567-e7ed-44e0-9f94-23312f45195b",
                                            "regarding_asset_type_uuid": "123e4567-94d4-481f-a6b5-233128adbe6b"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Badges"
                ],
                "operationId": "updateBadges",
                "summary": "Update a Badge",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_badges**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_badges"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Badge",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Badge fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Badge"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Badges"
                ],
                "operationId": "deleteBadges",
                "summary": "Delete a Badge",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_badges**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_badges"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Badge",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Badge successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/category.json": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "operationId": "listCategories",
                "summary": "List all Categories",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_categories**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_job_categories"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "name": "string",
                                                "colour": "string",
                                                "uuid": "123e4567-c168-4b2f-aa80-23312d1b6c1b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "operationId": "createCategories",
                "summary": "Create a new Category",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_categories**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_categories"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Category record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Category record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/category/{uuid}.json": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "operationId": "getCategories",
                "summary": "Retrieve a Category",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_categories**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_job_categories"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Category",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "name": "string",
                                            "colour": "string",
                                            "uuid": "123e4567-a9eb-4dc7-9375-23312b395d8b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "operationId": "updateCategories",
                "summary": "Update a Category",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_categories**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_categories"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Category",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Category fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "operationId": "deleteCategories",
                "summary": "Delete a Category",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_categories**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_categories"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Category",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/company.json": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "operationId": "listClients",
                "summary": "List all Clients",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_customers**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_customers"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Clients",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Company"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "name": "string",
                                                "abn_number": "string",
                                                "address": "string",
                                                "billing_address": "string",
                                                "parent_company_uuid": "string",
                                                "uuid": "123e4567-204d-472b-87d7-23312f2d928b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "website": "string",
                                                "is_individual": "string",
                                                "address_street": "string",
                                                "address_city": "string",
                                                "address_state": "string",
                                                "address_postcode": "string",
                                                "address_country": "string",
                                                "fax_number": "string",
                                                "badges": "string",
                                                "tax_rate_uuid": "123e4567-f514-43e7-8c34-23312dff755b",
                                                "billing_attention": "string",
                                                "payment_terms": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "operationId": "createClients",
                "summary": "Create a new Client",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customers**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_customers"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Client record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Client record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/company/{uuid}.json": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "operationId": "getClients",
                "summary": "Retrieve a Client",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_customers**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_customers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Client",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "name": "string",
                                            "abn_number": "string",
                                            "address": "string",
                                            "billing_address": "string",
                                            "parent_company_uuid": "string",
                                            "uuid": "123e4567-8406-47f4-8879-233121f06adb",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "website": "string",
                                            "is_individual": "string",
                                            "address_street": "string",
                                            "address_city": "string",
                                            "address_state": "string",
                                            "address_postcode": "string",
                                            "address_country": "string",
                                            "fax_number": "string",
                                            "badges": "string",
                                            "tax_rate_uuid": "123e4567-8225-48af-b469-233127bcbc6b",
                                            "billing_attention": "string",
                                            "payment_terms": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "operationId": "updateClients",
                "summary": "Update a Client",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customers**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_customers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Client",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Client fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Clients"
                ],
                "operationId": "deleteClients",
                "summary": "Delete a Client",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customers**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_customers"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Client",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companycontact.json": {
            "get": {
                "tags": [
                    "Company Contacts"
                ],
                "operationId": "listCompanyContacts",
                "summary": "List all Company Contacts",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_customer_contacts**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_customer_contacts"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Company Contacts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompanyContact"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-eea6-48d3-bb33-23312b492a2b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "company_uuid": "123e4567-4af3-4987-a811-233129e3851b",
                                                "first": "string",
                                                "last": "string",
                                                "phone": "string",
                                                "mobile": "string",
                                                "email": "string",
                                                "type": "string",
                                                "is_primary_contact": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Company Contacts"
                ],
                "operationId": "createCompanyContacts",
                "summary": "Create a new Company Contact",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customer_contacts**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_customer_contacts"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Company Contact record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyContact"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Company Contact record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companycontact/{uuid}.json": {
            "get": {
                "tags": [
                    "Company Contacts"
                ],
                "operationId": "getCompanyContacts",
                "summary": "Retrieve a Company Contact",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_customer_contacts**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_customer_contacts"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Company Contact",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company Contact record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyContact"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-6cd4-430e-9785-23312f73ba4b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "company_uuid": "123e4567-cc84-4a24-a962-23312a8a0b8b",
                                            "first": "string",
                                            "last": "string",
                                            "phone": "string",
                                            "mobile": "string",
                                            "email": "string",
                                            "type": "string",
                                            "is_primary_contact": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Company Contacts"
                ],
                "operationId": "updateCompanyContacts",
                "summary": "Update a Company Contact",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customer_contacts**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_customer_contacts"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Company Contact",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Company Contact fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyContact"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Company Contacts"
                ],
                "operationId": "deleteCompanyContacts",
                "summary": "Delete a Company Contact",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_customer_contacts**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_customer_contacts"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Company Contact",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company Contact successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/documenttemplate.json": {
            "get": {
                "tags": [
                    "Document Templates"
                ],
                "operationId": "listDocumentTemplates",
                "summary": "List all Document Templates",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Document Templates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DocumentTemplate"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-86ef-45a6-9e9f-23312b78709b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "template_type": "string",
                                                "related_object": "string",
                                                "name": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Document Templates"
                ],
                "operationId": "createDocumentTemplates",
                "summary": "Create a new Document Template",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Document Template record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Document Template record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/documenttemplate/{uuid}.json": {
            "get": {
                "tags": [
                    "Document Templates"
                ],
                "operationId": "getDocumentTemplates",
                "summary": "Retrieve a Document Template",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Document Template",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document Template record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentTemplate"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-5939-4281-bdab-23312690f29b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "template_type": "string",
                                            "related_object": "string",
                                            "name": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Document Templates"
                ],
                "operationId": "updateDocumentTemplates",
                "summary": "Update a Document Template",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Document Template",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Document Template fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Document Templates"
                ],
                "operationId": "deleteDocumentTemplates",
                "summary": "Delete a Document Template",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Document Template",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document Template successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/emailtemplate.json": {
            "get": {
                "tags": [
                    "Email Templates"
                ],
                "operationId": "listEmailTemplates",
                "summary": "List all Email Templates",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Email Templates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EmailTemplate"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-8f1f-4300-bab9-2331262cec8b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "name": "string",
                                                "subject": "string",
                                                "message": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Email Templates"
                ],
                "operationId": "createEmailTemplates",
                "summary": "Create a new Email Template",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Email Template record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Email Template record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/emailtemplate/{uuid}.json": {
            "get": {
                "tags": [
                    "Email Templates"
                ],
                "operationId": "getEmailTemplates",
                "summary": "Retrieve an Email Template",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Email Template",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email Template record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailTemplate"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-5313-4f8c-a89a-233125eba0cb",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "name": "string",
                                            "subject": "string",
                                            "message": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Email Templates"
                ],
                "operationId": "updateEmailTemplates",
                "summary": "Update an Email Template",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Email Template",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Email Template fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Email Templates"
                ],
                "operationId": "deleteEmailTemplates",
                "summary": "Delete an Email Template",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Email Template",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email Template successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/feedback.json": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "operationId": "listFeedback",
                "summary": "List all Feedback",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_feedback**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_feedback"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Feedback",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Feedback"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-eaf4-4e5f-ae11-23312fb15e7b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "timestamp": "string",
                                                "related_object": "string",
                                                "related_object_uuid": "123e4567-0c54-43ef-ac79-2331247e7c3b",
                                                "rating": "string",
                                                "comment": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Feedback"
                ],
                "operationId": "createFeedback",
                "summary": "Create a new Feedback",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_feedback**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_feedback"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Feedback record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Feedback"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Feedback record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/feedback/{uuid}.json": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "operationId": "getFeedback",
                "summary": "Retrieve a Feedback",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_feedback**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_feedback"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Feedback",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feedback"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-6822-4ccf-86b4-233129b1590b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "timestamp": "string",
                                            "related_object": "string",
                                            "related_object_uuid": "123e4567-f97b-4b31-94ca-233129c96e8b",
                                            "rating": "string",
                                            "comment": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Feedback"
                ],
                "operationId": "updateFeedback",
                "summary": "Update a Feedback",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_feedback**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_feedback"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Feedback",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Feedback fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Feedback"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Feedback"
                ],
                "operationId": "deleteFeedback",
                "summary": "Delete a Feedback",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_feedback**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_feedback"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Feedback",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/form.json": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "operationId": "listForms",
                "summary": "List all Forms",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_forms**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_forms"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Forms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Form"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "name": "string",
                                                "document_template_uuid": "123e4567-b365-407d-be53-23312d064c6b",
                                                "can_be_used_independently": "string",
                                                "badge_mandatory_state": "string",
                                                "template_fields": [
                                                    {
                                                        "name": "string",
                                                        "fieldType": "string",
                                                        "value": "string",
                                                        "sortOrder": "string"
                                                    }
                                                ],
                                                "uuid": "123e4567-612d-4ec5-bb97-2331291bdccb",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "badge_name": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Forms"
                ],
                "operationId": "createForms",
                "summary": "Create a new Form",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_forms**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_forms"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Form record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Form"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Form record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/form/{uuid}.json": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "operationId": "getForms",
                "summary": "Retrieve a Form",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_forms**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_forms"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Form",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Form"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "name": "string",
                                            "document_template_uuid": "123e4567-6899-46ed-aab9-233120e9f4fb",
                                            "can_be_used_independently": "string",
                                            "badge_mandatory_state": "string",
                                            "template_fields": [
                                                {
                                                    "name": "string",
                                                    "fieldType": "string",
                                                    "value": "string",
                                                    "sortOrder": "string"
                                                }
                                            ],
                                            "uuid": "123e4567-8663-4be0-9cc6-233125d3821b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "badge_name": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Forms"
                ],
                "operationId": "updateForms",
                "summary": "Update a Form",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_forms**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_forms"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Form",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Form fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Form"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Forms"
                ],
                "operationId": "deleteForms",
                "summary": "Delete a Form",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_forms**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_forms"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Form",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/formfield.json": {
            "get": {
                "tags": [
                    "Form Fields"
                ],
                "operationId": "listFormFields",
                "summary": "List all Form Fields",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_forms**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_forms"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Form Fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FormField"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-9bfa-468e-85b7-23312945935b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "form_uuid": "123e4567-6e3c-4e57-a573-2331223fa46b",
                                                "name": "string",
                                                "field_data_json": "string",
                                                "sort_order": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Form Fields"
                ],
                "operationId": "createFormFields",
                "summary": "Create a new Form Field",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_forms**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_forms"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Form Field record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FormField"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Form Field record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/formfield/{uuid}.json": {
            "get": {
                "tags": [
                    "Form Fields"
                ],
                "operationId": "getFormFields",
                "summary": "Retrieve a Form Field",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_forms**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_forms"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Form Field",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form Field record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormField"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-33c2-45c9-93a5-233124c4b55b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "form_uuid": "123e4567-1033-4190-b2a6-233125a36a4b",
                                            "name": "string",
                                            "field_data_json": "string",
                                            "sort_order": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Form Fields"
                ],
                "operationId": "updateFormFields",
                "summary": "Update a Form Field",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_forms**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_forms"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Form Field",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Form Field fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FormField"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Form Fields"
                ],
                "operationId": "deleteFormFields",
                "summary": "Delete a Form Field",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_forms**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_forms"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Form Field",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form Field successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/formresponse.json": {
            "get": {
                "tags": [
                    "Form Responses"
                ],
                "operationId": "listFormResponses",
                "summary": "List all Form Responses",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_forms**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_forms"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Form Responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FormResponse"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-5ae7-43d9-946c-23312a77494b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "form_uuid": "123e4567-375a-4624-8cb7-233128b6e9db",
                                                "staff_uuid": "123e4567-61b5-49b2-9f0b-233126cb567b",
                                                "regarding_object": "string",
                                                "regarding_object_uuid": "123e4567-dc54-406c-9baa-2331254ff7fb",
                                                "field_data": "string",
                                                "timestamp": "2025-09-01 12:00:00",
                                                "form_by_staff_uuid": "123e4567-9ca6-445d-b395-23312e8daffb",
                                                "document_attachment_uuid": "123e4567-df3c-47a2-9ab3-233127de834b",
                                                "asset_uuid": "123e4567-cf54-4918-9bc4-23312815674b"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Form Responses"
                ],
                "operationId": "createFormResponses",
                "summary": "Create a new Form Response",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_forms**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_forms"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Form Response record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FormResponse"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Form Response record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/formresponse/{uuid}.json": {
            "get": {
                "tags": [
                    "Form Responses"
                ],
                "operationId": "getFormResponses",
                "summary": "Retrieve a Form Response",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_forms**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_forms"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Form Response",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form Response record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormResponse"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-6065-4a15-80d2-2331242f05ab",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "form_uuid": "123e4567-8482-465a-9946-233121da6d5b",
                                            "staff_uuid": "123e4567-8717-4463-8cc7-23312041d1cb",
                                            "regarding_object": "string",
                                            "regarding_object_uuid": "123e4567-e3c5-4288-9b77-23312350a8eb",
                                            "field_data": "string",
                                            "timestamp": "2025-09-01 12:00:00",
                                            "form_by_staff_uuid": "123e4567-62b0-49b9-848b-23312781079b",
                                            "document_attachment_uuid": "123e4567-23c6-431d-9801-233122eb01fb",
                                            "asset_uuid": "123e4567-3bfa-40cc-9228-23312fe942db"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Form Responses"
                ],
                "operationId": "updateFormResponses",
                "summary": "Update a Form Response",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_forms**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_forms"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Form Response",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Form Response fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FormResponse"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Form Responses"
                ],
                "operationId": "deleteFormResponses",
                "summary": "Delete a Form Response",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_forms**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_forms"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Form Response",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form Response successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/job.json": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "operationId": "listJobs",
                "summary": "List all Jobs",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_jobs**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_jobs"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Jobs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Job"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "created_by_staff_uuid": "123e4567-585e-4dc3-9e6f-2331252889db",
                                                "date": "YYYY-MM-DD",
                                                "company_uuid": "123e4567-5965-4600-ba9f-23312f27764b",
                                                "billing_address": "string",
                                                "status": "string",
                                                "lng": "number",
                                                "lat": "number",
                                                "payment_date": "2025-09-01 12:00:00",
                                                "payment_actioned_by_uuid": "123e4567-684b-4924-add7-23312960fc3b",
                                                "payment_method": "string",
                                                "payment_amount": "string",
                                                "category_uuid": "123e4567-4e47-4432-bebb-233122506d2b",
                                                "payment_note": "string",
                                                "geo_is_valid": "string",
                                                "purchase_order_number": "string",
                                                "invoice_sent": "string",
                                                "invoice_sent_stamp": "2025-09-01 12:00:00",
                                                "ready_to_invoice": "string",
                                                "ready_to_invoice_stamp": "string",
                                                "geo_country": "string",
                                                "geo_postcode": "string",
                                                "geo_state": "string",
                                                "geo_city": "string",
                                                "geo_street": "string",
                                                "geo_number": "string",
                                                "queue_uuid": "123e4567-9486-4c42-be3e-23312f0ecf1b",
                                                "queue_expiry_date": "2025-09-01 12:00:00",
                                                "queue_assigned_staff_uuid": "123e4567-c4ac-4ecf-8260-23312730acbb",
                                                "badges": "string",
                                                "quote_date": "2025-09-01 12:00:00",
                                                "quote_sent": "string",
                                                "quote_sent_stamp": "2025-09-01 12:00:00",
                                                "work_order_date": "2025-09-01 12:00:00",
                                                "active_network_request_uuid": "string",
                                                "related_knowledge_articles": "string",
                                                "uuid": "123e4567-768a-42bc-bba2-23312e6e52bb",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "job_address": "string",
                                                "job_description": "string",
                                                "work_done_description": "string",
                                                "generated_job_id": "string",
                                                "total_invoice_amount": "string",
                                                "payment_processed": "string",
                                                "payment_processed_stamp": "2025-09-01 12:00:00",
                                                "payment_received": "string",
                                                "payment_received_stamp": "2025-09-01 12:00:00",
                                                "completion_date": "2025-09-01 12:00:00",
                                                "completion_actioned_by_uuid": "123e4567-ed6c-4bb3-aa3a-2331270680fb",
                                                "unsuccessful_date": "2025-09-01 12:00:00",
                                                "job_is_scheduled_until_stamp": "2025-09-01 12:00:00"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Jobs"
                ],
                "operationId": "createJobs",
                "summary": "Create a new Job",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **create_jobs**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "create_jobs"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Job record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Job"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Job record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/job/{uuid}.json": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "operationId": "getJobs",
                "summary": "Retrieve a Job",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_jobs**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_jobs"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "created_by_staff_uuid": "123e4567-8c47-4acc-9bda-23312af1253b",
                                            "date": "YYYY-MM-DD",
                                            "company_uuid": "123e4567-2e00-4eae-b7d4-23312940de4b",
                                            "billing_address": "string",
                                            "status": "string",
                                            "lng": "number",
                                            "lat": "number",
                                            "payment_date": "2025-09-01 12:00:00",
                                            "payment_actioned_by_uuid": "123e4567-40fd-44b7-b3cc-233125f4acfb",
                                            "payment_method": "string",
                                            "payment_amount": "string",
                                            "category_uuid": "123e4567-6c0d-4ed1-a5be-2331201c49db",
                                            "payment_note": "string",
                                            "geo_is_valid": "string",
                                            "purchase_order_number": "string",
                                            "invoice_sent": "string",
                                            "invoice_sent_stamp": "2025-09-01 12:00:00",
                                            "ready_to_invoice": "string",
                                            "ready_to_invoice_stamp": "string",
                                            "geo_country": "string",
                                            "geo_postcode": "string",
                                            "geo_state": "string",
                                            "geo_city": "string",
                                            "geo_street": "string",
                                            "geo_number": "string",
                                            "queue_uuid": "123e4567-9a93-45e8-9706-23312c76da1b",
                                            "queue_expiry_date": "2025-09-01 12:00:00",
                                            "queue_assigned_staff_uuid": "123e4567-3b59-49ff-a0a0-233122478dbb",
                                            "badges": "string",
                                            "quote_date": "2025-09-01 12:00:00",
                                            "quote_sent": "string",
                                            "quote_sent_stamp": "2025-09-01 12:00:00",
                                            "work_order_date": "2025-09-01 12:00:00",
                                            "active_network_request_uuid": "string",
                                            "related_knowledge_articles": "string",
                                            "uuid": "123e4567-9e92-4172-a8a8-233123d40e7b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "job_address": "string",
                                            "job_description": "string",
                                            "work_done_description": "string",
                                            "generated_job_id": "string",
                                            "total_invoice_amount": "string",
                                            "payment_processed": "string",
                                            "payment_processed_stamp": "2025-09-01 12:00:00",
                                            "payment_received": "string",
                                            "payment_received_stamp": "2025-09-01 12:00:00",
                                            "completion_date": "2025-09-01 12:00:00",
                                            "completion_actioned_by_uuid": "123e4567-f56b-4e9b-9ae9-233122b04a4b",
                                            "unsuccessful_date": "2025-09-01 12:00:00",
                                            "job_is_scheduled_until_stamp": "2025-09-01 12:00:00"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Jobs"
                ],
                "operationId": "updateJobs",
                "summary": "Update a Job",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_jobs**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_jobs"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Job fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Job"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Jobs"
                ],
                "operationId": "deleteJobs",
                "summary": "Delete a Job",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_jobs**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_jobs"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobactivity.json": {
            "get": {
                "tags": [
                    "Job Activities"
                ],
                "operationId": "listJobActivities",
                "summary": "List all Job Activities",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_schedule**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_schedule"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Job Activities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JobActivity"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-634c-48c8-a052-2331208cb66b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "job_uuid": "123e4567-a167-424c-afc9-233120cf363b",
                                                "staff_uuid": "123e4567-3a17-47a0-98c9-233120be766b",
                                                "start_date": "2025-09-01 12:00:00",
                                                "end_date": "2025-09-01 12:00:00",
                                                "activity_was_scheduled": "string",
                                                "activity_was_recorded": "string",
                                                "activity_was_automated": "string",
                                                "has_been_opened": "string",
                                                "has_been_opened_timestamp": "2025-09-01 12:00:00",
                                                "travel_time_in_seconds": "string",
                                                "travel_distance_in_meters": "string",
                                                "allocated_by_staff_uuid": "123e4567-586a-488b-b2cc-23312b4d24bb",
                                                "allocated_timestamp": "2025-09-01 12:00:00",
                                                "material_uuid": "123e4567-8bc0-47b4-8706-2331240d5f1b",
                                                "edit_by_staff_uuid": "123e4567-8dab-4759-81ab-233125e0f21b"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Activities"
                ],
                "operationId": "createJobActivities",
                "summary": "Create a new Job Activity",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_schedule"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Job Activity record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobActivity"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Job Activity record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobactivity/{uuid}.json": {
            "get": {
                "tags": [
                    "Job Activities"
                ],
                "operationId": "getJobActivities",
                "summary": "Retrieve a Job Activity",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_schedule**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_schedule"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Activity",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Activity record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobActivity"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-4f95-46c3-815d-23312d6ff7db",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "job_uuid": "123e4567-f48d-4289-aaf5-233120a4410b",
                                            "staff_uuid": "123e4567-ab71-4c9a-b573-23312a470f6b",
                                            "start_date": "2025-09-01 12:00:00",
                                            "end_date": "2025-09-01 12:00:00",
                                            "activity_was_scheduled": "string",
                                            "activity_was_recorded": "string",
                                            "activity_was_automated": "string",
                                            "has_been_opened": "string",
                                            "has_been_opened_timestamp": "2025-09-01 12:00:00",
                                            "travel_time_in_seconds": "string",
                                            "travel_distance_in_meters": "string",
                                            "allocated_by_staff_uuid": "123e4567-2a16-4189-986c-233127a96f3b",
                                            "allocated_timestamp": "2025-09-01 12:00:00",
                                            "material_uuid": "123e4567-3a73-4428-ad0a-233122c6ec6b",
                                            "edit_by_staff_uuid": "123e4567-df6a-461d-84a2-233123f0302b"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Activities"
                ],
                "operationId": "updateJobActivities",
                "summary": "Update a Job Activity",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_schedule"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Activity",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Job Activity fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobActivity"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Job Activities"
                ],
                "operationId": "deleteJobActivities",
                "summary": "Delete a Job Activity",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_schedule"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Activity",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Activity successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/joballocation.json": {
            "get": {
                "tags": [
                    "Job Allocations"
                ],
                "operationId": "listJobAllocations",
                "summary": "List all Job Allocations",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_schedule**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_schedule"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Job Allocations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JobAllocation"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-bdcd-4f09-b11f-233123e03b6b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "job_uuid": "123e4567-adc0-41ac-997f-23312c8acf7b",
                                                "queue_uuid": "123e4567-161b-4413-b06f-23312906c97b",
                                                "staff_uuid": "123e4567-2e95-4bc3-a71b-23312236c4bb",
                                                "allocation_date": "2025-09-01 12:00:00",
                                                "allocation_window_uuid": "123e4567-83a9-44fd-aed1-23312808c66b",
                                                "allocated_by_staff_uuid": "123e4567-2357-4b75-9c54-23312db5046b",
                                                "allocated_timestamp": "2025-09-01 12:00:00",
                                                "expiry_timestamp": "2025-09-01 12:00:00",
                                                "read_timestamp": "2025-09-01 12:00:00",
                                                "completion_timestamp": "2025-09-01 12:00:00",
                                                "estimated_duration": "string",
                                                "revised_duration": "string",
                                                "sort_priority": "string",
                                                "requires_acceptance": "string",
                                                "acceptance_status": "string",
                                                "acceptance_timestamp": "2025-09-01 12:00:00"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Allocations"
                ],
                "operationId": "createJobAllocations",
                "summary": "Create a new Job Allocation",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_schedule"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Job Allocation record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobAllocation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Job Allocation record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/joballocation/{uuid}.json": {
            "get": {
                "tags": [
                    "Job Allocations"
                ],
                "operationId": "getJobAllocations",
                "summary": "Retrieve a Job Allocation",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_schedule**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_schedule"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Allocation",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Allocation record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobAllocation"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-e1be-4dff-9047-23312734b5db",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "job_uuid": "123e4567-44f0-4106-896f-23312238893b",
                                            "queue_uuid": "123e4567-80aa-4f7e-b5da-23312e70420b",
                                            "staff_uuid": "123e4567-93d3-4415-8f12-23312134525b",
                                            "allocation_date": "2025-09-01 12:00:00",
                                            "allocation_window_uuid": "123e4567-78f5-4c68-9135-23312e3cf25b",
                                            "allocated_by_staff_uuid": "123e4567-fcd3-430d-b1cb-23312955b20b",
                                            "allocated_timestamp": "2025-09-01 12:00:00",
                                            "expiry_timestamp": "2025-09-01 12:00:00",
                                            "read_timestamp": "2025-09-01 12:00:00",
                                            "completion_timestamp": "2025-09-01 12:00:00",
                                            "estimated_duration": "string",
                                            "revised_duration": "string",
                                            "sort_priority": "string",
                                            "requires_acceptance": "string",
                                            "acceptance_status": "string",
                                            "acceptance_timestamp": "2025-09-01 12:00:00"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Allocations"
                ],
                "operationId": "updateJobAllocations",
                "summary": "Update a Job Allocation",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_schedule"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Allocation",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Job Allocation fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobAllocation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Job Allocations"
                ],
                "operationId": "deleteJobAllocations",
                "summary": "Delete a Job Allocation",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_schedule**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_schedule"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Allocation",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Allocation successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobchecklist.json": {
            "get": {
                "tags": [
                    "Job Checklists"
                ],
                "operationId": "listJobChecklists",
                "summary": "List all Job Checklists",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_checklists**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_job_checklists"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Job Checklists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JobChecklist"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-1c47-4b78-9523-23312c9040bb",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "job_uuid": "123e4567-7c38-4c83-bebf-23312121d11b",
                                                "name": "string",
                                                "section_name": "string",
                                                "item_type": "string",
                                                "sort_order": "string",
                                                "completed_timestamp": "2025-09-01 12:00:00",
                                                "completed_by_staff_uuid": "123e4567-dd56-44b5-8c7c-233123709bbb",
                                                "completed_during_checkin_uuid": "123e4567-b300-4562-bd8f-23312148dcdb",
                                                "reminder_type": "string",
                                                "reminder_data": "string",
                                                "regarding_object": "string",
                                                "regarding_object_uuid": "123e4567-3184-422f-9375-2331251385bb",
                                                "fulfilled_by_object_name": "string",
                                                "fulfilled_by_object_uuid": "123e4567-b540-4896-a489-233126d4462b",
                                                "assigned_to_staff_uuids": "123e4567-66a6-4880-b1a7-23312db7a06b",
                                                "is_locked": "string",
                                                "assigned_timestamp": "2025-09-01 12:00:00",
                                                "assigned_by_staff_uuid": "123e4567-fb9f-42c1-ab71-23312bde75ab"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Checklists"
                ],
                "operationId": "createJobChecklists",
                "summary": "Create a new Job Checklist",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_checklists**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_checklists"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Job Checklist record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobChecklist"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Job Checklist record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobchecklist/{uuid}.json": {
            "get": {
                "tags": [
                    "Job Checklists"
                ],
                "operationId": "getJobChecklists",
                "summary": "Retrieve a Job Checklist",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_checklists**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_job_checklists"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Checklist",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Checklist record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobChecklist"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-d9cc-414b-8af1-233125bf402b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "job_uuid": "123e4567-8e93-4c2d-8eca-2331238157ab",
                                            "name": "string",
                                            "section_name": "string",
                                            "item_type": "string",
                                            "sort_order": "string",
                                            "completed_timestamp": "2025-09-01 12:00:00",
                                            "completed_by_staff_uuid": "123e4567-1bdc-4c1c-af18-2331265c11ab",
                                            "completed_during_checkin_uuid": "123e4567-ca26-46eb-aca1-23312fc3c3cb",
                                            "reminder_type": "string",
                                            "reminder_data": "string",
                                            "regarding_object": "string",
                                            "regarding_object_uuid": "123e4567-8f07-4a03-8ec2-23312924cc5b",
                                            "fulfilled_by_object_name": "string",
                                            "fulfilled_by_object_uuid": "123e4567-c5fc-49c3-81a6-23312ff2686b",
                                            "assigned_to_staff_uuids": "123e4567-5a36-48d1-9b1d-23312c8a76bb",
                                            "is_locked": "string",
                                            "assigned_timestamp": "2025-09-01 12:00:00",
                                            "assigned_by_staff_uuid": "123e4567-09c5-495b-8be7-23312410aa5b"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Checklists"
                ],
                "operationId": "updateJobChecklists",
                "summary": "Update a Job Checklist",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_checklists**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_checklists"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Checklist",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Job Checklist fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobChecklist"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Job Checklists"
                ],
                "operationId": "deleteJobChecklists",
                "summary": "Delete a Job Checklist",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_checklists**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_checklists"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Checklist",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Checklist successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobcontact.json": {
            "get": {
                "tags": [
                    "Job Contacts"
                ],
                "operationId": "listJobContacts",
                "summary": "List all Job Contacts",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_contacts**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_job_contacts"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Job Contacts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JobContact"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-d2ee-4269-a89a-23312701b23b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "job_uuid": "123e4567-fb82-4a26-b33f-233129c0c4bb",
                                                "first": "string",
                                                "last": "string",
                                                "phone": "string",
                                                "mobile": "string",
                                                "email": "string",
                                                "type": "string",
                                                "is_primary_contact": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Contacts"
                ],
                "operationId": "createJobContacts",
                "summary": "Create a new Job Contact",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_contacts**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_contacts"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Job Contact record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobContact"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Job Contact record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobcontact/{uuid}.json": {
            "get": {
                "tags": [
                    "Job Contacts"
                ],
                "operationId": "getJobContacts",
                "summary": "Retrieve a Job Contact",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_contacts**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_job_contacts"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Contact",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Contact record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobContact"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-bae7-490b-b209-23312b5ff60b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "job_uuid": "123e4567-f2e8-4a76-83b8-23312f5accdb",
                                            "first": "string",
                                            "last": "string",
                                            "phone": "string",
                                            "mobile": "string",
                                            "email": "string",
                                            "type": "string",
                                            "is_primary_contact": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Contacts"
                ],
                "operationId": "updateJobContacts",
                "summary": "Update a Job Contact",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_contacts**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_contacts"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Contact",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Job Contact fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobContact"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Job Contacts"
                ],
                "operationId": "deleteJobContacts",
                "summary": "Delete a Job Contact",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_contacts**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_contacts"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Contact",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Contact successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobmaterial.json": {
            "get": {
                "tags": [
                    "Job Materials"
                ],
                "operationId": "listJobMaterials",
                "summary": "List all Job Materials",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_materials**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_job_materials"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Job Materials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JobMaterial"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-e0d1-4cd6-a8c6-23312cda6c6b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "job_uuid": "123e4567-7251-448b-a48c-23312710882b",
                                                "material_uuid": "123e4567-3ca0-4216-841d-233120cf5b2b",
                                                "name": "string",
                                                "quantity": "string",
                                                "price": "string",
                                                "displayed_amount": "string",
                                                "displayed_amount_is_tax_inclusive": "string",
                                                "tax_rate_uuid": "123e4567-f756-415f-bd11-23312b5aa03b",
                                                "sort_order": "string",
                                                "cost": "string",
                                                "displayed_cost": "string",
                                                "job_material_bundle_uuid": "123e4567-9d8f-4ab9-91fc-23312646ae5b"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Materials"
                ],
                "operationId": "createJobMaterials",
                "summary": "Create a new Job Material",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_materials**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_materials"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Job Material record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobMaterial"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Job Material record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobmaterial/{uuid}.json": {
            "get": {
                "tags": [
                    "Job Materials"
                ],
                "operationId": "getJobMaterials",
                "summary": "Retrieve a Job Material",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_materials**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_job_materials"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Material",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Material record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobMaterial"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-5821-4f9d-b294-2331200c31eb",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "job_uuid": "123e4567-4034-48a4-b2e1-23312c0b877b",
                                            "material_uuid": "123e4567-5899-4276-9d4d-233121edf79b",
                                            "name": "string",
                                            "quantity": "string",
                                            "price": "string",
                                            "displayed_amount": "string",
                                            "displayed_amount_is_tax_inclusive": "string",
                                            "tax_rate_uuid": "123e4567-3fb8-4e34-a07f-23312d3e2ecb",
                                            "sort_order": "string",
                                            "cost": "string",
                                            "displayed_cost": "string",
                                            "job_material_bundle_uuid": "123e4567-415b-41c1-9399-2331284a3dbb"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Materials"
                ],
                "operationId": "updateJobMaterials",
                "summary": "Update a Job Material",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_materials**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_materials"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Material",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Job Material fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobMaterial"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Job Materials"
                ],
                "operationId": "deleteJobMaterials",
                "summary": "Delete a Job Material",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_materials**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_materials"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Material",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Material successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobmaterialbundle.json": {
            "get": {
                "tags": [
                    "Job Material Bundles"
                ],
                "operationId": "listJobMaterialBundles",
                "summary": "List all Job Material Bundles",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_materials**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_job_materials"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Job Material Bundles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JobMaterialBundle"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-c142-4311-ae62-23312078786b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "item_number": "string",
                                                "name": "string",
                                                "quantity": "string",
                                                "sort_order": "string",
                                                "material_bundle_uuid": "123e4567-b19a-4e76-a721-233127d6d3fb",
                                                "job_uuid": "123e4567-c29b-4779-8fb5-233124abc0cb"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Material Bundles"
                ],
                "operationId": "createJobMaterialBundles",
                "summary": "Create a new Job Material Bundle",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_materials**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_materials"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Job Material Bundle record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobMaterialBundle"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Job Material Bundle record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobmaterialbundle/{uuid}.json": {
            "get": {
                "tags": [
                    "Job Material Bundles"
                ],
                "operationId": "getJobMaterialBundles",
                "summary": "Retrieve a Job Material Bundle",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_materials**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_job_materials"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Material Bundle",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Material Bundle record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobMaterialBundle"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-2c6d-45c3-a074-233122aa98ab",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "item_number": "string",
                                            "name": "string",
                                            "quantity": "string",
                                            "sort_order": "string",
                                            "material_bundle_uuid": "123e4567-e4d1-4d5c-8512-23312398219b",
                                            "job_uuid": "123e4567-76af-464c-b07c-23312184429b"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Material Bundles"
                ],
                "operationId": "updateJobMaterialBundles",
                "summary": "Update a Job Material Bundle",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_materials**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_materials"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Material Bundle",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Job Material Bundle fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobMaterialBundle"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Job Material Bundles"
                ],
                "operationId": "deleteJobMaterialBundles",
                "summary": "Delete a Job Material Bundle",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_materials**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_materials"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Material Bundle",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Material Bundle successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobpayment.json": {
            "get": {
                "tags": [
                    "Job Payments"
                ],
                "operationId": "listJobPayments",
                "summary": "List all Job Payments",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_payments**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_job_payments"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Job Payments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JobPayment"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-8025-4b5e-953f-23312254b64b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "job_uuid": "123e4567-45a7-4058-b3cb-23312c474b3b",
                                                "actioned_by_uuid": "123e4567-ad08-42df-8cc9-2331286f193b",
                                                "timestamp": "2025-09-01 12:00:00",
                                                "amount": "string",
                                                "method": "string",
                                                "note": "string",
                                                "attachment_uuid": "123e4567-cd11-45e5-94e0-23312225648b",
                                                "is_deposit": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Payments"
                ],
                "operationId": "createJobPayments",
                "summary": "Create a new Job Payment",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_payments**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_payments"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Job Payment record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobPayment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Job Payment record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobpayment/{uuid}.json": {
            "get": {
                "tags": [
                    "Job Payments"
                ],
                "operationId": "getJobPayments",
                "summary": "Retrieve a Job Payment",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_payments**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_job_payments"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Payment",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Payment record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobPayment"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-3a21-48fc-89f1-23312334bedb",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "job_uuid": "123e4567-6abc-44e4-90c8-23312ff9c5ab",
                                            "actioned_by_uuid": "123e4567-86b6-4c33-a082-23312edd1b1b",
                                            "timestamp": "2025-09-01 12:00:00",
                                            "amount": "string",
                                            "method": "string",
                                            "note": "string",
                                            "attachment_uuid": "123e4567-6648-4c5c-b04d-2331290e066b",
                                            "is_deposit": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Payments"
                ],
                "operationId": "updateJobPayments",
                "summary": "Update a Job Payment",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_payments**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_payments"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Payment",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Job Payment fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobPayment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Job Payments"
                ],
                "operationId": "deleteJobPayments",
                "summary": "Delete a Job Payment",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_payments**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_payments"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Payment",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Payment successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobtemplate.json": {
            "get": {
                "tags": [
                    "Job Templates"
                ],
                "operationId": "listJobTemplates",
                "summary": "List all Job Templates",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_jobs**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_jobs"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Job Templates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JobTemplate"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-30de-4788-9045-23312fadc9cb",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "name": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobtemplate/{uuid}.json": {
            "get": {
                "tags": [
                    "Job Templates"
                ],
                "operationId": "getJobTemplates",
                "summary": "Retrieve a Job Template",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_jobs**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_jobs"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Template",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Template record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobTemplate"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-fc81-4c75-9ccf-23312822449b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "name": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/knowledgearticle.json": {
            "get": {
                "tags": [
                    "Knowledge Articles"
                ],
                "operationId": "listKnowledgeArticles",
                "summary": "List all Knowledge Articles",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_knowledge**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_knowledge"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Knowledge Articles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowledgeArticle"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-78d3-4eb0-87c9-23312d5f4d2b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "name": "string",
                                                "content": "string",
                                                "article_type": "string",
                                                "tags": "string",
                                                "relationships": [
                                                    {
                                                        "object_name": "string",
                                                        "object_uuid": "string",
                                                        "object_description": "string",
                                                        "create_date": "string"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Knowledge Articles"
                ],
                "operationId": "createKnowledgeArticles",
                "summary": "Create a new Knowledge Article",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_knowledge**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_knowledge"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Knowledge Article record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KnowledgeArticle"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Knowledge Article record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/knowledgearticle/{uuid}.json": {
            "get": {
                "tags": [
                    "Knowledge Articles"
                ],
                "operationId": "getKnowledgeArticles",
                "summary": "Retrieve a Knowledge Article",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_knowledge**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_knowledge"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Knowledge Article",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Knowledge Article record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KnowledgeArticle"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-8bee-4a4d-a32b-233122b6b4bb",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "name": "string",
                                            "content": "string",
                                            "article_type": "string",
                                            "tags": "string",
                                            "relationships": [
                                                {
                                                    "object_name": "string",
                                                    "object_uuid": "string",
                                                    "object_description": "string",
                                                    "create_date": "string"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Knowledge Articles"
                ],
                "operationId": "updateKnowledgeArticles",
                "summary": "Update a Knowledge Article",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_knowledge**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_knowledge"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Knowledge Article",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Knowledge Article fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KnowledgeArticle"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Knowledge Articles"
                ],
                "operationId": "deleteKnowledgeArticles",
                "summary": "Delete a Knowledge Article",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_knowledge**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_knowledge"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Knowledge Article",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Knowledge Article successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/location.json": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "operationId": "listLocations",
                "summary": "List all Locations",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_locations**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_locations"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Locations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Location"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "name": "string",
                                                "line1": "string",
                                                "line2": "string",
                                                "line3": "string",
                                                "city": "string",
                                                "country": "string",
                                                "post_code": "string",
                                                "phone_1": "string",
                                                "state": "string",
                                                "lng": "number",
                                                "lat": "number",
                                                "uuid": "123e4567-fddf-4ec9-97c0-23312fd6aeeb",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "operationId": "createLocations",
                "summary": "Create a new Location",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_locations**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_locations"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Location record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Location"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Location record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/location/{uuid}.json": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "operationId": "getLocations",
                "summary": "Retrieve a Location",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_locations**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_locations"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Location",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "name": "string",
                                            "line1": "string",
                                            "line2": "string",
                                            "line3": "string",
                                            "city": "string",
                                            "country": "string",
                                            "post_code": "string",
                                            "phone_1": "string",
                                            "state": "string",
                                            "lng": "number",
                                            "lat": "number",
                                            "uuid": "123e4567-d614-47c3-9bd9-23312f572d0b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "operationId": "updateLocations",
                "summary": "Update a Location",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_locations**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_locations"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Location",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Location fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Location"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "operationId": "deleteLocations",
                "summary": "Delete a Location",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_locations**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_locations"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Location",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/material.json": {
            "get": {
                "tags": [
                    "Materials"
                ],
                "operationId": "listMaterials",
                "summary": "List all Materials",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_inventory**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_inventory"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Materials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Material"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "name": "string",
                                                "item_number": "string",
                                                "price": "string",
                                                "cost": "string",
                                                "quantity_in_stock": "number",
                                                "price_includes_taxes": "string",
                                                "barcode": "string",
                                                "item_is_inventoried": "string",
                                                "uuid": "123e4567-99d8-42e2-9905-23312ec9e13b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "item_description": "string",
                                                "use_description_for_invoicing": "string",
                                                "tax_rate_uuid": "123e4567-7644-41bc-b6e9-233126dedc7b"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Materials"
                ],
                "operationId": "createMaterials",
                "summary": "Create a new Material",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_inventory**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_inventory"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Material record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Material"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Material record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/material/{uuid}.json": {
            "get": {
                "tags": [
                    "Materials"
                ],
                "operationId": "getMaterials",
                "summary": "Retrieve a Material",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_inventory**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_inventory"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Material",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Material record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Material"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "name": "string",
                                            "item_number": "string",
                                            "price": "string",
                                            "cost": "string",
                                            "quantity_in_stock": "number",
                                            "price_includes_taxes": "string",
                                            "barcode": "string",
                                            "item_is_inventoried": "string",
                                            "uuid": "123e4567-2fea-4393-ab6d-233121eff23b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "item_description": "string",
                                            "use_description_for_invoicing": "string",
                                            "tax_rate_uuid": "123e4567-a7e1-45f3-b07d-23312091447b"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Materials"
                ],
                "operationId": "updateMaterials",
                "summary": "Update a Material",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_inventory**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_inventory"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Material",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Material fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Material"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Materials"
                ],
                "operationId": "deleteMaterials",
                "summary": "Delete a Material",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_inventory**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_inventory"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Material",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Material successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/materialbundle.json": {
            "get": {
                "tags": [
                    "Bundles"
                ],
                "operationId": "listBundles",
                "summary": "List all Bundles",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_inventory**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_inventory"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Bundles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MaterialBundle"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-5785-4079-a2be-23312328753b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "item_number": "string",
                                                "name": "string",
                                                "material_list": [
                                                    {
                                                        "uuid": "string",
                                                        "quantity": "number"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Bundles"
                ],
                "operationId": "createBundles",
                "summary": "Create a new Bundle",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_inventory**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_inventory"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Bundle record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MaterialBundle"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Bundle record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/materialbundle/{uuid}.json": {
            "get": {
                "tags": [
                    "Bundles"
                ],
                "operationId": "getBundles",
                "summary": "Retrieve a Bundle",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_inventory**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_inventory"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Bundle",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bundle record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MaterialBundle"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-b87a-446d-8e10-23312e149aab",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "item_number": "string",
                                            "name": "string",
                                            "material_list": [
                                                {
                                                    "uuid": "string",
                                                    "quantity": "number"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Bundles"
                ],
                "operationId": "updateBundles",
                "summary": "Update a Bundle",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_inventory**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_inventory"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Bundle",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Bundle fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MaterialBundle"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bundles"
                ],
                "operationId": "deleteBundles",
                "summary": "Delete a Bundle",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_inventory**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_inventory"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Bundle",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bundle successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/queue.json": {
            "get": {
                "tags": [
                    "Job Queues"
                ],
                "operationId": "listJobQueues",
                "summary": "List all Job Queues",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_queues**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_job_queues"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Job Queues",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Queue"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-2d08-484c-be59-233120ae108b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "name": "string",
                                                "default_timeframe": "string",
                                                "subscribed_staff": "string",
                                                "requires_assignment": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Queues"
                ],
                "operationId": "createJobQueues",
                "summary": "Create a new Job Queue",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_queues**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_queues"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Job Queue record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Queue"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Job Queue record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/queue/{uuid}.json": {
            "get": {
                "tags": [
                    "Job Queues"
                ],
                "operationId": "getJobQueues",
                "summary": "Retrieve a Job Queue",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_job_queues**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_job_queues"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Queue",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Queue record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Queue"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-6501-4d91-852a-23312a1e535b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "name": "string",
                                            "default_timeframe": "string",
                                            "subscribed_staff": "string",
                                            "requires_assignment": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Queues"
                ],
                "operationId": "updateJobQueues",
                "summary": "Update a Job Queue",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_queues**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_queues"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Queue",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Job Queue fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Queue"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Job Queues"
                ],
                "operationId": "deleteJobQueues",
                "summary": "Delete a Job Queue",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_job_queues**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_job_queues"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Job Queue",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Queue successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/securityrole.json": {
            "get": {
                "tags": [
                    "Security Roles"
                ],
                "operationId": "listSecurityRoles",
                "summary": "List all Security Roles",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_security_roles**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_security_roles"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Security Roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SecurityRole"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "name": "string",
                                                "role_description": "string",
                                                "uuid": "123e4567-f1f0-492a-a7fa-23312eb4dc4b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/securityrole/{uuid}.json": {
            "get": {
                "tags": [
                    "Security Roles"
                ],
                "operationId": "getSecurityRoles",
                "summary": "Retrieve a Security Role",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_security_roles**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_security_roles"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Security Role",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Security Role record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecurityRole"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "name": "string",
                                            "role_description": "string",
                                            "uuid": "123e4567-0ccd-4eeb-8f53-23312037212b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/smstemplate.json": {
            "get": {
                "tags": [
                    "SMS Templates"
                ],
                "operationId": "listSMSTemplates",
                "summary": "List all SMS Templates",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of SMS Templates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SmsTemplate"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-e61a-4145-b1d2-23312cd1995b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "name": "string",
                                                "message": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SMS Templates"
                ],
                "operationId": "createSMSTemplates",
                "summary": "Create a new SMS Template",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "SMS Template record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SmsTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created SMS Template record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/smstemplate/{uuid}.json": {
            "get": {
                "tags": [
                    "SMS Templates"
                ],
                "operationId": "getSMSTemplates",
                "summary": "Retrieve a SMS Template",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the SMS Template",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SMS Template record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SmsTemplate"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-8981-4fd5-bb9f-23312289effb",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "name": "string",
                                            "message": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SMS Templates"
                ],
                "operationId": "updateSMSTemplates",
                "summary": "Update a SMS Template",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the SMS Template",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "SMS Template fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SmsTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "SMS Templates"
                ],
                "operationId": "deleteSMSTemplates",
                "summary": "Delete a SMS Template",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_templates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_templates"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the SMS Template",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SMS Template successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/staff.json": {
            "get": {
                "tags": [
                    "Staff Members"
                ],
                "operationId": "listStaffMembers",
                "summary": "List all Staff Members",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_staff**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_staff"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Staff Members",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Staff"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "first": "string",
                                                "last": "string",
                                                "email": "string",
                                                "mobile": "string",
                                                "lng": "number",
                                                "lat": "number",
                                                "geo_timestamp": "2025-09-01 12:00:00",
                                                "job_title": "string",
                                                "navigating_to_job_uuid": "123e4567-b2f1-47d2-8291-23312b679e1b",
                                                "navigating_timestamp": "2025-09-01 12:00:00",
                                                "navigating_expiry_timestamp": "2025-09-01 12:00:00",
                                                "color": "string",
                                                "custom_icon_url": "string",
                                                "status_message": "string",
                                                "status_message_timestamp": "2025-09-01 12:00:00",
                                                "hide_from_schedule": "string",
                                                "security_role_uuid": "123e4567-dd37-4f71-a0f1-2331258ed12b",
                                                "uuid": "123e4567-3258-4aca-9726-233123f73cdb",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "can_receive_push_notification": "string",
                                                "labour_material_uuid": "123e4567-ffa8-49e2-b007-233127ce82ab"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Staff Members"
                ],
                "operationId": "createStaffMembers",
                "summary": "Create a new Staff Member",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_staff**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_staff"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Staff Member record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Staff"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Staff Member record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/staff/{uuid}.json": {
            "get": {
                "tags": [
                    "Staff Members"
                ],
                "operationId": "getStaffMembers",
                "summary": "Retrieve a Staff Member",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_staff**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_staff"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Staff Member",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff Member record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Staff"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "first": "string",
                                            "last": "string",
                                            "email": "string",
                                            "mobile": "string",
                                            "lng": "number",
                                            "lat": "number",
                                            "geo_timestamp": "2025-09-01 12:00:00",
                                            "job_title": "string",
                                            "navigating_to_job_uuid": "123e4567-2e30-45a9-8ec4-23312dc9a60b",
                                            "navigating_timestamp": "2025-09-01 12:00:00",
                                            "navigating_expiry_timestamp": "2025-09-01 12:00:00",
                                            "color": "string",
                                            "custom_icon_url": "string",
                                            "status_message": "string",
                                            "status_message_timestamp": "2025-09-01 12:00:00",
                                            "hide_from_schedule": "string",
                                            "security_role_uuid": "123e4567-1ba3-46b8-99fe-2331207f440b",
                                            "uuid": "123e4567-bbb7-493d-8ad9-2331245c3d8b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "can_receive_push_notification": "string",
                                            "labour_material_uuid": "123e4567-638f-497d-ac47-23312878930b"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Staff Members"
                ],
                "operationId": "updateStaffMembers",
                "summary": "Update a Staff Member",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_staff**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_staff"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Staff Member",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Staff Member fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Staff"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Staff Members"
                ],
                "operationId": "deleteStaffMembers",
                "summary": "Delete a Staff Member",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_staff**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_staff"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Staff Member",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff Member successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/staffmessage.json": {
            "get": {
                "tags": [
                    "Staff Messages"
                ],
                "operationId": "listStaffMessages",
                "summary": "List all Staff Messages",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_messages**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_messages"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Staff Messages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StaffMessage"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-37cf-4ebb-90b4-233124180d6b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "from_staff_uuid": "123e4567-cd09-46f7-ab9f-23312a8fba4b",
                                                "to_staff_uuid": "123e4567-c961-4130-b820-233128ffcd7b",
                                                "sent_timestamp": "2025-09-01 12:00:00",
                                                "delivered_timestamp": "2025-09-01 12:00:00",
                                                "read_timestamp": "2025-09-01 12:00:00",
                                                "message": "string",
                                                "regarding_job_uuid": "123e4567-9559-4d11-8628-2331265c4c2b",
                                                "attached_json": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Staff Messages"
                ],
                "operationId": "createStaffMessages",
                "summary": "Create a new Staff Message",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **publish_messages**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "publish_messages"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Staff Message record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffMessage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Staff Message record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/staffmessage/{uuid}.json": {
            "get": {
                "tags": [
                    "Staff Messages"
                ],
                "operationId": "getStaffMessages",
                "summary": "Retrieve a Staff Message",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_messages**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_messages"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Staff Message",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff Message record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaffMessage"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-5d12-44e0-a4fc-23312077e30b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "from_staff_uuid": "123e4567-2401-4b98-b9ea-233123429a7b",
                                            "to_staff_uuid": "123e4567-5f03-4003-9dda-233122941d3b",
                                            "sent_timestamp": "2025-09-01 12:00:00",
                                            "delivered_timestamp": "2025-09-01 12:00:00",
                                            "read_timestamp": "2025-09-01 12:00:00",
                                            "message": "string",
                                            "regarding_job_uuid": "123e4567-3c43-4e1f-911e-23312396770b",
                                            "attached_json": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Staff Messages"
                ],
                "operationId": "updateStaffMessages",
                "summary": "Update a Staff Message",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **publish_messages**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "publish_messages"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Staff Message",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Staff Message fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffMessage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Staff Messages"
                ],
                "operationId": "deleteStaffMessages",
                "summary": "Delete a Staff Message",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **publish_messages**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "publish_messages"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Staff Message",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff Message successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/task.json": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "operationId": "listTasks",
                "summary": "List all Tasks",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_tasks**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_tasks"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Tasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Task"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "due_date": "YYYY-MM-DD",
                                                "task_details": "string",
                                                "name": "string",
                                                "related_object": "string",
                                                "related_object_uuid": "123e4567-cc75-4380-9e65-23312528699b",
                                                "task_complete": "string",
                                                "completed_timestamp": "2025-09-01 12:00:00",
                                                "completed_by_staff_uuid": "123e4567-702c-4267-925f-233126aaa51b",
                                                "assigned_to_staff_uuid": "123e4567-ab16-42b5-a3c8-233123f5784b",
                                                "lng": "string",
                                                "lat": "string",
                                                "uuid": "123e4567-3a46-496b-b14a-23312346b86b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "created_by_staff_uuid": "123e4567-d262-4a80-a2ff-23312e1d989b",
                                                "create_date": "2025-09-01 12:00:00"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "operationId": "createTasks",
                "summary": "Create a new Task",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_tasks**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_tasks"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Task record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Task record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/task/{uuid}.json": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "operationId": "getTasks",
                "summary": "Retrieve a Task",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_tasks**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_tasks"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Task",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "due_date": "YYYY-MM-DD",
                                            "task_details": "string",
                                            "name": "string",
                                            "related_object": "string",
                                            "related_object_uuid": "123e4567-9646-42c9-ad00-233123d4b93b",
                                            "task_complete": "string",
                                            "completed_timestamp": "2025-09-01 12:00:00",
                                            "completed_by_staff_uuid": "123e4567-6079-426e-a62b-23312aaa4f6b",
                                            "assigned_to_staff_uuid": "123e4567-72eb-4409-a34f-2331282af36b",
                                            "lng": "string",
                                            "lat": "string",
                                            "uuid": "123e4567-82a3-4bee-920b-23312c48dffb",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "created_by_staff_uuid": "123e4567-286c-4534-aa9c-23312e79b18b",
                                            "create_date": "2025-09-01 12:00:00"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "operationId": "updateTasks",
                "summary": "Update a Task",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_tasks**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_tasks"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Task",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Task fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "operationId": "deleteTasks",
                "summary": "Delete a Task",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_tasks**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_tasks"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Task",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxrate.json": {
            "get": {
                "tags": [
                    "Tax Rates"
                ],
                "operationId": "listTaxRates",
                "summary": "List all Tax Rates",
                "description": "\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_tax_rates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_tax_rates"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Tax Rates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TaxRate"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-9c32-42fa-a4a1-233128a16c3b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "name": "string",
                                                "amount": "string",
                                                "is_default_tax_rate": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tax Rates"
                ],
                "operationId": "createTaxRates",
                "summary": "Create a new Tax Rate",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_tax_rates**.\n\n\t\t\t\n\t\t\t\n#### Record UUID\nUUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_tax_rates"
                        ]
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Tax Rate record to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxRate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "headers": {
                            "x-record-uuid": {
                                "description": "UUID of newly created Tax Rate record",
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to create this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taxrate/{uuid}.json": {
            "get": {
                "tags": [
                    "Tax Rates"
                ],
                "operationId": "getTaxRates",
                "summary": "Retrieve a Tax Rate",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **read_tax_rates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_tax_rates"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Tax Rate",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax Rate record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxRate"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-bf41-44da-be54-233120c61b2b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "name": "string",
                                            "amount": "string",
                                            "is_default_tax_rate": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tax Rates"
                ],
                "operationId": "updateTaxRates",
                "summary": "Update a Tax Rate",
                "description": "\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_tax_rates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_tax_rates"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Tax Rate",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Tax Rate fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxRate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - The record was updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to update this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to update does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tax Rates"
                ],
                "operationId": "deleteTaxRates",
                "summary": "Delete a Tax Rate",
                "description": "\n\t\t\t\nIn ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.\n\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **manage_tax_rates**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_tax_rates"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Tax Rate",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax Rate successfully archived (soft deleted)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "errorCode": "0",
                                            "message": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The record to delete does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vendor.json": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "listVendors",
                "summary": "List all Vendors",
                "description": "Vendor account information\n\n\n\t\t\t\n#### Filtering\nThis endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).\n\t\t\t\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **vendor**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "vendor"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Vendors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vendor"
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": [
                                            {
                                                "uuid": "123e4567-04a6-4d3e-b6a0-23312173d30b",
                                                "active": 1,
                                                "edit_date": "2025-09-01 12:00:00",
                                                "name": "string",
                                                "abn_number": "string",
                                                "business_number": "string",
                                                "website": "string",
                                                "email": "string",
                                                "email_accounts": "string",
                                                "billing_address": "string",
                                                "accepted_payment_methods": "string",
                                                "default_region": "string",
                                                "currency": "string",
                                                "opening_time_monday": "string",
                                                "closing_time_monday": "string",
                                                "opening_time_tuesday": "string",
                                                "closing_time_tuesday": "string",
                                                "opening_time_wednesday": "string",
                                                "closing_time_wednesday": "string",
                                                "opening_time_thursday": "string",
                                                "closing_time_thursday": "string",
                                                "opening_time_friday": "string",
                                                "closing_time_friday": "string",
                                                "opening_time_saturday": "string",
                                                "closing_time_saturday": "string",
                                                "opening_time_sunday": "string",
                                                "closing_time_sunday": "string",
                                                "timezone_name": "string",
                                                "invoice_terms": "string",
                                                "job_default_status": "string"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vendor/{uuid}.json": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "operationId": "getVendors",
                "summary": "Retrieve a Vendor",
                "description": "Vendor account information\n\n\n\t\t\t\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **vendor**.\n\n\t\t\t",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "vendor"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the Vendor",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vendor record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendor"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "uuid": "123e4567-ced4-41c9-afdf-23312a5c812b",
                                            "active": 1,
                                            "edit_date": "2025-09-01 12:00:00",
                                            "name": "string",
                                            "abn_number": "string",
                                            "business_number": "string",
                                            "website": "string",
                                            "email": "string",
                                            "email_accounts": "string",
                                            "billing_address": "string",
                                            "accepted_payment_methods": "string",
                                            "default_region": "string",
                                            "currency": "string",
                                            "opening_time_monday": "string",
                                            "closing_time_monday": "string",
                                            "opening_time_tuesday": "string",
                                            "closing_time_tuesday": "string",
                                            "opening_time_wednesday": "string",
                                            "closing_time_wednesday": "string",
                                            "opening_time_thursday": "string",
                                            "closing_time_thursday": "string",
                                            "opening_time_friday": "string",
                                            "closing_time_friday": "string",
                                            "opening_time_saturday": "string",
                                            "closing_time_saturday": "string",
                                            "opening_time_sunday": "string",
                                            "closing_time_sunday": "string",
                                            "timezone_name": "string",
                                            "invoice_terms": "string",
                                            "job_default_status": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The request is malformed or contains invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "badRequest": {
                                        "value": {
                                            "errorCode": "1000",
                                            "message": "An error occurred completing your request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication credentials are missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                },
                                "examples": {
                                    "unauthorized": {
                                        "value": {
                                            "errorCode": "401",
                                            "message": "Authentication failed. Please check your API key or OAuth token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - You don't have permission to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "examples": {
                                    "forbidden": {
                                        "value": {
                                            "errorCode": "403",
                                            "message": "Access forbidden. You don't have permission to access this resource."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested record does not exist or has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "errorCode": "404",
                                            "message": "Resource not found. The requested record does not exist or has been deleted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - You have exceeded the rate limit",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitError"
                                },
                                "examples": {
                                    "rateLimitMinute": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per minute exceeded"
                                        }
                                    },
                                    "rateLimitDay": {
                                        "value": {
                                            "errorCode": 429,
                                            "message": "Number of allowed API requests per day exceeded"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "value": {
                                            "errorCode": 500,
                                            "message": "An unexpected error occurred. Please try again later."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inboxmessage.json": {
            "get": {
                "tags": [
                    "Inbox"
                ],
                "operationId": "listInboxMessages",
                "summary": "List inbox messages",
                "description": "Retrieves a paginated list of inbox messages with optional filtering",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_inbox"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of messages to return (1-500)",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 500,
                            "default": 50
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of messages to skip for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter messages by status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "unread",
                                "archived",
                                "snoozed"
                            ],
                            "default": "all"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search messages by subject, from name, or from email",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InboxMessagesResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Missing permission or OAuth scope",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Service Unavailable - Inbox not enabled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Inbox"
                ],
                "operationId": "createInboxMessage",
                "summary": "Create a new inbox message",
                "description": "Creates a new inbox message that will appear in the inbox",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_inbox"
                        ]
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateInboxMessageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Message created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InboxMessageDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Missing permission or OAuth scope",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - Related entity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inboxmessage/{uuid}.json": {
            "get": {
                "tags": [
                    "Inbox"
                ],
                "operationId": "getInboxMessage",
                "summary": "Get inbox message details",
                "description": "Retrieves detailed information about a specific inbox message including attachments and conversation history",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "read_inbox"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "UUID of the inbox message",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InboxMessageDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inboxmessage/{uuid}/read.json": {
            "put": {
                "tags": [
                    "Inbox"
                ],
                "operationId": "markInboxMessageAsRead",
                "summary": "Mark message as read",
                "description": "Marks an inbox message as read",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_inbox"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "UUID of the inbox message",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message marked as read",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inboxmessage/{uuid}/archive.json": {
            "put": {
                "tags": [
                    "Inbox"
                ],
                "operationId": "archiveInboxMessage",
                "summary": "Archive or unarchive message",
                "description": "Archives or unarchives an inbox message",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_inbox"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "UUID of the inbox message",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ArchiveRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message archived/unarchived",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inboxmessage/{uuid}/snooze.json": {
            "put": {
                "tags": [
                    "Inbox"
                ],
                "operationId": "snoozeInboxMessage",
                "summary": "Snooze or unsnooze message",
                "description": "Snoozes a message until a specified date/time or unsnoozes it",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_inbox"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "UUID of the inbox message",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SnoozeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message snoozed/unsnoozed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid snooze date",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inboxmessage/{uuid}/convert-to-job.json": {
            "post": {
                "tags": [
                    "Inbox"
                ],
                "operationId": "convertInboxMessageToJob",
                "summary": "Convert message to job",
                "description": "Converts an inbox message into a new job, optionally using a job template",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_inbox"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "UUID of the inbox message",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConvertToJobRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Job created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConvertToJobResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inboxmessage/{uuid}/attach-to-job.json": {
            "post": {
                "tags": [
                    "Inbox"
                ],
                "operationId": "attachInboxMessageToJob",
                "summary": "Attach message to existing job",
                "description": "Attaches an inbox message to an existing job",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_inbox"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "UUID of the inbox message",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachToJobRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message attached to job",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttachToJobResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inboxmessage/{uuid}/notes.json": {
            "post": {
                "tags": [
                    "Inbox"
                ],
                "operationId": "addNoteToInboxMessage",
                "summary": "Add note to message",
                "description": "Adds a note to an inbox message",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "manage_inbox"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "UUID of the inbox message",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNoteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Note added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Empty note",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/jobtemplate/{uuid}/job.json": {
            "post": {
                "tags": [
                    "Job Templates"
                ],
                "operationId": "createJobFromTemplate",
                "summary": "Create a job from a template",
                "description": "Creates a new job by cloning an existing job template. All template entities (tasks, materials, checklists, quotes, custom fields) are cloned to the new job.\n\n#### Field Overrides\nOnly the following fields can be overridden when creating a job from a template:\n- `job_description` - Job description\n- `company_uuid` - UUID of the company/client\n- `company_name` - Name of the company/client (will lookup existing or create new)\n- `job_address` - Street address for the job\n\n**Note:** You cannot specify both `company_uuid` and `company_name`. If `company_name` is provided, the system will first search for an existing company with that name. If found, it will use that company's UUID. If not found, a new company will be created.\n\nAny other fields in the request body will be ignored.\n\n#### OAuth Scope\nThis endpoint requires the following OAuth scope **create_jobs**.",
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "oauth2": [
                            "create_jobs"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "UUID of the job template to clone from",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    }
                ],
                "requestBody": {
                    "description": "Optional field overrides for the new job",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobTemplateOverrides"
                            },
                            "examples": {
                                "minimal": {
                                    "summary": "Minimal override example",
                                    "value": {
                                        "company_uuid": "550e8400-e29b-41d4-a716-446655440001"
                                    }
                                },
                                "companyName": {
                                    "summary": "Using company name",
                                    "value": {
                                        "company_name": "ACME Corporation",
                                        "job_address": "456 Oak Avenue"
                                    }
                                },
                                "full": {
                                    "summary": "All allowed overrides with UUID",
                                    "value": {
                                        "job_description": "Annual HVAC maintenance",
                                        "company_uuid": "550e8400-e29b-41d4-a716-446655440001",
                                        "job_address": "123 Main Street"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Job created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jobUUID": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "UUID of the created job"
                                        },
                                        "location": {
                                            "type": "string",
                                            "description": "API path to the created job resource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Success message"
                                        }
                                    },
                                    "required": [
                                        "jobUUID",
                                        "location",
                                        "message"
                                    ]
                                },
                                "examples": {
                                    "success": {
                                        "summary": "Successful job creation",
                                        "value": {
                                            "jobUUID": "550e8400-e29b-41d4-a716-446655440003",
                                            "location": "/api_1.0/job/550e8400-e29b-41d4-a716-446655440003.json",
                                            "message": "Job created successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "invalidUUID": {
                                        "summary": "Invalid UUID format",
                                        "value": {
                                            "errorCode": 400,
                                            "message": "Invalid job template UUID format"
                                        }
                                    },
                                    "invalidJSON": {
                                        "summary": "Invalid JSON in request body",
                                        "value": {
                                            "errorCode": 400,
                                            "message": "Invalid JSON in request body"
                                        }
                                    },
                                    "bothCompanyFields": {
                                        "summary": "Both company_uuid and company_name provided",
                                        "value": {
                                            "errorCode": 400,
                                            "message": "Cannot specify both company_uuid and company_name. Please provide only one."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Missing required OAuth scope",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "forbidden": {
                                        "summary": "Missing OAuth scope",
                                        "value": {
                                            "errorCode": 403,
                                            "message": "OAuth token missing required scope: create_jobs"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Template UUID not found or inactive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "notFound": {
                                        "summary": "Template not found",
                                        "value": {
                                            "errorCode": 404,
                                            "message": "Job template not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "headers": {
                            "Allow": {
                                "description": "Allowed HTTP methods",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "methodNotAllowed": {
                                        "summary": "Wrong HTTP method",
                                        "value": {
                                            "errorCode": 405,
                                            "message": "Method not allowed. Use POST to create a job from template."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "serverError": {
                                        "summary": "Internal server error",
                                        "value": {
                                            "errorCode": 500,
                                            "message": "Failed to create job from template"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search.json": {
            "get": {
                "tags": [
                    "Search"
                ],
                "operationId": "generalSearch",
                "summary": "Search across multiple object types",
                "description": "Performs a text search across jobs, companies, and materials. Returns combined results sorted by relevance.",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": true,
                        "description": "Search query string",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "example": "plumbing repair"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "description": "Maximum number of results to return (max 50)",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 50,
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Missing query parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search/{objectType}.json": {
            "get": {
                "tags": [
                    "Search"
                ],
                "operationId": "objectSearch",
                "summary": "Search within a specific object type",
                "description": "Performs a text search within a specific object type. Supported types: job, company, material, knowledgearticle, attachment, formresponse, asset, materialbundle",
                "parameters": [
                    {
                        "name": "objectType",
                        "in": "path",
                        "required": true,
                        "description": "Type of object to search",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "job",
                                "company",
                                "material",
                                "knowledgearticle",
                                "attachment",
                                "formresponse",
                                "asset",
                                "materialbundle"
                            ]
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "required": true,
                        "description": "Search query string",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "example": "emergency repair"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "description": "Maximum number of results to return (max 100)",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 50
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectSearchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests - Search throttled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search/job/embedding.json": {
            "get": {
                "tags": [
                    "Search"
                ],
                "operationId": "jobEmbeddingSearch",
                "summary": "Semantic search for jobs",
                "description": "Harness the power of advanced AI embeddings to revolutionise how you search through job data. This endpoint transforms your search query into high-dimensional vector embeddings, then intelligently matches it against our entire job database using semantic similarity algorithms.\n\nHow it works:\n1. AI Query Understanding - Your search terms are processed through neural embedding models that understand context, intent, and meaning\n2. Vector-Based Matching - The system compares your query against vector representations of all job content in real-time\n3. Intelligent Ranking - Returns results ranked by semantic similarity, not just keyword matching\n\nWhy this matters:\n- Find jobs about \"plumbing repairs\" even when searching for \"fixing pipes\"\n- Discover relevant work orders that use different terminology but share the same intent\n- Uncover hidden patterns and connections in your job data that traditional search would miss\n\nThis isn't just search\u2014it's AI that truly understands what you're looking for and delivers the most relevant results, even when the exact words don't match.",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": true,
                        "description": "Search query string",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "example": "replace hot water system"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "description": "Maximum number of results to return (max 50)",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 50,
                            "default": 10
                        }
                    },
                    {
                        "name": "similarity_threshold",
                        "in": "query",
                        "required": false,
                        "description": "Minimum similarity score (0.0 to 1.0)",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "minimum": 0,
                            "maximum": 1,
                            "default": 0.7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Embedding search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmbeddingSearchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable - Embedding search not available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "apiKey": {
                "type": "apiKey",
                "name": "X-Api-Key",
                "in": "header"
            },
            "oauth2": {
                "type": "oauth2",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://api.servicem8.com/oauth/authorize",
                        "tokenUrl": "https://api.servicem8.com/oauth/access_token",
                        "scopes": {
                            "staff_locations": "Access to real-time GPS information about staff",
                            "staff_activity": "Access to clock on, lunch break and clock off information about staff",
                            "publish_sms": "Access to send SMS messages to customers and/or staff on your behalf. Note sending SMS messages will incur account charges.",
                            "publish_email": "Access to send Email messages to customers and/or staff on your behalf",
                            "vendor": "Access to basic account information",
                            "vendor_logo": "Access to account logo",
                            "vendor_email": "Access to account holder email address",
                            "read_locations": "Read-only access to Location Endpoint",
                            "manage_locations": "Full access to Location Endpoint",
                            "read_staff": "Read-only access to Staff Endpoint",
                            "manage_staff": "Full access to Staff Endpoint",
                            "read_customers": "Read-only access to Company Endpoint",
                            "manage_customers": "Full access to Company Endpoint",
                            "read_customer_contacts": "Read-only access to CompanyContact Endpoint",
                            "manage_customer_contacts": "Full access to CompanyContact Endpoint",
                            "read_jobs": "Read-only access to Job Endpoint",
                            "manage_jobs": "Full access to Job Endpoint",
                            "create_jobs": "Ability to create jobs on behalf of account. Note creating jobs may incur account charges.",
                            "read_job_contacts": "Read-only access to JobContact Endpoint",
                            "manage_job_contacts": "Full access to JobContact Endpoint",
                            "read_job_materials": "Read-only access to JobMaterials Endpoint",
                            "manage_job_materials": "Full access to JobMaterials Endpoint",
                            "read_job_categories": "Read-only access to Categories Endpoint",
                            "manage_job_categories": "Full access to Categories Endpoint",
                            "read_job_queues": "Read-only access to Job Queues Endpoint",
                            "manage_job_queues": "Full access to Job Queues Endpoint",
                            "read_tasks": "Read-only access to Tasks Endpoint",
                            "manage_tasks": "Full access to Tasks Endpoint",
                            "read_schedule": "Read-only access to JobActivity Endpoint",
                            "manage_schedule": "Full access to JobActivity Endpoint",
                            "read_inventory": "Read-only access to Materials Endpoint",
                            "manage_inventory": "Full access to Materials Endpoint",
                            "read_job_notes": "Read-only access to job notes",
                            "publish_job_notes": "Ability to add new job notes",
                            "read_job_photos": "Read-only access to job photos",
                            "publish_job_photos": "Ability to add new job photos",
                            "read_attachments": "Read-only access to Attachments Endpoint",
                            "manage_attachments": "Full access to Attachments Endpoint",
                            "read_inbox": "Read-only access to inbox messages",
                            "read_messages": "Read-only access to staff messages",
                            "manage_notifications": "Ability to read notifications and mark as read",
                            "manage_templates": "Full-access to email, sms and document templates",
                            "manage_badges": "Full-access to create/modify job badges",
                            "read_assets": "Read-only access to Assets Endpoint",
                            "manage_assets": "Full access to Assets Endpoint",
                            "read_knowledge_base": "Read-only access to Knowledge Base Endpoint",
                            "manage_knowledge_base": "Full access to Knowledge Base Endpoint"
                        }
                    }
                }
            }
        },
        "schemas": {
            "WebhookEvent": {
                "type": "object",
                "required": [
                    "event_type",
                    "timestamp",
                    "data"
                ],
                "properties": {
                    "event_type": {
                        "type": "string",
                        "pattern": "^[a-z]+\\.[a-z]+$",
                        "description": "Type of event (e.g., job.created, company.updated)",
                        "example": "job.updated"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "ISO 8601 timestamp of when the event occurred"
                    },
                    "data": {
                        "type": "object",
                        "description": "Event-specific payload containing the affected resource"
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "attempt": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "Delivery attempt number"
                            },
                            "signature": {
                                "type": "string",
                                "description": "HMAC-SHA256 signature for webhook verification"
                            }
                        }
                    }
                }
            },
            "Result": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "number",
                        "format": "int32",
                        "example": "0"
                    },
                    "message": {
                        "type": "string",
                        "example": "OK"
                    }
                }
            },
            "Error": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "number",
                        "format": "int32",
                        "example": "1000"
                    },
                    "message": {
                        "type": "string",
                        "example": "An error occurred completing your request"
                    }
                }
            },
            "RateLimitError": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "number",
                        "format": "int32",
                        "example": "429"
                    },
                    "message": {
                        "type": "string",
                        "example": "Number of allowed API requests per minute exceeded"
                    }
                }
            },
            "AuthenticationError": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "number",
                        "format": "int32",
                        "example": "401"
                    },
                    "message": {
                        "type": "string",
                        "example": "Authentication failed. Please check your API key or OAuth token."
                    }
                }
            },
            "ForbiddenError": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "number",
                        "format": "int32",
                        "example": "403"
                    },
                    "message": {
                        "type": "string",
                        "example": "Access forbidden. You don't have permission to access this resource."
                    }
                }
            },
            "NotFoundError": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "number",
                        "format": "int32",
                        "example": "404"
                    },
                    "message": {
                        "type": "string",
                        "example": "Resource not found. The requested record does not exist or has been deleted."
                    }
                }
            },
            "AllocationWindow": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-d957-4cea-8e46-23312dbc37db",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "name": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "integer"
                    },
                    "end_time": {
                        "type": "integer"
                    },
                    "sort_priority": {
                        "type": "integer"
                    }
                }
            },
            "Asset": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-b3fd-4aa6-802a-2331245a91eb",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "company_uuid": {
                        "format": "uuid",
                        "example": "123e4567-861c-4daf-bf90-2331256c1dbb",
                        "type": "string",
                        "description": "UUID of the Client to which this Asset is attached"
                    },
                    "asset_code": {
                        "type": "string",
                        "description": "The unique code printed on this Asset's attached label (read only)"
                    },
                    "asset_type_uuid": {
                        "format": "uuid",
                        "example": "123e4567-895a-4fa2-a995-23312f27366b",
                        "type": "string",
                        "description": "UUID of an Asset Type which defines the fields that can be stored for this Asset (read only)"
                    },
                    "name": {
                        "type": "string",
                        "description": "User-facing description of this asset",
                        "maxLength": 100
                    },
                    "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude component of the Asset's location in degrees"
                    },
                    "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Longitude component of the Asset's location in degrees"
                    },
                    "geo_timestamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string",
                        "description": "Timestamp at which the Asset's location was last updated"
                    },
                    "altitude": {
                        "type": "number",
                        "description": "Altitude component of the Asset's location in metres"
                    },
                    "field_data": {
                        "type": "array",
                        "description": "JSON array containing field values for this asset. Each entry represents a field value defined by the associated AssetType, with field values stored as strings. Date fields use Y-m-d format. This field stores all custom fields defined in the asset type template.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uuid": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "Must be the UUID of an AssetTypeField"
                                },
                                "fieldType": {
                                    "type": "string"
                                },
                                "fieldName": {
                                    "type": "string"
                                },
                                "fieldValue": {
                                    "type": "string",
                                    "description": "Convert all values to string. Dates shall be in Y-m-d format."
                                },
                                "sortOrder": {
                                    "type": "number"
                                }
                            },
                            "required": [
                                "uuid",
                                "fieldType",
                                "fieldName",
                                "fieldValue",
                                "sortOrder"
                            ]
                        }
                    }
                }
            },
            "AssetType": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-01f9-4def-9423-2331299b885b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the asset type. Used to identify different categories of assets that can be tracked in the system. Examples might include 'Air Conditioner', 'Fire Extinguisher', etc."
                    }
                }
            },
            "AssetTypeField": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-b2b2-4b47-bf37-23312fe008fb",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "asset_type_uuid": {
                        "format": "uuid",
                        "example": "123e4567-e4a6-4d54-8cf8-2331221b5f8b",
                        "type": "string",
                        "description": "UUID of the Asset Type to which this field belongs. This field is read-only in the API. (Read only)"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the field that will be displayed to users. Used as a label for the input field when managing assets."
                    },
                    "field_data": {
                        "type": "object",
                        "description": "Configuration data for the field",
                        "properties": {
                            "fieldType": {
                                "type": "string",
                                "enum": [
                                    "Text",
                                    "Number",
                                    "Date",
                                    "Multiple Choice"
                                ]
                            },
                            "mandatory": {
                                "type": "boolean"
                            },
                            "choices": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "fieldType",
                            "mandatory"
                        ]
                    },
                    "sort_order": {
                        "type": "integer",
                        "description": "The order in which this field should be displayed relative to other fields of the same asset type. Lower values display first."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Attachment": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-c52d-4df1-b0b5-23312407ef0b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "related_object": {
                        "type": "string"
                    },
                    "related_object_uuid": {
                        "format": "uuid",
                        "example": "123e4567-95d2-4e52-9c6e-233122fc3c3b",
                        "type": "string"
                    },
                    "attachment_name": {
                        "type": "string",
                        "description": "The security roles description",
                        "maxLength": 127
                    },
                    "file_type": {
                        "type": "string",
                        "description": "Location's name",
                        "maxLength": 50
                    },
                    "created_by_staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-721a-4c9b-bab1-23312fcbefeb",
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string"
                    },
                    "attachment_source": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "string"
                    },
                    "lng": {
                        "type": "number",
                        "format": "float"
                    },
                    "lat": {
                        "type": "number",
                        "format": "float"
                    },
                    "photo_width": {
                        "type": "string"
                    },
                    "photo_height": {
                        "type": "string"
                    },
                    "extracted_info": {
                        "type": "string"
                    },
                    "is_favourite": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "string"
                    }
                }
            },
            "Badge": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-cdb7-472b-971e-23312dbdc94b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the badge. Used to identify the badge in the system. Examples include 'Warranty', 'VIP', 'Take Payment Facilities', etc.",
                        "maxLength": 50
                    },
                    "automatically_allocated": {
                        "type": "string"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "regarding_form_uuid": {
                        "format": "uuid",
                        "example": "123e4567-7b42-4c14-aa12-233125f778bb",
                        "type": "string"
                    },
                    "regarding_asset_type_uuid": {
                        "format": "uuid",
                        "example": "123e4567-8e6c-46d1-b885-233124578abb",
                        "type": "string",
                        "description": "UUID of the asset type that this badge is associated with. Only applicable for asset-based badges. When set, the badge represents a specific asset type in the system and will appear on assets of this type."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Category": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name of the job category. Used to classify and organize jobs.",
                        "type": "string"
                    },
                    "colour": {
                        "description": "The colour associated with this job category. This colour is used to visually identify the category on the dispatch board and in calendar views. The value is a hexadecimal colour code (6 characters 0-9a-f).",
                        "type": "string"
                    },
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-ba14-4fd8-bebf-23312ef4d79b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Company": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Company Name",
                        "type": "string",
                        "maxLength": 100
                    },
                    "abn_number": {
                        "description": "Australian Business Number. A unique 11-digit identifier issued by the Australian Taxation Office to businesses. Required for tax compliance and validation of business identity in Australia.",
                        "type": "string"
                    },
                    "address": {
                        "description": "Password",
                        "type": "string",
                        "maxLength": 500
                    },
                    "billing_address": {
                        "description": "Confirm Password",
                        "type": "string",
                        "maxLength": 500
                    },
                    "parent_company_uuid": {
                        "description": "If provided, specifies the UUID of this Site's parent Company. If blank, this record is a Head Office rather than a Site. This field is only present on ServiceM8 Accounts with the Company Sites addon activated."
                    },
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-c794-4a98-bc0b-23312acd8c9b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "website": {
                        "type": "string"
                    },
                    "is_individual": {
                        "type": "string"
                    },
                    "address_street": {
                        "type": "string",
                        "maxLength": 500
                    },
                    "address_city": {
                        "type": "string"
                    },
                    "address_state": {
                        "type": "string"
                    },
                    "address_postcode": {
                        "type": "string"
                    },
                    "address_country": {
                        "type": "string"
                    },
                    "fax_number": {
                        "type": "string"
                    },
                    "badges": {
                        "type": "string",
                        "description": "JSON Array of Badge UUIDs"
                    },
                    "tax_rate_uuid": {
                        "format": "uuid",
                        "example": "123e4567-8958-4cef-be38-233124d5227b",
                        "type": "string"
                    },
                    "billing_attention": {
                        "type": "string"
                    },
                    "payment_terms": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "CompanyContact": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-d033-4916-abfc-23312effdd0b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "company_uuid": {
                        "format": "uuid",
                        "example": "123e4567-74eb-45aa-a47b-233120c6cf5b",
                        "type": "string",
                        "description": "The UUID of the company this contact belongs to"
                    },
                    "first": {
                        "type": "string"
                    },
                    "last": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "is_primary_contact": {
                        "type": "string"
                    }
                }
            },
            "DocumentTemplate": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-e33a-4005-b683-23312b0dd0db",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "template_type": {
                        "type": "string",
                        "description": "(Read only)"
                    },
                    "related_object": {
                        "type": "string",
                        "description": "(Read only)"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "EmailTemplate": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-e1e7-44fa-8c84-23312f360e8b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "subject": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "message": {
                        "type": "string",
                        "maxLength": 1000
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Feedback": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-e5eb-47b9-af4f-23312fe5a5db",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "timestamp": {
                        "type": "string"
                    },
                    "related_object": {
                        "type": "string"
                    },
                    "related_object_uuid": {
                        "format": "uuid",
                        "example": "123e4567-523e-40f8-8436-2331295eb36b",
                        "type": "string"
                    },
                    "rating": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    }
                }
            },
            "Form": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name of the form. Used to identify the form in the system and displayed to users in the form selector. Must be unique within an account. Maximum length is 255 characters.",
                        "type": "string"
                    },
                    "document_template_uuid": {
                        "description": "UUID of the document template associated with this form. The template defines the layout and appearance of the form when it's generated as a document. References a document template object in the system.",
                        "format": "uuid",
                        "example": "123e4567-65d8-4161-b9e4-233123aea19b",
                        "type": "string"
                    },
                    "can_be_used_independently": {
                        "description": "Boolean flag indicating whether this form can be used independently of a job. When set to true (1), the form can be filled out as a standalone form. When false (0), the form must be associated with a job to be completed.",
                        "type": "string"
                    },
                    "badge_mandatory_state": {
                        "description": "Controls when badge completion is mandatory for this form. Valid values are: 0 (not mandatory), 1 (mandatory on check-in), 2 (mandatory on check-out). This determines at which stage in the job lifecycle a staff member must complete this form.",
                        "type": "string"
                    },
                    "template_fields": {
                        "description": "JSON array of template fields that are used when generating form documents. Each field contains a name, fieldType, value, and sortOrder. Maximum of 10 fields allowed.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "fieldType": {
                                    "type": "string",
                                    "enum": [
                                        "Text"
                                    ]
                                },
                                "value": {
                                    "type": "string"
                                },
                                "sortOrder": {
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "name",
                                "fieldType",
                                "value",
                                "sortOrder"
                            ]
                        },
                        "minItems": 0,
                        "maxItems": 10
                    },
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-64d2-47ff-9545-233128b30c6b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1].  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "badge_name": {
                        "type": "string",
                        "maxLength": 12
                    }
                }
            },
            "FormField": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-2b0e-40b9-99be-2331267891ab",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "form_uuid": {
                        "format": "uuid",
                        "example": "123e4567-ff34-4994-84bf-233120da404b",
                        "type": "string",
                        "description": "The UUID of the form this field belongs to."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the form field."
                    },
                    "field_data_json": {
                        "type": "string",
                        "description": "JSON configuration for this question, including type, mandatory, choices and conditions."
                    },
                    "sort_order": {
                        "type": "integer",
                        "description": "The sort order of the form field."
                    }
                }
            },
            "FormResponse": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-6a7a-4a98-95ae-23312b62b7eb",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "form_uuid": {
                        "format": "uuid",
                        "example": "123e4567-beb4-41e6-8929-233129f77f0b",
                        "type": "string"
                    },
                    "staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-4791-42aa-a5a9-23312ccab97b",
                        "type": "string"
                    },
                    "regarding_object": {
                        "type": "string"
                    },
                    "regarding_object_uuid": {
                        "format": "uuid",
                        "example": "123e4567-363e-421e-8bc1-2331269e96db",
                        "type": "string"
                    },
                    "field_data": {
                        "type": "string",
                        "description": "JSON array of form answers captured at submission time."
                    },
                    "timestamp": {
                        "type": "string",
                        "example": "2025-09-01 12:00:00"
                    },
                    "form_by_staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-5966-4b7d-8b7e-23312a32078b",
                        "type": "string"
                    },
                    "document_attachment_uuid": {
                        "format": "uuid",
                        "example": "123e4567-ef72-4ac3-b31a-233127cdf44b",
                        "type": "string"
                    },
                    "asset_uuid": {
                        "format": "uuid",
                        "example": "123e4567-2e09-483a-83a1-2331238f123b",
                        "type": "string"
                    }
                }
            },
            "InboxMessage": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "edit_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "read_timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "last_reply_timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "snooze_until_timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "read_by_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "from_name": {
                        "type": "string"
                    },
                    "from_email": {
                        "type": "string"
                    },
                    "to_email": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "message_text": {
                        "type": "string"
                    },
                    "message_html": {
                        "type": "string"
                    },
                    "is_archived": {
                        "type": "boolean"
                    },
                    "archived_timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "archived_by_staff_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "regarding_company_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "converted_to_job_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "job_template_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "message_type": {
                        "type": "string",
                        "enum": [
                            "email",
                            "sms",
                            "online_booking",
                            "phone_call",
                            "reminder",
                            "form",
                            "network_request",
                            "supplier_invoice",
                            "asset",
                            "partner_lead",
                            "automation"
                        ]
                    }
                }
            },
            "Job": {
                "type": "object",
                "properties": {
                    "created_by_staff_uuid": {
                        "description": "UUID of the staff member who created this job. Records which staff member initially added the job to the system.",
                        "format": "uuid",
                        "example": "123e4567-5bfa-41ac-b653-23312c6bc37b",
                        "type": "string"
                    },
                    "date": {
                        "description": "The date the job was created or scheduled. Used for organizing jobs chronologically and for reference in reports.",
                        "example": "YYYY-MM-DD",
                        "type": "string"
                    },
                    "company_uuid": {
                        "description": "UUID reference to the client/company record associated with this job. Links the job to a client in the system, establishing the client-job relationship for billing and contact purposes.",
                        "format": "uuid",
                        "example": "123e4567-6f60-4fc4-a227-23312edc412b",
                        "type": "string"
                    },
                    "billing_address": {
                        "description": "The address where invoices and billing information should be sent. If not specified, defaults to the job address.",
                        "type": "string",
                        "maxLength": 500
                    },
                    "status": {
                        "description": "Current status of the job. Controls where the Job appears in the Dispatch Board..  Valid values are [Quote,Work Order,Unsuccessful,Completed]",
                        "enum": [
                            "Quote",
                            "Work Order",
                            "Unsuccessful",
                            "Completed"
                        ],
                        "type": "string",
                        "maxLength": 20
                    },
                    "lng": {
                        "description": "The longitude coordinate of the job location. (Read only)",
                        "type": "number",
                        "format": "float"
                    },
                    "lat": {
                        "description": "The latitude coordinate of the job location. (Read only)",
                        "type": "number",
                        "format": "float"
                    },
                    "payment_date": {
                        "description": "Not used. Refer to JobPayment endpoint.",
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "payment_actioned_by_uuid": {
                        "description": "Not used. Refer to JobPayment endpoint.",
                        "format": "uuid",
                        "example": "123e4567-fb76-4365-b94c-2331211c577b",
                        "type": "string"
                    },
                    "payment_method": {
                        "description": "Not used. Refer to JobPayment endpoint.",
                        "type": "string"
                    },
                    "payment_amount": {
                        "description": "Not used. Refer to JobPayment endpoint.",
                        "type": "string"
                    },
                    "category_uuid": {
                        "description": "UUID reference to the job category this job belongs to. Categories help organize jobs by type of work or department.",
                        "format": "uuid",
                        "example": "123e4567-eaa2-4f99-aa8b-23312ccd1d7b",
                        "type": "string"
                    },
                    "payment_note": {
                        "description": "Not used. Refer to JobPayment endpoint.",
                        "type": "string"
                    },
                    "geo_is_valid": {
                        "description": "Indicates whether the geocoding for the job address is valid. If this is false, the lat, lng, and other geo_ fields should not be used. (Read only).  Valid values are [0,1]",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    "purchase_order_number": {
                        "description": "Client purchase order reference number for this job. Used for cross-referencing with external accounting or order management systems.",
                        "type": "string",
                        "maxLength": 100
                    },
                    "invoice_sent": {
                        "description": "Indicates whether an invoice has been sent for this job..  Valid values are [0,1]",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    "invoice_sent_stamp": {
                        "description": "The date and time when the invoice was sent. (Read only)",
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "ready_to_invoice": {
                        "description": "DEPRECATED"
                    },
                    "ready_to_invoice_stamp": {
                        "description": "DEPRECATED"
                    },
                    "geo_country": {
                        "description": "The country field of the job address. (Read only)",
                        "type": "string"
                    },
                    "geo_postcode": {
                        "description": "The postcode/ZIP code field of the job address. (Read only)",
                        "type": "string"
                    },
                    "geo_state": {
                        "description": "The state/province field of the job address. (Read only)",
                        "type": "string"
                    },
                    "geo_city": {
                        "description": "The city/suburb field of the job address. (Read only)",
                        "type": "string"
                    },
                    "geo_street": {
                        "description": "The street name field of the job address. (Read only)",
                        "type": "string"
                    },
                    "geo_number": {
                        "description": "The street number field of the job address. (Read only)",
                        "type": "string"
                    },
                    "queue_uuid": {
                        "description": "The UUID of the queue this job belongs to.",
                        "format": "uuid",
                        "example": "123e4567-f2a9-4730-b852-23312e32f5cb",
                        "type": "string"
                    },
                    "queue_expiry_date": {
                        "description": "The date and time when the job expires from the queue.",
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "queue_assigned_staff_uuid": {
                        "description": "The UUID of the staff member assigned to this job in the queue.",
                        "format": "uuid",
                        "example": "123e4567-08fc-4344-a5c7-2331255607cb",
                        "type": "string"
                    },
                    "badges": {
                        "description": "JSON Array of Badge UUIDs",
                        "type": "string"
                    },
                    "quote_date": {
                        "description": "The date and time that the job status was changed to Quote.",
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "quote_sent": {
                        "description": "Boolean flag indicating whether a quote has been sent to the client for this job..  Valid values are [0,1]",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    "quote_sent_stamp": {
                        "description": "Timestamp when the quote was sent to the client. Format is YYYY-MM-DD HH:MM:SS. (Read only)",
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "work_order_date": {
                        "description": "The date and time that the job status was changed to Work Order.",
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "active_network_request_uuid": {
                        "description": "DEPRECATED"
                    },
                    "related_knowledge_articles": {
                        "description": "DEPRECATED"
                    },
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-a815-401e-9beb-233121259e7b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "job_address": {
                        "type": "string",
                        "description": "Physical address where the job is to be performed. This address is used for geocoding to place the job on the map.",
                        "maxLength": 500
                    },
                    "job_description": {
                        "type": "string"
                    },
                    "work_done_description": {
                        "type": "string",
                        "description": "Email Address"
                    },
                    "generated_job_id": {
                        "type": "string",
                        "description": "System-generated unique job identifier. This is read-only and automatically assigned when a job is created. (Read only)"
                    },
                    "total_invoice_amount": {
                        "type": "string",
                        "description": "The total amount to be invoiced for this job. (Read only)"
                    },
                    "payment_processed": {
                        "type": "integer",
                        "description": "Indicates whether the job has been exported to the connected Accounting Package..  Valid values are [0,1]",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    "payment_processed_stamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string",
                        "description": "The date and time the job has been exported to the connected Accounting Package. (Read only)"
                    },
                    "payment_received": {
                        "type": "integer",
                        "description": "Indicates whether full payment has been received for this job..  Valid values are [0,1]",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    "payment_received_stamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string",
                        "description": "The date and time when full payment was received. (Read only)"
                    },
                    "completion_date": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string",
                        "description": "The date and time that the job status was changed to Completed."
                    },
                    "completion_actioned_by_uuid": {
                        "format": "uuid",
                        "example": "123e4567-ca6a-4986-9492-2331206b8c7b",
                        "type": "string",
                        "description": "UUID of the staff member who marked this job as completed. References a staff record in the system. (Read only)"
                    },
                    "unsuccessful_date": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string",
                        "description": "The date and time that the job status was changed to Unsuccessful."
                    },
                    "job_is_scheduled_until_stamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string",
                        "description": "The end date/time of the last scheduled activity for this job. After this date, the job is considered Unscheduled. (Read only)"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "JobActivity": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-1cca-428e-8eed-23312a9d088b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1].  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "job_uuid": {
                        "format": "uuid",
                        "example": "123e4567-3e0b-491f-9b07-233128aba0bb",
                        "type": "string",
                        "description": "The UUID of the job this activity belongs to"
                    },
                    "staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-21d6-446f-9984-2331241b824b",
                        "type": "string",
                        "description": "The UUID of the staff member assigned to this activity"
                    },
                    "start_date": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string",
                        "description": "The scheduled start date and time of the activity"
                    },
                    "end_date": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string",
                        "description": "The scheduled end date and time of the activity"
                    },
                    "activity_was_scheduled": {
                        "type": "string"
                    },
                    "activity_was_recorded": {
                        "type": "string"
                    },
                    "activity_was_automated": {
                        "type": "string"
                    },
                    "has_been_opened": {
                        "type": "string"
                    },
                    "has_been_opened_timestamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "travel_time_in_seconds": {
                        "type": "integer",
                        "description": "The estimated travel time to reach this activity location in seconds"
                    },
                    "travel_distance_in_meters": {
                        "type": "integer",
                        "description": "The estimated travel distance to reach this activity location in meters"
                    },
                    "allocated_by_staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-d6ed-475e-aaa4-23312c5eab0b",
                        "type": "string"
                    },
                    "allocated_timestamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "material_uuid": {
                        "format": "uuid",
                        "example": "123e4567-2cd3-4855-9491-2331260de26b",
                        "type": "string",
                        "description": "The UUID of the material associated with this activity. Used to determine the cost of the activity."
                    },
                    "edit_by_staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-e8c0-4d70-915d-2331245c18fb",
                        "readOnly": true,
                        "description": "UUID of Staff Member who last modified record"
                    }
                }
            },
            "JobAllocation": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-fa33-4fdf-8474-233124eec24b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "job_uuid": {
                        "format": "uuid",
                        "example": "123e4567-c81a-4f00-a076-23312cebe30b",
                        "type": "string"
                    },
                    "queue_uuid": {
                        "format": "uuid",
                        "example": "123e4567-5c4e-417b-be83-23312767137b",
                        "type": "string"
                    },
                    "staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-676f-4dd6-a2d3-233123d386fb",
                        "type": "string"
                    },
                    "allocation_date": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "allocation_window_uuid": {
                        "format": "uuid",
                        "example": "123e4567-0f00-47be-926b-2331220d673b",
                        "type": "string"
                    },
                    "allocated_by_staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-c5f8-4504-8c52-23312dacfffb",
                        "type": "string"
                    },
                    "allocated_timestamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "expiry_timestamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "read_timestamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "completion_timestamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "estimated_duration": {
                        "type": "string"
                    },
                    "revised_duration": {
                        "type": "string"
                    },
                    "sort_priority": {
                        "type": "string"
                    },
                    "requires_acceptance": {
                        "type": "string"
                    },
                    "acceptance_status": {
                        "type": "string"
                    },
                    "acceptance_timestamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    }
                }
            },
            "JobChecklist": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-ea27-4de8-be5c-233127d9af7b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "job_uuid": {
                        "format": "uuid",
                        "example": "123e4567-87a0-4e5a-bbd5-23312cda81ab",
                        "type": "string",
                        "description": "UUID of the job this checklist item belongs to. This links the checklist item to a specific job in the system."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name or description of the checklist item. This is displayed to users in the mobile app and web interface.",
                        "maxLength": 512
                    },
                    "section_name": {
                        "type": "string",
                        "description": "The section or category name under which this checklist item is grouped. This helps organize related checklist items together.",
                        "maxLength": 256
                    },
                    "item_type": {
                        "type": "string",
                        "description": "The type of checklist item. Valid values are: 'Todo', 'Asset', 'Photo', 'Form', and 'Document'. Defaults to 'Todo' if not specified. This determines the functionality and appearance of the checklist item."
                    },
                    "sort_order": {
                        "type": "integer",
                        "description": "A numeric value determining the order in which checklist items appear in the user interface. Lower values appear first. Used to customize the display sequence of items."
                    },
                    "completed_timestamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string",
                        "description": "The date and time when the checklist item was marked as completed. Empty or '0000-00-00 00:00:00' indicates the item is not completed."
                    },
                    "completed_by_staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-9d5f-463f-9f49-23312e125a6b",
                        "type": "string",
                        "description": "UUID of the staff member who completed this checklist item. References a Staff object. Empty if the item is not completed."
                    },
                    "completed_during_checkin_uuid": {
                        "format": "uuid",
                        "example": "123e4567-4cfc-4bd6-8ea4-23312cd9438b",
                        "type": "string",
                        "description": "UUID of the job check-in during which this checklist item was completed. This links the checklist completion to a specific check-in event in the job history."
                    },
                    "reminder_type": {
                        "type": "string",
                        "description": "The type of reminder associated with this checklist item. Valid values are: '' (no reminder), 'CHECK_IN', 'NAVIGATE', 'CHECK_OUT', 'ABSOLUTE_DATETIME', or 'RELATIVE_DATETIME'. Determines when the system will remind users about this checklist item."
                    },
                    "reminder_data": {
                        "type": "string",
                        "description": "JSON data containing additional information for the reminder. Format depends on the reminder_type. For ABSOLUTE_DATETIME, includes 'absoluteDateTime'. For RELATIVE_DATETIME, includes 'relativeDateTime' with 'baseDate', 'unit', and 'quantity'. Exposed via API as 'reminder_data'.",
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "absoluteDateTime": {
                                        "type": "string",
                                        "pattern": "^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}:\\d{2}:\\d{2}$"
                                    }
                                },
                                "required": [
                                    "absoluteDateTime"
                                ],
                                "additionalProperties": false
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "relativeDateTime": {
                                        "type": "object",
                                        "properties": {
                                            "baseDate": {
                                                "type": "string",
                                                "enum": [
                                                    "JOB_CREATE_TIME",
                                                    "NEXT_BOOKING_TIME"
                                                ]
                                            },
                                            "unit": {
                                                "type": "string",
                                                "enum": [
                                                    "DAY",
                                                    "HOUR",
                                                    "MINUTE"
                                                ]
                                            },
                                            "quantity": {
                                                "type": "integer",
                                                "description": "Number of units to add/subtract from base date. Negative quantities mean the reminder occurs before the base date. Reminders scheduled into the past will not occur."
                                            }
                                        },
                                        "required": [
                                            "baseDate",
                                            "unit",
                                            "quantity"
                                        ]
                                    }
                                },
                                "required": [
                                    "relativeDateTime"
                                ],
                                "additionalProperties": false
                            }
                        ]
                    },
                    "regarding_object": {
                        "type": "string",
                        "description": "The type of object which this checklist item is related to. For example, for Form checklists, this will be 'Form'."
                    },
                    "regarding_object_uuid": {
                        "format": "uuid",
                        "example": "123e4567-f312-4d2b-8800-2331261d479b",
                        "type": "string",
                        "description": "The UUID of the object which this checklists item is related to. For example, for Form checklists, this is the UUID of the Form that must be completed to complete the checklist item."
                    },
                    "fulfilled_by_object_name": {
                        "type": "string",
                        "description": "The type of object which completes this checklist item. For example, for Form checklists, this will be 'FormResponse'."
                    },
                    "fulfilled_by_object_uuid": {
                        "format": "uuid",
                        "example": "123e4567-72e5-4089-8480-2331250b320b",
                        "type": "string",
                        "description": "The UUID of the object which completes this checklist item. For example, for Form checklists, this references the UUID of a FormResponse record."
                    },
                    "assigned_to_staff_uuids": {
                        "format": "uuid",
                        "example": "123e4567-1ad2-4354-a6c6-23312a9bbf9b",
                        "type": "array",
                        "description": "JSON array of staff UUIDs to whom this checklist item is assigned. Determines which staff members are responsible for completing this checklist item. Currently limited to a maximum of 1 staff member.",
                        "items": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                            "description": "Must be the UUID of a Staff record"
                        },
                        "maxItems": 1
                    },
                    "is_locked": {
                        "type": "integer",
                        "description": "If this checklist item is locked (read-only) and cannot be modified. This is set by the system when the checklist item is created from a Task or Network Request. (Read only).  Valid values are [0,1]",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    "assigned_timestamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string",
                        "description": "The timestamp when the checklist item was assigned to the staff member. (Read only)"
                    },
                    "assigned_by_staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-e53b-4e56-a697-23312192939b",
                        "type": "string",
                        "description": "The UUID of the staff member who assigned the checklist item to the staff member. (Read only)"
                    }
                }
            },
            "JobContact": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-a722-4f2c-ab59-23312c2388bb",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "job_uuid": {
                        "format": "uuid",
                        "example": "123e4567-f365-4080-9b25-233126f38e1b",
                        "type": "string"
                    },
                    "first": {
                        "type": "string"
                    },
                    "last": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "is_primary_contact": {
                        "type": "string"
                    }
                }
            },
            "JobMaterial": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-2c9e-45a3-b4e3-233121b3257b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "job_uuid": {
                        "format": "uuid",
                        "example": "123e4567-efaa-4094-896f-233125aac23b",
                        "type": "string"
                    },
                    "material_uuid": {
                        "format": "uuid",
                        "example": "123e4567-b83b-48d8-b270-23312ccbbf3b",
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 500
                    },
                    "quantity": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "price": {
                        "type": "string"
                    },
                    "displayed_amount": {
                        "type": "string"
                    },
                    "displayed_amount_is_tax_inclusive": {
                        "type": "string"
                    },
                    "tax_rate_uuid": {
                        "format": "uuid",
                        "example": "123e4567-7571-4585-b6a0-233124ba561b",
                        "type": "string"
                    },
                    "sort_order": {
                        "type": "string"
                    },
                    "cost": {
                        "type": "string",
                        "description": "The cost of the material for this job. This is the ex-tax amount."
                    },
                    "displayed_cost": {
                        "type": "string",
                        "description": "The cost of the material for this job, displayed as inc-tax or ex-tax depending on jobMaterial.displayed_amount_is_tax_inclusive."
                    },
                    "job_material_bundle_uuid": {
                        "format": "uuid",
                        "example": "123e4567-4891-4c39-9b9d-2331233d793b",
                        "type": "string",
                        "description": "UUID of a JobMaterialBundle which this JobMaterial belongs to. The default value is blank, which means that the JobMaterial is not part of a JobMaterialBundle."
                    }
                },
                "required": [
                    "quantity"
                ]
            },
            "JobMaterialBundle": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-ecc3-4c4d-821a-23312c9c726b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "item_number": {
                        "type": "string",
                        "description": "Unique identifier for the material bundle within the job. Displayed on the Quote/Invoice in the same way as for JobMaterials."
                    },
                    "name": {
                        "type": "string",
                        "description": "Descriptive name of the job material bundle. Displayed on the Quote/Invoice in the same way as for JobMaterials."
                    },
                    "quantity": {
                        "type": "string",
                        "description": "The quantity shown for the bundle line item on the invoice. Must be greater than zero. The quantity of each JobMaterial within the bundle is determined by dividing by this value."
                    },
                    "sort_order": {
                        "type": "integer",
                        "description": "Defines the display order of the JobMaterialBundle relative to other JobMaterials and JobMaterialBundles on the Job. Lower values are displayed first."
                    },
                    "material_bundle_uuid": {
                        "format": "uuid",
                        "example": "123e4567-4192-4c9d-80a1-2331263510ab",
                        "type": "string",
                        "description": "UUID of the MaterialBundle which this JobMaterialBundle was originally created from."
                    },
                    "job_uuid": {
                        "format": "uuid",
                        "example": "123e4567-f4d3-43f6-a346-233120642cbb",
                        "type": "string",
                        "description": "UUID of the job that this material bundle is associated with. Links the bundle to a specific job record."
                    }
                }
            },
            "JobPayment": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-eeb7-4a71-8bb6-233126138abb",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "job_uuid": {
                        "format": "uuid",
                        "example": "123e4567-a369-4f6a-8ed3-2331208c74db",
                        "type": "string"
                    },
                    "actioned_by_uuid": {
                        "format": "uuid",
                        "example": "123e4567-c3d1-4451-a71f-2331205ac13b",
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "example": "2025-09-01 12:00:00"
                    },
                    "amount": {
                        "type": "string"
                    },
                    "method": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "attachment_uuid": {
                        "format": "uuid",
                        "example": "123e4567-9189-46a6-a051-23312147620b",
                        "type": "string"
                    },
                    "is_deposit": {
                        "type": "integer",
                        "description": "Boolean flag indicating whether this payment represents a deposit against future work (true) rather than a payment for completed work (false). Read-only in the API. (Read only).  Valid values are [0,1]",
                        "enum": [
                            0,
                            1
                        ]
                    }
                }
            },
            "JobTemplate": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-0bbc-4f40-acdd-23312d81dbdb",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "KnowledgeArticle": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-f69e-45cc-95c0-23312c57f7fb",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "name": {
                        "type": "string",
                        "description": "Title of the knowledge article. This is a mandatory field with a maximum length of 100 characters. Used for identifying and searching for articles in the knowledge base."
                    },
                    "content": {
                        "type": "string",
                        "description": "The main content of the knowledge article. For 'richtext' and 'pdf' articles, this contains HTML formatted text. For 'video' articles, this may contain supplementary information. For 'call' articles, this contains call details. Supports extended text length."
                    },
                    "article_type": {
                        "type": "string",
                        "description": "Type of knowledge article. Valid values are 'video', 'richtext', 'pdf', or 'call'. This determines how the article content is presented and processed in the system."
                    },
                    "tags": {
                        "type": "string",
                        "description": "Comma-separated list of tags associated with this knowledge article. Maximum length is 2000 characters. Tags are used for categorization, searching, and automatic relationship generation with other objects like Services, Materials, and Companies."
                    },
                    "relationships": {
                        "type": "array",
                        "description": "JSON array of manually created relationships between this knowledge article and other objects. Contains objects with properties: object_name (e.g., 'job'), object_uuid (the related object's UUID), object_description (a description of the related object), and create_date. Used to associate articles with specific jobs or other system objects.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "object_name": {
                                    "type": "string",
                                    "enum": [
                                        "Job",
                                        "job"
                                    ]
                                },
                                "object_uuid": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "object_description": {
                                    "type": "string"
                                },
                                "create_date": {
                                    "type": "string",
                                    "pattern": "^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}:\\d{2}:\\d{2}$"
                                }
                            },
                            "required": [
                                "object_name",
                                "object_uuid"
                            ]
                        }
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Location": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Location's name",
                        "type": "string",
                        "maxLength": 50
                    },
                    "line1": {
                        "description": "First line of the location's address. Contains the street number and street name.",
                        "type": "string",
                        "maxLength": 100
                    },
                    "line2": {
                        "description": "Second line of the location's address. Used for additional address information such as building/suite numbers or street details.",
                        "type": "string",
                        "maxLength": 100
                    },
                    "line3": {
                        "description": "Third line of the location's address. Used for additional address details when line1 and line2 are not sufficient.",
                        "type": "string",
                        "maxLength": 100
                    },
                    "city": {
                        "description": "Email Address",
                        "type": "string",
                        "maxLength": 50
                    },
                    "country": {
                        "description": "Email Address",
                        "type": "string",
                        "maxLength": 100
                    },
                    "post_code": {
                        "description": "Email Address",
                        "type": "string",
                        "maxLength": 100
                    },
                    "phone_1": {
                        "description": "Primary contact phone number for the location. Can include formatting characters.",
                        "type": "string",
                        "maxLength": 100
                    },
                    "state": {
                        "description": "Address State",
                        "type": "string",
                        "maxLength": 400
                    },
                    "lng": {
                        "description": "Longitude coordinate of the location in decimal degrees format. Used for geolocation and distance calculations. Expected range is between -180 and 180 degrees.",
                        "type": "number",
                        "format": "float"
                    },
                    "lat": {
                        "description": "Latitude coordinate of the location in decimal degrees format. Used for geolocation and distance calculations. Expected range is between -90 and 90 degrees.",
                        "type": "number",
                        "format": "float"
                    },
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-9463-4de2-83a4-2331282da7eb",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Material": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name of the material, product or labour rate. The maximum length varies based on accounting package integration 30-100 characters for standard mode, up to 2000 characters for description billing mode. Required field that identifies the material in inventory lists, job forms, and invoices.",
                        "type": "string",
                        "maxLength": 70
                    },
                    "item_number": {
                        "description": "Unique identifier code for the material. max length. Must be unique within an account.",
                        "type": "string",
                        "maxLength": 30
                    },
                    "price": {
                        "description": "The selling price of the material. May include or exclude tax based on the price_includes_taxes field. Used as the default price when adding this material to jobs and generating invoices.",
                        "type": "string"
                    },
                    "cost": {
                        "description": "The purchase cost of the material. May include or exclude tax depending on the price_includes_taxes setting. Used for profit calculations and reporting. This field may be hidden from users without appropriate permissions.",
                        "type": "string"
                    },
                    "quantity_in_stock": {
                        "description": "The current inventory quantity of this material available in stock. Stored as a numeric value with decimal support. Updated automatically when materials are used in jobs or when inventory is manually adjusted. Only tracked if item_is_inventoried is enabled.",
                        "type": "number"
                    },
                    "price_includes_taxes": {
                        "description": "Boolean flag indicating whether the price and cost values include tax (1/true) or exclude tax (0/false). Controls tax calculations when determining final pricing. New materials inherit this setting from the account's default tax display preference..  Valid values are [0,1]",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    "barcode": {
                        "description": "The barcode identifier for the material.  Can store UPC, EAN, or other barcode formats. Used for inventory scanning and quick material lookup in the mobile app.",
                        "type": "string"
                    },
                    "item_is_inventoried": {
                        "description": "Boolean flag indicating whether inventory tracking is enabled for this material (1/true) or disabled (0/false). When enabled, the quantity_in_stock is tracked and updated automatically when the material is used in jobs. Only physical products typically have this enabled..  Valid values are [0,1]",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-3d8e-4d0c-a6e6-23312191c5bb",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "item_description": {
                        "type": "string"
                    },
                    "use_description_for_invoicing": {
                        "type": "string"
                    },
                    "tax_rate_uuid": {
                        "format": "uuid",
                        "example": "123e4567-78f3-41e6-9785-23312a9490cb",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "MaterialBundle": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-4a9c-4e35-be13-23312fedffcb",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "item_number": {
                        "type": "string",
                        "description": "Unique identifier for this bundle. Must be 30 characters or less and unique across both Materials and Bundles. Used when adding bundles to jobs.",
                        "maxLength": 30
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the bundle. Used for identification in the system and shows on documents when the bundle is added to a job."
                    },
                    "material_list": {
                        "type": "array",
                        "description": "A JSON array containing the materials that make up this bundle. Each item includes the material's UUID and the quantity to be added when this bundle is used. Limited to between 1 and 50 items, with all quantities being positive numbers.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uuid": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "Must be the UUID of a Material record"
                                },
                                "quantity": {
                                    "type": "number",
                                    "minimum": 0
                                }
                            },
                            "required": [
                                "uuid",
                                "quantity"
                            ]
                        },
                        "minItems": 1,
                        "maxItems": 50
                    }
                },
                "required": [
                    "item_number"
                ]
            },
            "Note": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-5858-4bf2-a4bc-23312cb4e25b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "related_object": {
                        "type": "string"
                    },
                    "related_object_uuid": {
                        "format": "uuid",
                        "example": "123e4567-37f4-4735-85b1-233126c1fcfb",
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "action_required": {
                        "type": "string"
                    },
                    "action_completed_by_staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-2abf-40ca-9382-233126ddb3ab",
                        "type": "string"
                    },
                    "edit_by_staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-3ce1-46cd-95f9-23312ba0f48b",
                        "readOnly": true,
                        "description": "UUID of Staff Member who last modified record"
                    },
                    "create_date": {
                        "example": "2025-09-01 12:00:00",
                        "description": "Timestamp at which record was last modified"
                    }
                }
            },
            "Queue": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-7f1a-42cb-82e2-23312e005a5b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the job queue. Used to identify the queue in the system. Examples include 'Workshop', 'Pending Quotes', etc."
                    },
                    "default_timeframe": {
                        "type": "integer",
                        "description": "Default number of days that jobs should remain in this queue before requiring attention. Common values are 7 days (1 week) or 14 days (2 weeks)."
                    },
                    "subscribed_staff": {
                        "type": "string",
                        "description": "Semicolon-delimited list of staff UUIDs who are subscribed to receive notifications for this queue."
                    },
                    "requires_assignment": {
                        "type": "integer",
                        "description": "Determines if jobs in this queue require assignment to staff members. If true, jobs must be explicitly assigned to staff. If false, jobs are visible to all staff..  Valid values are [0,1]",
                        "enum": [
                            0,
                            1
                        ]
                    }
                }
            },
            "SecurityRole": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name given to the security role",
                        "type": "string",
                        "maxLength": 50
                    },
                    "role_description": {
                        "description": "A detailed description of the security role's purpose and permissions. This field provides information about what access and capabilities are granted to users assigned this role.",
                        "type": "string"
                    },
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-c794-4063-b0cb-2331200a996b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "SmsTemplate": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-3837-456f-9e7d-23312543282b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "message": {
                        "type": "string",
                        "maxLength": 612
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Staff": {
                "type": "object",
                "properties": {
                    "first": {
                        "description": "Staff First Name",
                        "type": "string",
                        "maxLength": 30
                    },
                    "last": {
                        "description": "Staff Last Name",
                        "type": "string",
                        "maxLength": 30
                    },
                    "email": {
                        "description": "Staff Email Address. This is also your login name.",
                        "format": "email",
                        "type": "string"
                    },
                    "mobile": {
                        "description": "Mobile phone number of the staff member. Used for SMS communications and identification when calling.",
                        "type": "string"
                    },
                    "lng": {
                        "description": "Longitude coordinate of the staff member's current or last known location. Used for tracking staff locations and calculating routes and travel distances.",
                        "type": "number",
                        "format": "float"
                    },
                    "lat": {
                        "description": "Latitude coordinate of the staff member's current or last known location. Used for tracking staff locations and calculating routes and travel distances.",
                        "type": "number",
                        "format": "float"
                    },
                    "geo_timestamp": {
                        "description": "The date and time when the staff member's geographic location (lat/lng) was last updated. Format is YYYY-MM-DD HH:MM:SS. Used to determine how recent the location data is.",
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "job_title": {
                        "description": "The staff member's job title or role within the organization. Used for organizational purposes and displayed in various places throughout the system.",
                        "type": "string"
                    },
                    "navigating_to_job_uuid": {
                        "description": "UUID of the job the staff member is currently navigating to. Used to track which job a staff member is traveling toward.",
                        "format": "uuid",
                        "example": "123e4567-928d-43dd-9372-23312469918b",
                        "type": "string"
                    },
                    "navigating_timestamp": {
                        "description": "The date and time when the staff member started navigating to a job. Format is YYYY-MM-DD HH:MM:SS. Used to track when navigation began.",
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "navigating_expiry_timestamp": {
                        "description": "The date and time when navigation to a job is expected to complete or expire. Format is YYYY-MM-DD HH:MM:SS. Used to determine if navigation is still active.",
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "color": {
                        "description": "The color assigned to this staff member, represented as a hex color code. Used for visual identification in the schedule, dispatch board, and other interfaces.",
                        "type": "string"
                    },
                    "custom_icon_url": {
                        "description": "DEPRECATED"
                    },
                    "status_message": {
                        "description": "Short message summarising the staff's current status.",
                        "type": "string"
                    },
                    "status_message_timestamp": {
                        "description": "The date and time when the staff member's status message was last updated. Format is YYYY-MM-DD HH:MM:SS. Used to determine how recent the status message is.",
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "hide_from_schedule": {
                        "description": "Boolean flag controlling whether this staff member appears in the schedule view. When true (1), the staff member is hidden from the schedule. When false (0), they appear normally in scheduling interfaces..  Valid values are [0,1]",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    "security_role_uuid": {
                        "description": "UUID of the primary security role assigned to this staff member. Controls the staff member's permissions and access levels throughout the system.",
                        "format": "uuid",
                        "example": "123e4567-c9d8-4d23-90b2-23312039cceb",
                        "type": "string"
                    },
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-7adf-4633-82a4-233123f9ca0b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "can_receive_push_notification": {
                        "type": "string"
                    },
                    "labour_material_uuid": {
                        "format": "uuid",
                        "example": "123e4567-5b8b-48e8-b8dc-23312000c9fb",
                        "type": "string"
                    }
                },
                "required": [
                    "first",
                    "last",
                    "email"
                ]
            },
            "StaffMessage": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-1c8f-40c2-a5c0-233123836c5b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "from_staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-c43e-40f3-b36d-23312741015b",
                        "type": "string"
                    },
                    "to_staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-f929-4647-9417-23312a8692bb",
                        "type": "string"
                    },
                    "sent_timestamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "delivered_timestamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "read_timestamp": {
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "regarding_job_uuid": {
                        "format": "uuid",
                        "example": "123e4567-0219-4490-b8df-23312b5e0fbb",
                        "type": "string"
                    },
                    "attached_json": {
                        "type": "string"
                    }
                }
            },
            "Task": {
                "type": "object",
                "properties": {
                    "due_date": {
                        "description": "The date by which the task should be completed. Format is YYYY-MM-DD. For mobile app compatibility, may be returned with time component (HHMMSS) in some contexts.",
                        "example": "YYYY-MM-DD",
                        "type": "string"
                    },
                    "task_details": {
                        "description": "Detailed description of the task. Contains more comprehensive information about what needs to be done, how to complete the task, or any other relevant notes.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name or title of the task. This field is mandatory and used to identify the task in listings and the user interface.",
                        "type": "string"
                    },
                    "related_object": {
                        "description": "The name of the object class this task is related to. Must be a valid object class name in the system (e.g., 'job', 'client', etc.). The value is always stored as lowercase regardless of input case.",
                        "type": "string"
                    },
                    "related_object_uuid": {
                        "description": "UUID of the specific object instance this task is related to. Must be a valid UUID corresponding to an existing object of the type specified in related_object.",
                        "format": "uuid",
                        "example": "123e4567-f9eb-41c1-a5fd-23312ab7338b",
                        "type": "string"
                    },
                    "task_complete": {
                        "description": "Boolean flag indicating whether the task has been completed (1) or is still pending (0). When set to 1, the completed_timestamp and completed_by_staff_uuid fields are automatically populated.",
                        "type": "string"
                    },
                    "completed_timestamp": {
                        "description": "The date and time when the task was marked as complete. Format is YYYY-MM-DD HH:MM:SS. Automatically set when task_complete is changed to 1.",
                        "example": "2025-09-01 12:00:00",
                        "type": "string"
                    },
                    "completed_by_staff_uuid": {
                        "description": "UUID of the staff member who marked the task as complete. Automatically set to the current staff member's UUID when task_complete is changed to 1.",
                        "format": "uuid",
                        "example": "123e4567-e042-433e-af65-23312650743b",
                        "type": "string"
                    },
                    "assigned_to_staff_uuid": {
                        "description": "UUID of the staff member assigned to complete this task. Must be a valid staff UUID in the system.",
                        "format": "uuid",
                        "example": "123e4567-adeb-4ad5-822a-23312e91a59b",
                        "type": "string"
                    },
                    "lng": {
                        "description": "DEPRECATED"
                    },
                    "lat": {
                        "description": "DEPRECATED"
                    },
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-a073-4c0b-b873-233126e2173b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "created_by_staff_uuid": {
                        "format": "uuid",
                        "example": "123e4567-10fb-4bd7-89b3-23312b33259b",
                        "type": "string"
                    },
                    "create_date": {
                        "example": "2025-09-01 12:00:00",
                        "description": "Timestamp at which record was last modified"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "TaxRate": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-7bd8-4d67-be76-2331257b5d3b",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "amount": {
                        "type": "string"
                    },
                    "is_default_tax_rate": {
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "description": " Valid values are [0,1]"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Vendor": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "format": "uuid",
                        "description": "Unique identifier for this record",
                        "example": "123e4567-c1d3-4781-9a75-23312fa118db",
                        "type": "string"
                    },
                    "active": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "Record active/deleted flag.  Valid values are [0,1]"
                    },
                    "edit_date": {
                        "example": "2025-09-01 12:00:00",
                        "readOnly": true,
                        "description": "Timestamp at which record was last modified"
                    },
                    "name": {
                        "type": "string",
                        "description": "Company Name",
                        "maxLength": 200
                    },
                    "abn_number": {
                        "type": "string"
                    },
                    "business_number": {
                        "type": "string",
                        "description": "Company Business Number"
                    },
                    "website": {
                        "type": "string",
                        "description": "Company Website address",
                        "maxLength": 100
                    },
                    "email": {
                        "format": "email",
                        "type": "string"
                    },
                    "email_accounts": {
                        "type": "string"
                    },
                    "billing_address": {
                        "type": "string"
                    },
                    "accepted_payment_methods": {
                        "type": "string"
                    },
                    "default_region": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "opening_time_monday": {
                        "type": "string"
                    },
                    "closing_time_monday": {
                        "type": "string"
                    },
                    "opening_time_tuesday": {
                        "type": "string"
                    },
                    "closing_time_tuesday": {
                        "type": "string"
                    },
                    "opening_time_wednesday": {
                        "type": "string"
                    },
                    "closing_time_wednesday": {
                        "type": "string"
                    },
                    "opening_time_thursday": {
                        "type": "string"
                    },
                    "closing_time_thursday": {
                        "type": "string"
                    },
                    "opening_time_friday": {
                        "type": "string"
                    },
                    "closing_time_friday": {
                        "type": "string"
                    },
                    "opening_time_saturday": {
                        "type": "string"
                    },
                    "closing_time_saturday": {
                        "type": "string"
                    },
                    "opening_time_sunday": {
                        "type": "string"
                    },
                    "closing_time_sunday": {
                        "type": "string"
                    },
                    "timezone_name": {
                        "type": "string"
                    },
                    "invoice_terms": {
                        "type": "string"
                    },
                    "job_default_status": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "InboxMessageDetail": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InboxMessage"
                    },
                    {
                        "type": "object",
                        "properties": {}
                    }
                ]
            },
            "InboxMessagesResponse": {
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InboxMessage"
                        }
                    },
                    "pagination": {
                        "type": "object",
                        "properties": {
                            "offset": {
                                "type": "integer"
                            },
                            "limit": {
                                "type": "integer"
                            },
                            "total": {
                                "type": "integer"
                            },
                            "has_more": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "ArchiveRequest": {
                "type": "object",
                "properties": {
                    "archived": {
                        "type": "boolean",
                        "default": true
                    },
                    "reason": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SnoozeRequest": {
                "type": "object",
                "properties": {
                    "snooze_until": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "ISO 8601 datetime to snooze until, or null to unsnooze"
                    },
                    "note": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ConvertToJobRequest": {
                "type": "object",
                "properties": {
                    "template_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "note": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ConvertToJobResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "job": {
                        "type": "object",
                        "properties": {
                            "uuid": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "id": {
                                "type": "integer"
                            },
                            "job_number": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            }
                        }
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "AttachToJobRequest": {
                "type": "object",
                "required": [
                    "job_uuid"
                ],
                "properties": {
                    "job_uuid": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "AttachToJobResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "job": {
                        "type": "object",
                        "properties": {
                            "uuid": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "id": {
                                "type": "integer"
                            },
                            "location": {
                                "type": "string"
                            }
                        }
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "AddNoteRequest": {
                "type": "object",
                "required": [
                    "note"
                ],
                "properties": {
                    "note": {
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "SuccessResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "CreateInboxMessageRequest": {
                "type": "object",
                "required": [
                    "subject",
                    "message_text"
                ],
                "properties": {
                    "subject": {
                        "type": "string",
                        "description": "Subject of the message"
                    },
                    "message_text": {
                        "type": "string",
                        "description": "Plain text content of the message"
                    },
                    "from_name": {
                        "type": "string",
                        "description": "Name of the sender"
                    },
                    "from_email": {
                        "type": "string",
                        "format": "email",
                        "description": "Email address of the sender"
                    },
                    "json_data": {
                        "type": "object",
                        "description": "Additional data to be used when converting the message to a job",
                        "additionalProperties": true
                    },
                    "jobData": {
                        "type": "object",
                        "description": "Structured job data that will be merged into json_data when converting the message to a job",
                        "properties": {
                            "contact_first": {
                                "type": "string",
                                "description": "Job contact first name"
                            },
                            "contact_last": {
                                "type": "string",
                                "description": "Job contact last name"
                            },
                            "company_name": {
                                "type": "string",
                                "description": "Company/customer name"
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "description": "Primary email address"
                            },
                            "mobile": {
                                "type": "string",
                                "description": "Mobile phone number"
                            },
                            "phone_1": {
                                "type": "string",
                                "description": "Primary phone number"
                            },
                            "phone_2": {
                                "type": "string",
                                "description": "Secondary phone number"
                            },
                            "billing_contact_first": {
                                "type": "string",
                                "description": "Billing contact first name"
                            },
                            "billing_contact_last": {
                                "type": "string",
                                "description": "Billing contact last name"
                            },
                            "billing_email": {
                                "type": "string",
                                "format": "email",
                                "description": "Billing email address"
                            },
                            "billing_mobile": {
                                "type": "string",
                                "description": "Billing mobile number"
                            },
                            "billing_attention": {
                                "type": "string",
                                "description": "Billing attention line"
                            },
                            "job_description": {
                                "type": "string",
                                "description": "Description of the job/work to be done"
                            },
                            "job_address": {
                                "type": "string",
                                "description": "Service location address"
                            },
                            "billing_address": {
                                "type": "string",
                                "description": "Billing address"
                            },
                            "work_done_description": {
                                "type": "string",
                                "description": "Description of completed work"
                            }
                        },
                        "additionalProperties": false
                    },
                    "regarding_company_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID of the company this message is regarding"
                    }
                }
            },
            "JobTemplateOverrides": {
                "type": "object",
                "description": "Optional field overrides when creating a job from a template. Only the following fields can be overridden: job_description, company_uuid, company_name, and job_address. Note: You cannot specify both company_uuid and company_name.",
                "properties": {
                    "job_description": {
                        "type": "string",
                        "description": "Job description"
                    },
                    "company_uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID of the company/client. Cannot be used together with company_name."
                    },
                    "company_name": {
                        "type": "string",
                        "description": "Name of the company/client. If a company with this name exists, it will be used. Otherwise, a new company will be created. Cannot be used together with company_uuid."
                    },
                    "job_address": {
                        "type": "string",
                        "description": "Street address for the job"
                    }
                },
                "additionalProperties": false
            },
            "SearchResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchResult"
                        }
                    },
                    "query": {
                        "type": "string",
                        "description": "The search query that was used"
                    },
                    "count": {
                        "type": "integer",
                        "description": "Number of results returned"
                    }
                },
                "required": [
                    "results",
                    "query",
                    "count"
                ]
            },
            "ObjectSearchResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchResult"
                        }
                    },
                    "query": {
                        "type": "string",
                        "description": "The search query that was used"
                    },
                    "objectType": {
                        "type": "string",
                        "description": "The object type that was searched"
                    },
                    "count": {
                        "type": "integer",
                        "description": "Number of results returned"
                    }
                },
                "required": [
                    "results",
                    "query",
                    "objectType",
                    "count"
                ]
            },
            "EmbeddingSearchResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmbeddingSearchResult"
                        }
                    },
                    "query": {
                        "type": "string",
                        "description": "The search query that was used"
                    },
                    "count": {
                        "type": "integer",
                        "description": "Number of results returned"
                    },
                    "searchType": {
                        "type": "string",
                        "description": "Type of search performed",
                        "example": "embedding"
                    }
                },
                "required": [
                    "results",
                    "query",
                    "count",
                    "searchType"
                ]
            },
            "SearchResult": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID of the found object"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the object",
                        "example": "job"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of the object"
                    },
                    "highlights": {
                        "type": "object",
                        "description": "Highlighted text snippets that matched the query",
                        "additionalProperties": true
                    }
                },
                "required": [
                    "uuid",
                    "type",
                    "title"
                ]
            },
            "EmbeddingSearchResult": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID of the found job"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the object",
                        "example": "job"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of the job"
                    },
                    "description": {
                        "type": "string",
                        "description": "Job description"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current job status"
                    },
                    "similarity_score": {
                        "type": "number",
                        "format": "float",
                        "description": "Similarity score between 0.0 and 1.0",
                        "minimum": 0,
                        "maximum": 1
                    },
                    "matched_content": {
                        "type": "string",
                        "description": "The content that was matched in the embedding search"
                    }
                },
                "required": [
                    "uuid",
                    "type",
                    "title",
                    "similarity_score"
                ]
            }
        }
    },
    "x-speakeasy-retries": {
        "strategy": "backoff",
        "backoff": {
            "initialInterval": 500,
            "maxInterval": 60000,
            "maxElapsedTime": 3600000,
            "exponent": 1.5
        },
        "statusCodes": [
            "5XX",
            "429"
        ],
        "retryConnectionErrors": true
    },
    "tags": [
        {
            "name": "Allocation Windows",
            "description": "Operations related to Allocation Windows"
        },
        {
            "name": "Assets",
            "description": "Operations related to Assets"
        },
        {
            "name": "Asset Types",
            "description": "Operations related to Asset Types"
        },
        {
            "name": "Asset Type Fields",
            "description": "Operations related to Asset Type Fields"
        },
        {
            "name": "Attachments",
            "description": "Operations related to Attachments"
        },
        {
            "name": "Badges",
            "description": "Operations related to Badges"
        },
        {
            "name": "Categories",
            "description": "Operations related to Categories"
        },
        {
            "name": "Clients",
            "description": "Operations related to Clients"
        },
        {
            "name": "Company Contacts",
            "description": "Operations related to Company Contacts"
        },
        {
            "name": "Document Templates",
            "description": "Operations related to Document Templates"
        },
        {
            "name": "Email Templates",
            "description": "Operations related to Email Templates"
        },
        {
            "name": "Feedback",
            "description": "Operations related to Feedback"
        },
        {
            "name": "Forms",
            "description": "Operations related to Forms"
        },
        {
            "name": "Form Fields",
            "description": "Operations related to Form Fields"
        },
        {
            "name": "Form Responses",
            "description": "Operations related to Form Responses"
        },
        {
            "name": "",
            "description": "Operations related to "
        },
        {
            "name": "Jobs",
            "description": "Operations related to Jobs"
        },
        {
            "name": "Job Activities",
            "description": "Operations related to Job Activities"
        },
        {
            "name": "Job Allocations",
            "description": "Operations related to Job Allocations"
        },
        {
            "name": "Job Checklists",
            "description": "Operations related to Job Checklists"
        },
        {
            "name": "Job Contacts",
            "description": "Operations related to Job Contacts"
        },
        {
            "name": "Job Materials",
            "description": "Operations related to Job Materials"
        },
        {
            "name": "Job Material Bundles",
            "description": "Operations related to Job Material Bundles"
        },
        {
            "name": "Job Payments",
            "description": "Operations related to Job Payments"
        },
        {
            "name": "Job Templates",
            "description": "Operations related to Job Templates"
        },
        {
            "name": "Knowledge Articles",
            "description": "Operations related to Knowledge Articles"
        },
        {
            "name": "Locations",
            "description": "Operations related to Locations"
        },
        {
            "name": "Materials",
            "description": "Operations related to Materials"
        },
        {
            "name": "Bundles",
            "description": "Operations related to Bundles"
        },
        {
            "name": "Notes",
            "description": "Operations related to Notes"
        },
        {
            "name": "Job Queues",
            "description": "Operations related to Job Queues"
        },
        {
            "name": "Security Roles",
            "description": "Operations related to Security Roles"
        },
        {
            "name": "SMS Templates",
            "description": "Operations related to SMS Templates"
        },
        {
            "name": "Staff Members",
            "description": "Operations related to Staff Members"
        },
        {
            "name": "Staff Messages",
            "description": "Operations related to Staff Messages"
        },
        {
            "name": "Tasks",
            "description": "Operations related to Tasks"
        },
        {
            "name": "Tax Rates",
            "description": "Operations related to Tax Rates"
        },
        {
            "name": "Vendors",
            "description": "Vendor account information"
        }
    ]
}