"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.JobMaterialInput$ = exports.JobMaterialInput$outboundSchema = exports.JobMaterialInput$inboundSchema = exports.JobMaterial$ = exports.JobMaterial$outboundSchema = exports.JobMaterial$inboundSchema = exports.JobMaterialActive$ = exports.JobMaterialActive$outboundSchema = exports.JobMaterialActive$inboundSchema = exports.JobMaterialActive = void 0;
exports.jobMaterialToJSON = jobMaterialToJSON;
exports.jobMaterialFromJSON = jobMaterialFromJSON;
exports.jobMaterialInputToJSON = jobMaterialInputToJSON;
exports.jobMaterialInputFromJSON = jobMaterialInputFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * Record active/deleted flag.
 *
 * @remarks
 *
 * Valid values are [0,1]
 */
exports.JobMaterialActive = {
    Zero: 0,
    One: 1,
};
/** @internal */
exports.JobMaterialActive$inboundSchema = z.nativeEnum(exports.JobMaterialActive);
/** @internal */
exports.JobMaterialActive$outboundSchema = exports.JobMaterialActive$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var JobMaterialActive$;
(function (JobMaterialActive$) {
    /** @deprecated use `JobMaterialActive$inboundSchema` instead. */
    JobMaterialActive$.inboundSchema = exports.JobMaterialActive$inboundSchema;
    /** @deprecated use `JobMaterialActive$outboundSchema` instead. */
    JobMaterialActive$.outboundSchema = exports.JobMaterialActive$outboundSchema;
})(JobMaterialActive$ || (exports.JobMaterialActive$ = JobMaterialActive$ = {}));
/** @internal */
exports.JobMaterial$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.JobMaterialActive$inboundSchema.default(1),
    edit_date: z.string().optional(),
    job_uuid: z.string().optional(),
    material_uuid: z.string().optional(),
    name: z.string().optional(),
    quantity: z.string(),
    price: z.string().optional(),
    displayed_amount: z.string().optional(),
    displayed_amount_is_tax_inclusive: z.string().optional(),
    tax_rate_uuid: z.string().optional(),
    sort_order: z.string().optional(),
    cost: z.string().optional(),
    displayed_cost: z.string().optional(),
    job_material_bundle_uuid: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "edit_date": "editDate",
        "job_uuid": "jobUuid",
        "material_uuid": "materialUuid",
        "displayed_amount": "displayedAmount",
        "displayed_amount_is_tax_inclusive": "displayedAmountIsTaxInclusive",
        "tax_rate_uuid": "taxRateUuid",
        "sort_order": "sortOrder",
        "displayed_cost": "displayedCost",
        "job_material_bundle_uuid": "jobMaterialBundleUuid",
    });
});
/** @internal */
exports.JobMaterial$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.JobMaterialActive$outboundSchema.default(1),
    editDate: z.string().optional(),
    jobUuid: z.string().optional(),
    materialUuid: z.string().optional(),
    name: z.string().optional(),
    quantity: z.string(),
    price: z.string().optional(),
    displayedAmount: z.string().optional(),
    displayedAmountIsTaxInclusive: z.string().optional(),
    taxRateUuid: z.string().optional(),
    sortOrder: z.string().optional(),
    cost: z.string().optional(),
    displayedCost: z.string().optional(),
    jobMaterialBundleUuid: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        editDate: "edit_date",
        jobUuid: "job_uuid",
        materialUuid: "material_uuid",
        displayedAmount: "displayed_amount",
        displayedAmountIsTaxInclusive: "displayed_amount_is_tax_inclusive",
        taxRateUuid: "tax_rate_uuid",
        sortOrder: "sort_order",
        displayedCost: "displayed_cost",
        jobMaterialBundleUuid: "job_material_bundle_uuid",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var JobMaterial$;
(function (JobMaterial$) {
    /** @deprecated use `JobMaterial$inboundSchema` instead. */
    JobMaterial$.inboundSchema = exports.JobMaterial$inboundSchema;
    /** @deprecated use `JobMaterial$outboundSchema` instead. */
    JobMaterial$.outboundSchema = exports.JobMaterial$outboundSchema;
})(JobMaterial$ || (exports.JobMaterial$ = JobMaterial$ = {}));
function jobMaterialToJSON(jobMaterial) {
    return JSON.stringify(exports.JobMaterial$outboundSchema.parse(jobMaterial));
}
function jobMaterialFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.JobMaterial$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'JobMaterial' from JSON`);
}
/** @internal */
exports.JobMaterialInput$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.JobMaterialActive$inboundSchema.default(1),
    job_uuid: z.string().optional(),
    material_uuid: z.string().optional(),
    name: z.string().optional(),
    quantity: z.string(),
    price: z.string().optional(),
    displayed_amount: z.string().optional(),
    displayed_amount_is_tax_inclusive: z.string().optional(),
    tax_rate_uuid: z.string().optional(),
    sort_order: z.string().optional(),
    cost: z.string().optional(),
    displayed_cost: z.string().optional(),
    job_material_bundle_uuid: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "job_uuid": "jobUuid",
        "material_uuid": "materialUuid",
        "displayed_amount": "displayedAmount",
        "displayed_amount_is_tax_inclusive": "displayedAmountIsTaxInclusive",
        "tax_rate_uuid": "taxRateUuid",
        "sort_order": "sortOrder",
        "displayed_cost": "displayedCost",
        "job_material_bundle_uuid": "jobMaterialBundleUuid",
    });
});
/** @internal */
exports.JobMaterialInput$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.JobMaterialActive$outboundSchema.default(1),
    jobUuid: z.string().optional(),
    materialUuid: z.string().optional(),
    name: z.string().optional(),
    quantity: z.string(),
    price: z.string().optional(),
    displayedAmount: z.string().optional(),
    displayedAmountIsTaxInclusive: z.string().optional(),
    taxRateUuid: z.string().optional(),
    sortOrder: z.string().optional(),
    cost: z.string().optional(),
    displayedCost: z.string().optional(),
    jobMaterialBundleUuid: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        jobUuid: "job_uuid",
        materialUuid: "material_uuid",
        displayedAmount: "displayed_amount",
        displayedAmountIsTaxInclusive: "displayed_amount_is_tax_inclusive",
        taxRateUuid: "tax_rate_uuid",
        sortOrder: "sort_order",
        displayedCost: "displayed_cost",
        jobMaterialBundleUuid: "job_material_bundle_uuid",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var JobMaterialInput$;
(function (JobMaterialInput$) {
    /** @deprecated use `JobMaterialInput$inboundSchema` instead. */
    JobMaterialInput$.inboundSchema = exports.JobMaterialInput$inboundSchema;
    /** @deprecated use `JobMaterialInput$outboundSchema` instead. */
    JobMaterialInput$.outboundSchema = exports.JobMaterialInput$outboundSchema;
})(JobMaterialInput$ || (exports.JobMaterialInput$ = JobMaterialInput$ = {}));
function jobMaterialInputToJSON(jobMaterialInput) {
    return JSON.stringify(exports.JobMaterialInput$outboundSchema.parse(jobMaterialInput));
}
function jobMaterialInputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.JobMaterialInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'JobMaterialInput' from JSON`);
}
//# sourceMappingURL=jobmaterial.js.map