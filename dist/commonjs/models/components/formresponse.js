"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormResponseInput$ = exports.FormResponseInput$outboundSchema = exports.FormResponseInput$inboundSchema = exports.FormResponse$ = exports.FormResponse$outboundSchema = exports.FormResponse$inboundSchema = exports.FormResponseActive$ = exports.FormResponseActive$outboundSchema = exports.FormResponseActive$inboundSchema = exports.FormResponseActive = void 0;
exports.formResponseToJSON = formResponseToJSON;
exports.formResponseFromJSON = formResponseFromJSON;
exports.formResponseInputToJSON = formResponseInputToJSON;
exports.formResponseInputFromJSON = formResponseInputFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * Record active/deleted flag.
 *
 * @remarks
 *
 * Valid values are [0,1]
 */
exports.FormResponseActive = {
    Zero: 0,
    One: 1,
};
/** @internal */
exports.FormResponseActive$inboundSchema = z.nativeEnum(exports.FormResponseActive);
/** @internal */
exports.FormResponseActive$outboundSchema = exports.FormResponseActive$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FormResponseActive$;
(function (FormResponseActive$) {
    /** @deprecated use `FormResponseActive$inboundSchema` instead. */
    FormResponseActive$.inboundSchema = exports.FormResponseActive$inboundSchema;
    /** @deprecated use `FormResponseActive$outboundSchema` instead. */
    FormResponseActive$.outboundSchema = exports.FormResponseActive$outboundSchema;
})(FormResponseActive$ || (exports.FormResponseActive$ = FormResponseActive$ = {}));
/** @internal */
exports.FormResponse$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.FormResponseActive$inboundSchema.default(1),
    edit_date: z.string().optional(),
    form_uuid: z.string().optional(),
    staff_uuid: z.string().optional(),
    regarding_object: z.string().optional(),
    regarding_object_uuid: z.string().optional(),
    field_data: z.string().optional(),
    timestamp: z.string().optional(),
    form_by_staff_uuid: z.string().optional(),
    document_attachment_uuid: z.string().optional(),
    asset_uuid: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "edit_date": "editDate",
        "form_uuid": "formUuid",
        "staff_uuid": "staffUuid",
        "regarding_object": "regardingObject",
        "regarding_object_uuid": "regardingObjectUuid",
        "field_data": "fieldData",
        "form_by_staff_uuid": "formByStaffUuid",
        "document_attachment_uuid": "documentAttachmentUuid",
        "asset_uuid": "assetUuid",
    });
});
/** @internal */
exports.FormResponse$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.FormResponseActive$outboundSchema.default(1),
    editDate: z.string().optional(),
    formUuid: z.string().optional(),
    staffUuid: z.string().optional(),
    regardingObject: z.string().optional(),
    regardingObjectUuid: z.string().optional(),
    fieldData: z.string().optional(),
    timestamp: z.string().optional(),
    formByStaffUuid: z.string().optional(),
    documentAttachmentUuid: z.string().optional(),
    assetUuid: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        editDate: "edit_date",
        formUuid: "form_uuid",
        staffUuid: "staff_uuid",
        regardingObject: "regarding_object",
        regardingObjectUuid: "regarding_object_uuid",
        fieldData: "field_data",
        formByStaffUuid: "form_by_staff_uuid",
        documentAttachmentUuid: "document_attachment_uuid",
        assetUuid: "asset_uuid",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FormResponse$;
(function (FormResponse$) {
    /** @deprecated use `FormResponse$inboundSchema` instead. */
    FormResponse$.inboundSchema = exports.FormResponse$inboundSchema;
    /** @deprecated use `FormResponse$outboundSchema` instead. */
    FormResponse$.outboundSchema = exports.FormResponse$outboundSchema;
})(FormResponse$ || (exports.FormResponse$ = FormResponse$ = {}));
function formResponseToJSON(formResponse) {
    return JSON.stringify(exports.FormResponse$outboundSchema.parse(formResponse));
}
function formResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FormResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FormResponse' from JSON`);
}
/** @internal */
exports.FormResponseInput$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.FormResponseActive$inboundSchema.default(1),
    form_uuid: z.string().optional(),
    staff_uuid: z.string().optional(),
    regarding_object: z.string().optional(),
    regarding_object_uuid: z.string().optional(),
    field_data: z.string().optional(),
    timestamp: z.string().optional(),
    form_by_staff_uuid: z.string().optional(),
    document_attachment_uuid: z.string().optional(),
    asset_uuid: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "form_uuid": "formUuid",
        "staff_uuid": "staffUuid",
        "regarding_object": "regardingObject",
        "regarding_object_uuid": "regardingObjectUuid",
        "field_data": "fieldData",
        "form_by_staff_uuid": "formByStaffUuid",
        "document_attachment_uuid": "documentAttachmentUuid",
        "asset_uuid": "assetUuid",
    });
});
/** @internal */
exports.FormResponseInput$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.FormResponseActive$outboundSchema.default(1),
    formUuid: z.string().optional(),
    staffUuid: z.string().optional(),
    regardingObject: z.string().optional(),
    regardingObjectUuid: z.string().optional(),
    fieldData: z.string().optional(),
    timestamp: z.string().optional(),
    formByStaffUuid: z.string().optional(),
    documentAttachmentUuid: z.string().optional(),
    assetUuid: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        formUuid: "form_uuid",
        staffUuid: "staff_uuid",
        regardingObject: "regarding_object",
        regardingObjectUuid: "regarding_object_uuid",
        fieldData: "field_data",
        formByStaffUuid: "form_by_staff_uuid",
        documentAttachmentUuid: "document_attachment_uuid",
        assetUuid: "asset_uuid",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FormResponseInput$;
(function (FormResponseInput$) {
    /** @deprecated use `FormResponseInput$inboundSchema` instead. */
    FormResponseInput$.inboundSchema = exports.FormResponseInput$inboundSchema;
    /** @deprecated use `FormResponseInput$outboundSchema` instead. */
    FormResponseInput$.outboundSchema = exports.FormResponseInput$outboundSchema;
})(FormResponseInput$ || (exports.FormResponseInput$ = FormResponseInput$ = {}));
function formResponseInputToJSON(formResponseInput) {
    return JSON.stringify(exports.FormResponseInput$outboundSchema.parse(formResponseInput));
}
function formResponseInputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FormResponseInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FormResponseInput' from JSON`);
}
//# sourceMappingURL=formresponse.js.map