"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationInput$ = exports.LocationInput$outboundSchema = exports.LocationInput$inboundSchema = exports.Location$ = exports.Location$outboundSchema = exports.Location$inboundSchema = exports.LocationActive$ = exports.LocationActive$outboundSchema = exports.LocationActive$inboundSchema = exports.LocationActive = void 0;
exports.locationToJSON = locationToJSON;
exports.locationFromJSON = locationFromJSON;
exports.locationInputToJSON = locationInputToJSON;
exports.locationInputFromJSON = locationInputFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * Record active/deleted flag.
 *
 * @remarks
 *
 * Valid values are [0,1]
 */
exports.LocationActive = {
    Zero: 0,
    One: 1,
};
/** @internal */
exports.LocationActive$inboundSchema = z.nativeEnum(exports.LocationActive);
/** @internal */
exports.LocationActive$outboundSchema = exports.LocationActive$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var LocationActive$;
(function (LocationActive$) {
    /** @deprecated use `LocationActive$inboundSchema` instead. */
    LocationActive$.inboundSchema = exports.LocationActive$inboundSchema;
    /** @deprecated use `LocationActive$outboundSchema` instead. */
    LocationActive$.outboundSchema = exports.LocationActive$outboundSchema;
})(LocationActive$ || (exports.LocationActive$ = LocationActive$ = {}));
/** @internal */
exports.Location$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.LocationActive$inboundSchema.default(1),
    edit_date: z.string().optional(),
    name: z.string(),
    line1: z.string().optional(),
    line2: z.string().optional(),
    line3: z.string().optional(),
    city: z.string().optional(),
    country: z.string().optional(),
    post_code: z.string().optional(),
    phone_1: z.string().optional(),
    state: z.string().optional(),
    lng: z.number().optional(),
    lat: z.number().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "edit_date": "editDate",
        "post_code": "postCode",
        "phone_1": "phone1",
    });
});
/** @internal */
exports.Location$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.LocationActive$outboundSchema.default(1),
    editDate: z.string().optional(),
    name: z.string(),
    line1: z.string().optional(),
    line2: z.string().optional(),
    line3: z.string().optional(),
    city: z.string().optional(),
    country: z.string().optional(),
    postCode: z.string().optional(),
    phone1: z.string().optional(),
    state: z.string().optional(),
    lng: z.number().optional(),
    lat: z.number().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        editDate: "edit_date",
        postCode: "post_code",
        phone1: "phone_1",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Location$;
(function (Location$) {
    /** @deprecated use `Location$inboundSchema` instead. */
    Location$.inboundSchema = exports.Location$inboundSchema;
    /** @deprecated use `Location$outboundSchema` instead. */
    Location$.outboundSchema = exports.Location$outboundSchema;
})(Location$ || (exports.Location$ = Location$ = {}));
function locationToJSON(location) {
    return JSON.stringify(exports.Location$outboundSchema.parse(location));
}
function locationFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Location$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Location' from JSON`);
}
/** @internal */
exports.LocationInput$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.LocationActive$inboundSchema.default(1),
    name: z.string(),
    line1: z.string().optional(),
    line2: z.string().optional(),
    line3: z.string().optional(),
    city: z.string().optional(),
    country: z.string().optional(),
    post_code: z.string().optional(),
    phone_1: z.string().optional(),
    state: z.string().optional(),
    lng: z.number().optional(),
    lat: z.number().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "post_code": "postCode",
        "phone_1": "phone1",
    });
});
/** @internal */
exports.LocationInput$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.LocationActive$outboundSchema.default(1),
    name: z.string(),
    line1: z.string().optional(),
    line2: z.string().optional(),
    line3: z.string().optional(),
    city: z.string().optional(),
    country: z.string().optional(),
    postCode: z.string().optional(),
    phone1: z.string().optional(),
    state: z.string().optional(),
    lng: z.number().optional(),
    lat: z.number().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        postCode: "post_code",
        phone1: "phone_1",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var LocationInput$;
(function (LocationInput$) {
    /** @deprecated use `LocationInput$inboundSchema` instead. */
    LocationInput$.inboundSchema = exports.LocationInput$inboundSchema;
    /** @deprecated use `LocationInput$outboundSchema` instead. */
    LocationInput$.outboundSchema = exports.LocationInput$outboundSchema;
})(LocationInput$ || (exports.LocationInput$ = LocationInput$ = {}));
function locationInputToJSON(locationInput) {
    return JSON.stringify(exports.LocationInput$outboundSchema.parse(locationInput));
}
function locationInputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.LocationInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LocationInput' from JSON`);
}
//# sourceMappingURL=location.js.map