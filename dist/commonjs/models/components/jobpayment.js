"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.JobPaymentInput$ = exports.JobPaymentInput$outboundSchema = exports.JobPaymentInput$inboundSchema = exports.JobPayment$ = exports.JobPayment$outboundSchema = exports.JobPayment$inboundSchema = exports.IsDeposit$ = exports.IsDeposit$outboundSchema = exports.IsDeposit$inboundSchema = exports.JobPaymentActive$ = exports.JobPaymentActive$outboundSchema = exports.JobPaymentActive$inboundSchema = exports.IsDeposit = exports.JobPaymentActive = void 0;
exports.jobPaymentToJSON = jobPaymentToJSON;
exports.jobPaymentFromJSON = jobPaymentFromJSON;
exports.jobPaymentInputToJSON = jobPaymentInputToJSON;
exports.jobPaymentInputFromJSON = jobPaymentInputFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * Record active/deleted flag.
 *
 * @remarks
 *
 * Valid values are [0,1]
 */
exports.JobPaymentActive = {
    Zero: 0,
    One: 1,
};
/**
 * (Read-only).
 *
 * @remarks
 *
 * Valid values are [0,1]
 */
exports.IsDeposit = {
    Zero: 0,
    One: 1,
};
/** @internal */
exports.JobPaymentActive$inboundSchema = z.nativeEnum(exports.JobPaymentActive);
/** @internal */
exports.JobPaymentActive$outboundSchema = exports.JobPaymentActive$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var JobPaymentActive$;
(function (JobPaymentActive$) {
    /** @deprecated use `JobPaymentActive$inboundSchema` instead. */
    JobPaymentActive$.inboundSchema = exports.JobPaymentActive$inboundSchema;
    /** @deprecated use `JobPaymentActive$outboundSchema` instead. */
    JobPaymentActive$.outboundSchema = exports.JobPaymentActive$outboundSchema;
})(JobPaymentActive$ || (exports.JobPaymentActive$ = JobPaymentActive$ = {}));
/** @internal */
exports.IsDeposit$inboundSchema = z
    .nativeEnum(exports.IsDeposit);
/** @internal */
exports.IsDeposit$outboundSchema = exports.IsDeposit$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IsDeposit$;
(function (IsDeposit$) {
    /** @deprecated use `IsDeposit$inboundSchema` instead. */
    IsDeposit$.inboundSchema = exports.IsDeposit$inboundSchema;
    /** @deprecated use `IsDeposit$outboundSchema` instead. */
    IsDeposit$.outboundSchema = exports.IsDeposit$outboundSchema;
})(IsDeposit$ || (exports.IsDeposit$ = IsDeposit$ = {}));
/** @internal */
exports.JobPayment$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.JobPaymentActive$inboundSchema.default(1),
    edit_date: z.string().optional(),
    job_uuid: z.string().optional(),
    actioned_by_uuid: z.string().optional(),
    timestamp: z.string().optional(),
    amount: z.string().optional(),
    method: z.string().optional(),
    note: z.string().optional(),
    attachment_uuid: z.string().optional(),
    is_deposit: exports.IsDeposit$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "edit_date": "editDate",
        "job_uuid": "jobUuid",
        "actioned_by_uuid": "actionedByUuid",
        "attachment_uuid": "attachmentUuid",
        "is_deposit": "isDeposit",
    });
});
/** @internal */
exports.JobPayment$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.JobPaymentActive$outboundSchema.default(1),
    editDate: z.string().optional(),
    jobUuid: z.string().optional(),
    actionedByUuid: z.string().optional(),
    timestamp: z.string().optional(),
    amount: z.string().optional(),
    method: z.string().optional(),
    note: z.string().optional(),
    attachmentUuid: z.string().optional(),
    isDeposit: exports.IsDeposit$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        editDate: "edit_date",
        jobUuid: "job_uuid",
        actionedByUuid: "actioned_by_uuid",
        attachmentUuid: "attachment_uuid",
        isDeposit: "is_deposit",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var JobPayment$;
(function (JobPayment$) {
    /** @deprecated use `JobPayment$inboundSchema` instead. */
    JobPayment$.inboundSchema = exports.JobPayment$inboundSchema;
    /** @deprecated use `JobPayment$outboundSchema` instead. */
    JobPayment$.outboundSchema = exports.JobPayment$outboundSchema;
})(JobPayment$ || (exports.JobPayment$ = JobPayment$ = {}));
function jobPaymentToJSON(jobPayment) {
    return JSON.stringify(exports.JobPayment$outboundSchema.parse(jobPayment));
}
function jobPaymentFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.JobPayment$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'JobPayment' from JSON`);
}
/** @internal */
exports.JobPaymentInput$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.JobPaymentActive$inboundSchema.default(1),
    job_uuid: z.string().optional(),
    actioned_by_uuid: z.string().optional(),
    timestamp: z.string().optional(),
    amount: z.string().optional(),
    method: z.string().optional(),
    note: z.string().optional(),
    attachment_uuid: z.string().optional(),
    is_deposit: exports.IsDeposit$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "job_uuid": "jobUuid",
        "actioned_by_uuid": "actionedByUuid",
        "attachment_uuid": "attachmentUuid",
        "is_deposit": "isDeposit",
    });
});
/** @internal */
exports.JobPaymentInput$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.JobPaymentActive$outboundSchema.default(1),
    jobUuid: z.string().optional(),
    actionedByUuid: z.string().optional(),
    timestamp: z.string().optional(),
    amount: z.string().optional(),
    method: z.string().optional(),
    note: z.string().optional(),
    attachmentUuid: z.string().optional(),
    isDeposit: exports.IsDeposit$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        jobUuid: "job_uuid",
        actionedByUuid: "actioned_by_uuid",
        attachmentUuid: "attachment_uuid",
        isDeposit: "is_deposit",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var JobPaymentInput$;
(function (JobPaymentInput$) {
    /** @deprecated use `JobPaymentInput$inboundSchema` instead. */
    JobPaymentInput$.inboundSchema = exports.JobPaymentInput$inboundSchema;
    /** @deprecated use `JobPaymentInput$outboundSchema` instead. */
    JobPaymentInput$.outboundSchema = exports.JobPaymentInput$outboundSchema;
})(JobPaymentInput$ || (exports.JobPaymentInput$ = JobPaymentInput$ = {}));
function jobPaymentInputToJSON(jobPaymentInput) {
    return JSON.stringify(exports.JobPaymentInput$outboundSchema.parse(jobPaymentInput));
}
function jobPaymentInputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.JobPaymentInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'JobPaymentInput' from JSON`);
}
//# sourceMappingURL=jobpayment.js.map