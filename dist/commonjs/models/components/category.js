"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CategoryInput$ = exports.CategoryInput$outboundSchema = exports.CategoryInput$inboundSchema = exports.Category$ = exports.Category$outboundSchema = exports.Category$inboundSchema = exports.CategoryActive$ = exports.CategoryActive$outboundSchema = exports.CategoryActive$inboundSchema = exports.CategoryActive = void 0;
exports.categoryToJSON = categoryToJSON;
exports.categoryFromJSON = categoryFromJSON;
exports.categoryInputToJSON = categoryInputToJSON;
exports.categoryInputFromJSON = categoryInputFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * Record active/deleted flag.
 *
 * @remarks
 *
 * Valid values are [0,1]
 */
exports.CategoryActive = {
    Zero: 0,
    One: 1,
};
/** @internal */
exports.CategoryActive$inboundSchema = z.nativeEnum(exports.CategoryActive);
/** @internal */
exports.CategoryActive$outboundSchema = exports.CategoryActive$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CategoryActive$;
(function (CategoryActive$) {
    /** @deprecated use `CategoryActive$inboundSchema` instead. */
    CategoryActive$.inboundSchema = exports.CategoryActive$inboundSchema;
    /** @deprecated use `CategoryActive$outboundSchema` instead. */
    CategoryActive$.outboundSchema = exports.CategoryActive$outboundSchema;
})(CategoryActive$ || (exports.CategoryActive$ = CategoryActive$ = {}));
/** @internal */
exports.Category$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.CategoryActive$inboundSchema.default(1),
    edit_date: z.string().optional(),
    name: z.string(),
    colour: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "edit_date": "editDate",
    });
});
/** @internal */
exports.Category$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.CategoryActive$outboundSchema.default(1),
    editDate: z.string().optional(),
    name: z.string(),
    colour: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        editDate: "edit_date",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Category$;
(function (Category$) {
    /** @deprecated use `Category$inboundSchema` instead. */
    Category$.inboundSchema = exports.Category$inboundSchema;
    /** @deprecated use `Category$outboundSchema` instead. */
    Category$.outboundSchema = exports.Category$outboundSchema;
})(Category$ || (exports.Category$ = Category$ = {}));
function categoryToJSON(category) {
    return JSON.stringify(exports.Category$outboundSchema.parse(category));
}
function categoryFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Category$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Category' from JSON`);
}
/** @internal */
exports.CategoryInput$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.CategoryActive$inboundSchema.default(1),
    name: z.string(),
    colour: z.string().optional(),
});
/** @internal */
exports.CategoryInput$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.CategoryActive$outboundSchema.default(1),
    name: z.string(),
    colour: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CategoryInput$;
(function (CategoryInput$) {
    /** @deprecated use `CategoryInput$inboundSchema` instead. */
    CategoryInput$.inboundSchema = exports.CategoryInput$inboundSchema;
    /** @deprecated use `CategoryInput$outboundSchema` instead. */
    CategoryInput$.outboundSchema = exports.CategoryInput$outboundSchema;
})(CategoryInput$ || (exports.CategoryInput$ = CategoryInput$ = {}));
function categoryInputToJSON(categoryInput) {
    return JSON.stringify(exports.CategoryInput$outboundSchema.parse(categoryInput));
}
function categoryInputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CategoryInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CategoryInput' from JSON`);
}
//# sourceMappingURL=category.js.map