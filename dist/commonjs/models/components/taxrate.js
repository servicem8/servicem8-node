"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaxRateInput$ = exports.TaxRateInput$outboundSchema = exports.TaxRateInput$inboundSchema = exports.TaxRate$ = exports.TaxRate$outboundSchema = exports.TaxRate$inboundSchema = exports.IsDefaultTaxRate$ = exports.IsDefaultTaxRate$outboundSchema = exports.IsDefaultTaxRate$inboundSchema = exports.TaxRateActive$ = exports.TaxRateActive$outboundSchema = exports.TaxRateActive$inboundSchema = exports.IsDefaultTaxRate = exports.TaxRateActive = void 0;
exports.taxRateToJSON = taxRateToJSON;
exports.taxRateFromJSON = taxRateFromJSON;
exports.taxRateInputToJSON = taxRateInputToJSON;
exports.taxRateInputFromJSON = taxRateInputFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * Record active/deleted flag.
 *
 * @remarks
 *
 * Valid values are [0,1]
 */
exports.TaxRateActive = {
    Zero: 0,
    One: 1,
};
/**
 * @remarks
 *
 * Valid values are [0,1]
 */
exports.IsDefaultTaxRate = {
    Zero: 0,
    One: 1,
};
/** @internal */
exports.TaxRateActive$inboundSchema = z.nativeEnum(exports.TaxRateActive);
/** @internal */
exports.TaxRateActive$outboundSchema = exports.TaxRateActive$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TaxRateActive$;
(function (TaxRateActive$) {
    /** @deprecated use `TaxRateActive$inboundSchema` instead. */
    TaxRateActive$.inboundSchema = exports.TaxRateActive$inboundSchema;
    /** @deprecated use `TaxRateActive$outboundSchema` instead. */
    TaxRateActive$.outboundSchema = exports.TaxRateActive$outboundSchema;
})(TaxRateActive$ || (exports.TaxRateActive$ = TaxRateActive$ = {}));
/** @internal */
exports.IsDefaultTaxRate$inboundSchema = z.nativeEnum(exports.IsDefaultTaxRate);
/** @internal */
exports.IsDefaultTaxRate$outboundSchema = exports.IsDefaultTaxRate$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IsDefaultTaxRate$;
(function (IsDefaultTaxRate$) {
    /** @deprecated use `IsDefaultTaxRate$inboundSchema` instead. */
    IsDefaultTaxRate$.inboundSchema = exports.IsDefaultTaxRate$inboundSchema;
    /** @deprecated use `IsDefaultTaxRate$outboundSchema` instead. */
    IsDefaultTaxRate$.outboundSchema = exports.IsDefaultTaxRate$outboundSchema;
})(IsDefaultTaxRate$ || (exports.IsDefaultTaxRate$ = IsDefaultTaxRate$ = {}));
/** @internal */
exports.TaxRate$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.TaxRateActive$inboundSchema.default(1),
    edit_date: z.string().optional(),
    name: z.string(),
    amount: z.string().optional(),
    is_default_tax_rate: exports.IsDefaultTaxRate$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "edit_date": "editDate",
        "is_default_tax_rate": "isDefaultTaxRate",
    });
});
/** @internal */
exports.TaxRate$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.TaxRateActive$outboundSchema.default(1),
    editDate: z.string().optional(),
    name: z.string(),
    amount: z.string().optional(),
    isDefaultTaxRate: exports.IsDefaultTaxRate$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        editDate: "edit_date",
        isDefaultTaxRate: "is_default_tax_rate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TaxRate$;
(function (TaxRate$) {
    /** @deprecated use `TaxRate$inboundSchema` instead. */
    TaxRate$.inboundSchema = exports.TaxRate$inboundSchema;
    /** @deprecated use `TaxRate$outboundSchema` instead. */
    TaxRate$.outboundSchema = exports.TaxRate$outboundSchema;
})(TaxRate$ || (exports.TaxRate$ = TaxRate$ = {}));
function taxRateToJSON(taxRate) {
    return JSON.stringify(exports.TaxRate$outboundSchema.parse(taxRate));
}
function taxRateFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.TaxRate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaxRate' from JSON`);
}
/** @internal */
exports.TaxRateInput$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.TaxRateActive$inboundSchema.default(1),
    name: z.string(),
    amount: z.string().optional(),
    is_default_tax_rate: exports.IsDefaultTaxRate$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "is_default_tax_rate": "isDefaultTaxRate",
    });
});
/** @internal */
exports.TaxRateInput$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.TaxRateActive$outboundSchema.default(1),
    name: z.string(),
    amount: z.string().optional(),
    isDefaultTaxRate: exports.IsDefaultTaxRate$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        isDefaultTaxRate: "is_default_tax_rate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TaxRateInput$;
(function (TaxRateInput$) {
    /** @deprecated use `TaxRateInput$inboundSchema` instead. */
    TaxRateInput$.inboundSchema = exports.TaxRateInput$inboundSchema;
    /** @deprecated use `TaxRateInput$outboundSchema` instead. */
    TaxRateInput$.outboundSchema = exports.TaxRateInput$outboundSchema;
})(TaxRateInput$ || (exports.TaxRateInput$ = TaxRateInput$ = {}));
function taxRateInputToJSON(taxRateInput) {
    return JSON.stringify(exports.TaxRateInput$outboundSchema.parse(taxRateInput));
}
function taxRateInputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.TaxRateInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaxRateInput' from JSON`);
}
//# sourceMappingURL=taxrate.js.map