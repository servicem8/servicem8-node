"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AttachmentInput$ = exports.AttachmentInput$outboundSchema = exports.AttachmentInput$inboundSchema = exports.Attachment$ = exports.Attachment$outboundSchema = exports.Attachment$inboundSchema = exports.AttachmentActive$ = exports.AttachmentActive$outboundSchema = exports.AttachmentActive$inboundSchema = exports.AttachmentActive = void 0;
exports.attachmentToJSON = attachmentToJSON;
exports.attachmentFromJSON = attachmentFromJSON;
exports.attachmentInputToJSON = attachmentInputToJSON;
exports.attachmentInputFromJSON = attachmentInputFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * Record active/deleted flag.
 *
 * @remarks
 *
 * Valid values are [0,1]
 */
exports.AttachmentActive = {
    Zero: 0,
    One: 1,
};
/** @internal */
exports.AttachmentActive$inboundSchema = z.nativeEnum(exports.AttachmentActive);
/** @internal */
exports.AttachmentActive$outboundSchema = exports.AttachmentActive$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AttachmentActive$;
(function (AttachmentActive$) {
    /** @deprecated use `AttachmentActive$inboundSchema` instead. */
    AttachmentActive$.inboundSchema = exports.AttachmentActive$inboundSchema;
    /** @deprecated use `AttachmentActive$outboundSchema` instead. */
    AttachmentActive$.outboundSchema = exports.AttachmentActive$outboundSchema;
})(AttachmentActive$ || (exports.AttachmentActive$ = AttachmentActive$ = {}));
/** @internal */
exports.Attachment$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.AttachmentActive$inboundSchema.default(1),
    edit_date: z.string().optional(),
    related_object: z.string().optional(),
    related_object_uuid: z.string().optional(),
    attachment_name: z.string().optional(),
    file_type: z.string().optional(),
    created_by_staff_uuid: z.string().optional(),
    timestamp: z.string().optional(),
    attachment_source: z.string().optional(),
    tags: z.string().optional(),
    lng: z.number().optional(),
    lat: z.number().optional(),
    photo_width: z.string().optional(),
    photo_height: z.string().optional(),
    extracted_info: z.string().optional(),
    is_favourite: z.string().optional(),
    class_name: z.string().optional(),
    metadata: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "edit_date": "editDate",
        "related_object": "relatedObject",
        "related_object_uuid": "relatedObjectUuid",
        "attachment_name": "attachmentName",
        "file_type": "fileType",
        "created_by_staff_uuid": "createdByStaffUuid",
        "attachment_source": "attachmentSource",
        "photo_width": "photoWidth",
        "photo_height": "photoHeight",
        "extracted_info": "extractedInfo",
        "is_favourite": "isFavourite",
        "class_name": "className",
    });
});
/** @internal */
exports.Attachment$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.AttachmentActive$outboundSchema.default(1),
    editDate: z.string().optional(),
    relatedObject: z.string().optional(),
    relatedObjectUuid: z.string().optional(),
    attachmentName: z.string().optional(),
    fileType: z.string().optional(),
    createdByStaffUuid: z.string().optional(),
    timestamp: z.string().optional(),
    attachmentSource: z.string().optional(),
    tags: z.string().optional(),
    lng: z.number().optional(),
    lat: z.number().optional(),
    photoWidth: z.string().optional(),
    photoHeight: z.string().optional(),
    extractedInfo: z.string().optional(),
    isFavourite: z.string().optional(),
    className: z.string().optional(),
    metadata: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        editDate: "edit_date",
        relatedObject: "related_object",
        relatedObjectUuid: "related_object_uuid",
        attachmentName: "attachment_name",
        fileType: "file_type",
        createdByStaffUuid: "created_by_staff_uuid",
        attachmentSource: "attachment_source",
        photoWidth: "photo_width",
        photoHeight: "photo_height",
        extractedInfo: "extracted_info",
        isFavourite: "is_favourite",
        className: "class_name",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Attachment$;
(function (Attachment$) {
    /** @deprecated use `Attachment$inboundSchema` instead. */
    Attachment$.inboundSchema = exports.Attachment$inboundSchema;
    /** @deprecated use `Attachment$outboundSchema` instead. */
    Attachment$.outboundSchema = exports.Attachment$outboundSchema;
})(Attachment$ || (exports.Attachment$ = Attachment$ = {}));
function attachmentToJSON(attachment) {
    return JSON.stringify(exports.Attachment$outboundSchema.parse(attachment));
}
function attachmentFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Attachment$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Attachment' from JSON`);
}
/** @internal */
exports.AttachmentInput$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.AttachmentActive$inboundSchema.default(1),
    related_object: z.string().optional(),
    related_object_uuid: z.string().optional(),
    attachment_name: z.string().optional(),
    file_type: z.string().optional(),
    created_by_staff_uuid: z.string().optional(),
    timestamp: z.string().optional(),
    attachment_source: z.string().optional(),
    tags: z.string().optional(),
    lng: z.number().optional(),
    lat: z.number().optional(),
    photo_width: z.string().optional(),
    photo_height: z.string().optional(),
    extracted_info: z.string().optional(),
    is_favourite: z.string().optional(),
    class_name: z.string().optional(),
    metadata: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "related_object": "relatedObject",
        "related_object_uuid": "relatedObjectUuid",
        "attachment_name": "attachmentName",
        "file_type": "fileType",
        "created_by_staff_uuid": "createdByStaffUuid",
        "attachment_source": "attachmentSource",
        "photo_width": "photoWidth",
        "photo_height": "photoHeight",
        "extracted_info": "extractedInfo",
        "is_favourite": "isFavourite",
        "class_name": "className",
    });
});
/** @internal */
exports.AttachmentInput$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.AttachmentActive$outboundSchema.default(1),
    relatedObject: z.string().optional(),
    relatedObjectUuid: z.string().optional(),
    attachmentName: z.string().optional(),
    fileType: z.string().optional(),
    createdByStaffUuid: z.string().optional(),
    timestamp: z.string().optional(),
    attachmentSource: z.string().optional(),
    tags: z.string().optional(),
    lng: z.number().optional(),
    lat: z.number().optional(),
    photoWidth: z.string().optional(),
    photoHeight: z.string().optional(),
    extractedInfo: z.string().optional(),
    isFavourite: z.string().optional(),
    className: z.string().optional(),
    metadata: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        relatedObject: "related_object",
        relatedObjectUuid: "related_object_uuid",
        attachmentName: "attachment_name",
        fileType: "file_type",
        createdByStaffUuid: "created_by_staff_uuid",
        attachmentSource: "attachment_source",
        photoWidth: "photo_width",
        photoHeight: "photo_height",
        extractedInfo: "extracted_info",
        isFavourite: "is_favourite",
        className: "class_name",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AttachmentInput$;
(function (AttachmentInput$) {
    /** @deprecated use `AttachmentInput$inboundSchema` instead. */
    AttachmentInput$.inboundSchema = exports.AttachmentInput$inboundSchema;
    /** @deprecated use `AttachmentInput$outboundSchema` instead. */
    AttachmentInput$.outboundSchema = exports.AttachmentInput$outboundSchema;
})(AttachmentInput$ || (exports.AttachmentInput$ = AttachmentInput$ = {}));
function attachmentInputToJSON(attachmentInput) {
    return JSON.stringify(exports.AttachmentInput$outboundSchema.parse(attachmentInput));
}
function attachmentInputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.AttachmentInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AttachmentInput' from JSON`);
}
//# sourceMappingURL=attachment.js.map