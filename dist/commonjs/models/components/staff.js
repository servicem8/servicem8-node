"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.StaffInput$ = exports.StaffInput$outboundSchema = exports.StaffInput$inboundSchema = exports.Staff$ = exports.Staff$outboundSchema = exports.Staff$inboundSchema = exports.HideFromSchedule$ = exports.HideFromSchedule$outboundSchema = exports.HideFromSchedule$inboundSchema = exports.StaffActive$ = exports.StaffActive$outboundSchema = exports.StaffActive$inboundSchema = exports.HideFromSchedule = exports.StaffActive = void 0;
exports.staffToJSON = staffToJSON;
exports.staffFromJSON = staffFromJSON;
exports.staffInputToJSON = staffInputToJSON;
exports.staffInputFromJSON = staffInputFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * Record active/deleted flag.
 *
 * @remarks
 *
 * Valid values are [0,1]
 */
exports.StaffActive = {
    Zero: 0,
    One: 1,
};
/**
 * @remarks
 *
 * Valid values are [0,1]
 */
exports.HideFromSchedule = {
    Zero: 0,
    One: 1,
};
/** @internal */
exports.StaffActive$inboundSchema = z
    .nativeEnum(exports.StaffActive);
/** @internal */
exports.StaffActive$outboundSchema = exports.StaffActive$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var StaffActive$;
(function (StaffActive$) {
    /** @deprecated use `StaffActive$inboundSchema` instead. */
    StaffActive$.inboundSchema = exports.StaffActive$inboundSchema;
    /** @deprecated use `StaffActive$outboundSchema` instead. */
    StaffActive$.outboundSchema = exports.StaffActive$outboundSchema;
})(StaffActive$ || (exports.StaffActive$ = StaffActive$ = {}));
/** @internal */
exports.HideFromSchedule$inboundSchema = z.nativeEnum(exports.HideFromSchedule);
/** @internal */
exports.HideFromSchedule$outboundSchema = exports.HideFromSchedule$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var HideFromSchedule$;
(function (HideFromSchedule$) {
    /** @deprecated use `HideFromSchedule$inboundSchema` instead. */
    HideFromSchedule$.inboundSchema = exports.HideFromSchedule$inboundSchema;
    /** @deprecated use `HideFromSchedule$outboundSchema` instead. */
    HideFromSchedule$.outboundSchema = exports.HideFromSchedule$outboundSchema;
})(HideFromSchedule$ || (exports.HideFromSchedule$ = HideFromSchedule$ = {}));
/** @internal */
exports.Staff$inboundSchema = z
    .object({
    uuid: z.string().optional(),
    active: exports.StaffActive$inboundSchema.default(1),
    edit_date: z.string().optional(),
    first: z.string(),
    last: z.string(),
    email: z.string(),
    mobile: z.string().optional(),
    lng: z.number().optional(),
    lat: z.number().optional(),
    geo_timestamp: z.string().optional(),
    job_title: z.string().optional(),
    navigating_to_job_uuid: z.string().optional(),
    navigating_timestamp: z.string().optional(),
    navigating_expiry_timestamp: z.string().optional(),
    color: z.string().optional(),
    custom_icon_url: z.string().optional(),
    status_message: z.string().optional(),
    status_message_timestamp: z.string().optional(),
    can_receive_push_notification: z.string().optional(),
    hide_from_schedule: exports.HideFromSchedule$inboundSchema.optional(),
    security_role_uuid: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "edit_date": "editDate",
        "geo_timestamp": "geoTimestamp",
        "job_title": "jobTitle",
        "navigating_to_job_uuid": "navigatingToJobUuid",
        "navigating_timestamp": "navigatingTimestamp",
        "navigating_expiry_timestamp": "navigatingExpiryTimestamp",
        "custom_icon_url": "customIconUrl",
        "status_message": "statusMessage",
        "status_message_timestamp": "statusMessageTimestamp",
        "can_receive_push_notification": "canReceivePushNotification",
        "hide_from_schedule": "hideFromSchedule",
        "security_role_uuid": "securityRoleUuid",
    });
});
/** @internal */
exports.Staff$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.StaffActive$outboundSchema.default(1),
    editDate: z.string().optional(),
    first: z.string(),
    last: z.string(),
    email: z.string(),
    mobile: z.string().optional(),
    lng: z.number().optional(),
    lat: z.number().optional(),
    geoTimestamp: z.string().optional(),
    jobTitle: z.string().optional(),
    navigatingToJobUuid: z.string().optional(),
    navigatingTimestamp: z.string().optional(),
    navigatingExpiryTimestamp: z.string().optional(),
    color: z.string().optional(),
    customIconUrl: z.string().optional(),
    statusMessage: z.string().optional(),
    statusMessageTimestamp: z.string().optional(),
    canReceivePushNotification: z.string().optional(),
    hideFromSchedule: exports.HideFromSchedule$outboundSchema.optional(),
    securityRoleUuid: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        editDate: "edit_date",
        geoTimestamp: "geo_timestamp",
        jobTitle: "job_title",
        navigatingToJobUuid: "navigating_to_job_uuid",
        navigatingTimestamp: "navigating_timestamp",
        navigatingExpiryTimestamp: "navigating_expiry_timestamp",
        customIconUrl: "custom_icon_url",
        statusMessage: "status_message",
        statusMessageTimestamp: "status_message_timestamp",
        canReceivePushNotification: "can_receive_push_notification",
        hideFromSchedule: "hide_from_schedule",
        securityRoleUuid: "security_role_uuid",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Staff$;
(function (Staff$) {
    /** @deprecated use `Staff$inboundSchema` instead. */
    Staff$.inboundSchema = exports.Staff$inboundSchema;
    /** @deprecated use `Staff$outboundSchema` instead. */
    Staff$.outboundSchema = exports.Staff$outboundSchema;
})(Staff$ || (exports.Staff$ = Staff$ = {}));
function staffToJSON(staff) {
    return JSON.stringify(exports.Staff$outboundSchema.parse(staff));
}
function staffFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Staff$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Staff' from JSON`);
}
/** @internal */
exports.StaffInput$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.StaffActive$inboundSchema.default(1),
    first: z.string(),
    last: z.string(),
    email: z.string(),
    mobile: z.string().optional(),
    lng: z.number().optional(),
    lat: z.number().optional(),
    geo_timestamp: z.string().optional(),
    job_title: z.string().optional(),
    navigating_to_job_uuid: z.string().optional(),
    navigating_timestamp: z.string().optional(),
    navigating_expiry_timestamp: z.string().optional(),
    color: z.string().optional(),
    custom_icon_url: z.string().optional(),
    status_message: z.string().optional(),
    status_message_timestamp: z.string().optional(),
    can_receive_push_notification: z.string().optional(),
    hide_from_schedule: exports.HideFromSchedule$inboundSchema.optional(),
    security_role_uuid: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "geo_timestamp": "geoTimestamp",
        "job_title": "jobTitle",
        "navigating_to_job_uuid": "navigatingToJobUuid",
        "navigating_timestamp": "navigatingTimestamp",
        "navigating_expiry_timestamp": "navigatingExpiryTimestamp",
        "custom_icon_url": "customIconUrl",
        "status_message": "statusMessage",
        "status_message_timestamp": "statusMessageTimestamp",
        "can_receive_push_notification": "canReceivePushNotification",
        "hide_from_schedule": "hideFromSchedule",
        "security_role_uuid": "securityRoleUuid",
    });
});
/** @internal */
exports.StaffInput$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.StaffActive$outboundSchema.default(1),
    first: z.string(),
    last: z.string(),
    email: z.string(),
    mobile: z.string().optional(),
    lng: z.number().optional(),
    lat: z.number().optional(),
    geoTimestamp: z.string().optional(),
    jobTitle: z.string().optional(),
    navigatingToJobUuid: z.string().optional(),
    navigatingTimestamp: z.string().optional(),
    navigatingExpiryTimestamp: z.string().optional(),
    color: z.string().optional(),
    customIconUrl: z.string().optional(),
    statusMessage: z.string().optional(),
    statusMessageTimestamp: z.string().optional(),
    canReceivePushNotification: z.string().optional(),
    hideFromSchedule: exports.HideFromSchedule$outboundSchema.optional(),
    securityRoleUuid: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        geoTimestamp: "geo_timestamp",
        jobTitle: "job_title",
        navigatingToJobUuid: "navigating_to_job_uuid",
        navigatingTimestamp: "navigating_timestamp",
        navigatingExpiryTimestamp: "navigating_expiry_timestamp",
        customIconUrl: "custom_icon_url",
        statusMessage: "status_message",
        statusMessageTimestamp: "status_message_timestamp",
        canReceivePushNotification: "can_receive_push_notification",
        hideFromSchedule: "hide_from_schedule",
        securityRoleUuid: "security_role_uuid",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var StaffInput$;
(function (StaffInput$) {
    /** @deprecated use `StaffInput$inboundSchema` instead. */
    StaffInput$.inboundSchema = exports.StaffInput$inboundSchema;
    /** @deprecated use `StaffInput$outboundSchema` instead. */
    StaffInput$.outboundSchema = exports.StaffInput$outboundSchema;
})(StaffInput$ || (exports.StaffInput$ = StaffInput$ = {}));
function staffInputToJSON(staffInput) {
    return JSON.stringify(exports.StaffInput$outboundSchema.parse(staffInput));
}
function staffInputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.StaffInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'StaffInput' from JSON`);
}
//# sourceMappingURL=staff.js.map