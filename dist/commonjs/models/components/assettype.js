"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AssetTypeInput$ = exports.AssetTypeInput$outboundSchema = exports.AssetTypeInput$inboundSchema = exports.AssetType$ = exports.AssetType$outboundSchema = exports.AssetType$inboundSchema = exports.AssetTypeActive$ = exports.AssetTypeActive$outboundSchema = exports.AssetTypeActive$inboundSchema = exports.AssetTypeActive = void 0;
exports.assetTypeToJSON = assetTypeToJSON;
exports.assetTypeFromJSON = assetTypeFromJSON;
exports.assetTypeInputToJSON = assetTypeInputToJSON;
exports.assetTypeInputFromJSON = assetTypeInputFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * Record active/deleted flag.
 *
 * @remarks
 *
 * Valid values are [0,1]
 */
exports.AssetTypeActive = {
    Zero: 0,
    One: 1,
};
/** @internal */
exports.AssetTypeActive$inboundSchema = z.nativeEnum(exports.AssetTypeActive);
/** @internal */
exports.AssetTypeActive$outboundSchema = exports.AssetTypeActive$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AssetTypeActive$;
(function (AssetTypeActive$) {
    /** @deprecated use `AssetTypeActive$inboundSchema` instead. */
    AssetTypeActive$.inboundSchema = exports.AssetTypeActive$inboundSchema;
    /** @deprecated use `AssetTypeActive$outboundSchema` instead. */
    AssetTypeActive$.outboundSchema = exports.AssetTypeActive$outboundSchema;
})(AssetTypeActive$ || (exports.AssetTypeActive$ = AssetTypeActive$ = {}));
/** @internal */
exports.AssetType$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.AssetTypeActive$inboundSchema.default(1),
    edit_date: z.string().optional(),
    name: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "edit_date": "editDate",
    });
});
/** @internal */
exports.AssetType$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.AssetTypeActive$outboundSchema.default(1),
    editDate: z.string().optional(),
    name: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        editDate: "edit_date",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AssetType$;
(function (AssetType$) {
    /** @deprecated use `AssetType$inboundSchema` instead. */
    AssetType$.inboundSchema = exports.AssetType$inboundSchema;
    /** @deprecated use `AssetType$outboundSchema` instead. */
    AssetType$.outboundSchema = exports.AssetType$outboundSchema;
})(AssetType$ || (exports.AssetType$ = AssetType$ = {}));
function assetTypeToJSON(assetType) {
    return JSON.stringify(exports.AssetType$outboundSchema.parse(assetType));
}
function assetTypeFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.AssetType$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AssetType' from JSON`);
}
/** @internal */
exports.AssetTypeInput$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.AssetTypeActive$inboundSchema.default(1),
    name: z.string().optional(),
});
/** @internal */
exports.AssetTypeInput$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.AssetTypeActive$outboundSchema.default(1),
    name: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AssetTypeInput$;
(function (AssetTypeInput$) {
    /** @deprecated use `AssetTypeInput$inboundSchema` instead. */
    AssetTypeInput$.inboundSchema = exports.AssetTypeInput$inboundSchema;
    /** @deprecated use `AssetTypeInput$outboundSchema` instead. */
    AssetTypeInput$.outboundSchema = exports.AssetTypeInput$outboundSchema;
})(AssetTypeInput$ || (exports.AssetTypeInput$ = AssetTypeInput$ = {}));
function assetTypeInputToJSON(assetTypeInput) {
    return JSON.stringify(exports.AssetTypeInput$outboundSchema.parse(assetTypeInput));
}
function assetTypeInputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.AssetTypeInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AssetTypeInput' from JSON`);
}
//# sourceMappingURL=assettype.js.map