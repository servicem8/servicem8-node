"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormFieldInput$ = exports.FormFieldInput$outboundSchema = exports.FormFieldInput$inboundSchema = exports.FormField$ = exports.FormField$outboundSchema = exports.FormField$inboundSchema = exports.FormFieldActive$ = exports.FormFieldActive$outboundSchema = exports.FormFieldActive$inboundSchema = exports.FormFieldActive = void 0;
exports.formFieldToJSON = formFieldToJSON;
exports.formFieldFromJSON = formFieldFromJSON;
exports.formFieldInputToJSON = formFieldInputToJSON;
exports.formFieldInputFromJSON = formFieldInputFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * Record active/deleted flag.
 *
 * @remarks
 *
 * Valid values are [0,1]
 */
exports.FormFieldActive = {
    Zero: 0,
    One: 1,
};
/** @internal */
exports.FormFieldActive$inboundSchema = z.nativeEnum(exports.FormFieldActive);
/** @internal */
exports.FormFieldActive$outboundSchema = exports.FormFieldActive$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FormFieldActive$;
(function (FormFieldActive$) {
    /** @deprecated use `FormFieldActive$inboundSchema` instead. */
    FormFieldActive$.inboundSchema = exports.FormFieldActive$inboundSchema;
    /** @deprecated use `FormFieldActive$outboundSchema` instead. */
    FormFieldActive$.outboundSchema = exports.FormFieldActive$outboundSchema;
})(FormFieldActive$ || (exports.FormFieldActive$ = FormFieldActive$ = {}));
/** @internal */
exports.FormField$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.FormFieldActive$inboundSchema.default(1),
    edit_date: z.string().optional(),
    form_uuid: z.string().optional(),
    name: z.string().optional(),
    field_data_json: z.string().optional(),
    sort_order: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "edit_date": "editDate",
        "form_uuid": "formUuid",
        "field_data_json": "fieldDataJson",
        "sort_order": "sortOrder",
    });
});
/** @internal */
exports.FormField$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.FormFieldActive$outboundSchema.default(1),
    editDate: z.string().optional(),
    formUuid: z.string().optional(),
    name: z.string().optional(),
    fieldDataJson: z.string().optional(),
    sortOrder: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        editDate: "edit_date",
        formUuid: "form_uuid",
        fieldDataJson: "field_data_json",
        sortOrder: "sort_order",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FormField$;
(function (FormField$) {
    /** @deprecated use `FormField$inboundSchema` instead. */
    FormField$.inboundSchema = exports.FormField$inboundSchema;
    /** @deprecated use `FormField$outboundSchema` instead. */
    FormField$.outboundSchema = exports.FormField$outboundSchema;
})(FormField$ || (exports.FormField$ = FormField$ = {}));
function formFieldToJSON(formField) {
    return JSON.stringify(exports.FormField$outboundSchema.parse(formField));
}
function formFieldFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FormField$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FormField' from JSON`);
}
/** @internal */
exports.FormFieldInput$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.FormFieldActive$inboundSchema.default(1),
    form_uuid: z.string().optional(),
    name: z.string().optional(),
    field_data_json: z.string().optional(),
    sort_order: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "form_uuid": "formUuid",
        "field_data_json": "fieldDataJson",
        "sort_order": "sortOrder",
    });
});
/** @internal */
exports.FormFieldInput$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.FormFieldActive$outboundSchema.default(1),
    formUuid: z.string().optional(),
    name: z.string().optional(),
    fieldDataJson: z.string().optional(),
    sortOrder: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        formUuid: "form_uuid",
        fieldDataJson: "field_data_json",
        sortOrder: "sort_order",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FormFieldInput$;
(function (FormFieldInput$) {
    /** @deprecated use `FormFieldInput$inboundSchema` instead. */
    FormFieldInput$.inboundSchema = exports.FormFieldInput$inboundSchema;
    /** @deprecated use `FormFieldInput$outboundSchema` instead. */
    FormFieldInput$.outboundSchema = exports.FormFieldInput$outboundSchema;
})(FormFieldInput$ || (exports.FormFieldInput$ = FormFieldInput$ = {}));
function formFieldInputToJSON(formFieldInput) {
    return JSON.stringify(exports.FormFieldInput$outboundSchema.parse(formFieldInput));
}
function formFieldInputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FormFieldInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FormFieldInput' from JSON`);
}
//# sourceMappingURL=formfield.js.map