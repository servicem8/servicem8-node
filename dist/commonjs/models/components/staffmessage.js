"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.StaffMessageInput$ = exports.StaffMessageInput$outboundSchema = exports.StaffMessageInput$inboundSchema = exports.StaffMessage$ = exports.StaffMessage$outboundSchema = exports.StaffMessage$inboundSchema = exports.StaffMessageActive$ = exports.StaffMessageActive$outboundSchema = exports.StaffMessageActive$inboundSchema = exports.StaffMessageActive = void 0;
exports.staffMessageToJSON = staffMessageToJSON;
exports.staffMessageFromJSON = staffMessageFromJSON;
exports.staffMessageInputToJSON = staffMessageInputToJSON;
exports.staffMessageInputFromJSON = staffMessageInputFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/**
 * Record active/deleted flag.
 *
 * @remarks
 *
 * Valid values are [0,1]
 */
exports.StaffMessageActive = {
    Zero: 0,
    One: 1,
};
/** @internal */
exports.StaffMessageActive$inboundSchema = z.nativeEnum(exports.StaffMessageActive);
/** @internal */
exports.StaffMessageActive$outboundSchema = exports.StaffMessageActive$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var StaffMessageActive$;
(function (StaffMessageActive$) {
    /** @deprecated use `StaffMessageActive$inboundSchema` instead. */
    StaffMessageActive$.inboundSchema = exports.StaffMessageActive$inboundSchema;
    /** @deprecated use `StaffMessageActive$outboundSchema` instead. */
    StaffMessageActive$.outboundSchema = exports.StaffMessageActive$outboundSchema;
})(StaffMessageActive$ || (exports.StaffMessageActive$ = StaffMessageActive$ = {}));
/** @internal */
exports.StaffMessage$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.StaffMessageActive$inboundSchema.default(1),
    edit_date: z.string().optional(),
    from_staff_uuid: z.string().optional(),
    to_staff_uuid: z.string().optional(),
    sent_timestamp: z.string().optional(),
    delivered_timestamp: z.string().optional(),
    read_timestamp: z.string().optional(),
    message: z.string().optional(),
    regarding_job_uuid: z.string().optional(),
    attached_json: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "edit_date": "editDate",
        "from_staff_uuid": "fromStaffUuid",
        "to_staff_uuid": "toStaffUuid",
        "sent_timestamp": "sentTimestamp",
        "delivered_timestamp": "deliveredTimestamp",
        "read_timestamp": "readTimestamp",
        "regarding_job_uuid": "regardingJobUuid",
        "attached_json": "attachedJson",
    });
});
/** @internal */
exports.StaffMessage$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.StaffMessageActive$outboundSchema.default(1),
    editDate: z.string().optional(),
    fromStaffUuid: z.string().optional(),
    toStaffUuid: z.string().optional(),
    sentTimestamp: z.string().optional(),
    deliveredTimestamp: z.string().optional(),
    readTimestamp: z.string().optional(),
    message: z.string().optional(),
    regardingJobUuid: z.string().optional(),
    attachedJson: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        editDate: "edit_date",
        fromStaffUuid: "from_staff_uuid",
        toStaffUuid: "to_staff_uuid",
        sentTimestamp: "sent_timestamp",
        deliveredTimestamp: "delivered_timestamp",
        readTimestamp: "read_timestamp",
        regardingJobUuid: "regarding_job_uuid",
        attachedJson: "attached_json",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var StaffMessage$;
(function (StaffMessage$) {
    /** @deprecated use `StaffMessage$inboundSchema` instead. */
    StaffMessage$.inboundSchema = exports.StaffMessage$inboundSchema;
    /** @deprecated use `StaffMessage$outboundSchema` instead. */
    StaffMessage$.outboundSchema = exports.StaffMessage$outboundSchema;
})(StaffMessage$ || (exports.StaffMessage$ = StaffMessage$ = {}));
function staffMessageToJSON(staffMessage) {
    return JSON.stringify(exports.StaffMessage$outboundSchema.parse(staffMessage));
}
function staffMessageFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.StaffMessage$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'StaffMessage' from JSON`);
}
/** @internal */
exports.StaffMessageInput$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.StaffMessageActive$inboundSchema.default(1),
    from_staff_uuid: z.string().optional(),
    to_staff_uuid: z.string().optional(),
    sent_timestamp: z.string().optional(),
    delivered_timestamp: z.string().optional(),
    read_timestamp: z.string().optional(),
    message: z.string().optional(),
    regarding_job_uuid: z.string().optional(),
    attached_json: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "from_staff_uuid": "fromStaffUuid",
        "to_staff_uuid": "toStaffUuid",
        "sent_timestamp": "sentTimestamp",
        "delivered_timestamp": "deliveredTimestamp",
        "read_timestamp": "readTimestamp",
        "regarding_job_uuid": "regardingJobUuid",
        "attached_json": "attachedJson",
    });
});
/** @internal */
exports.StaffMessageInput$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: exports.StaffMessageActive$outboundSchema.default(1),
    fromStaffUuid: z.string().optional(),
    toStaffUuid: z.string().optional(),
    sentTimestamp: z.string().optional(),
    deliveredTimestamp: z.string().optional(),
    readTimestamp: z.string().optional(),
    message: z.string().optional(),
    regardingJobUuid: z.string().optional(),
    attachedJson: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        fromStaffUuid: "from_staff_uuid",
        toStaffUuid: "to_staff_uuid",
        sentTimestamp: "sent_timestamp",
        deliveredTimestamp: "delivered_timestamp",
        readTimestamp: "read_timestamp",
        regardingJobUuid: "regarding_job_uuid",
        attachedJson: "attached_json",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var StaffMessageInput$;
(function (StaffMessageInput$) {
    /** @deprecated use `StaffMessageInput$inboundSchema` instead. */
    StaffMessageInput$.inboundSchema = exports.StaffMessageInput$inboundSchema;
    /** @deprecated use `StaffMessageInput$outboundSchema` instead. */
    StaffMessageInput$.outboundSchema = exports.StaffMessageInput$outboundSchema;
})(StaffMessageInput$ || (exports.StaffMessageInput$ = StaffMessageInput$ = {}));
function staffMessageInputToJSON(staffMessageInput) {
    return JSON.stringify(exports.StaffMessageInput$outboundSchema.parse(staffMessageInput));
}
function staffMessageInputFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.StaffMessageInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'StaffMessageInput' from JSON`);
}
//# sourceMappingURL=staffmessage.js.map