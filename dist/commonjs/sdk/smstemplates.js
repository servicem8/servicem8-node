"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SMSTemplates = void 0;
const smsTemplatesCreateSMSTemplates_js_1 = require("../funcs/smsTemplatesCreateSMSTemplates.js");
const smsTemplatesDeleteSMSTemplates_js_1 = require("../funcs/smsTemplatesDeleteSMSTemplates.js");
const smsTemplatesGetSMSTemplates_js_1 = require("../funcs/smsTemplatesGetSMSTemplates.js");
const smsTemplatesListSMSTemplates_js_1 = require("../funcs/smsTemplatesListSMSTemplates.js");
const smsTemplatesUpdateSMSTemplates_js_1 = require("../funcs/smsTemplatesUpdateSMSTemplates.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
class SMSTemplates extends sdks_js_1.ClientSDK {
    /**
     * List all SMS Templates
     *
     * @remarks
     *
     * #### Filtering
     * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
     */
    async listSMSTemplates(options) {
        return (0, fp_js_1.unwrapAsync)((0, smsTemplatesListSMSTemplates_js_1.smsTemplatesListSMSTemplates)(this, options));
    }
    /**
     * Create a new SMS Template
     *
     * @remarks
     *
     * #### Record UUID
     * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.
     */
    async createSMSTemplates(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, smsTemplatesCreateSMSTemplates_js_1.smsTemplatesCreateSMSTemplates)(this, request, options));
    }
    /**
     * Retrieve a SMS Template
     */
    async getSMSTemplates(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, smsTemplatesGetSMSTemplates_js_1.smsTemplatesGetSMSTemplates)(this, request, options));
    }
    /**
     * Update a SMS Template
     */
    async updateSMSTemplates(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, smsTemplatesUpdateSMSTemplates_js_1.smsTemplatesUpdateSMSTemplates)(this, request, options));
    }
    /**
     * Delete a SMS Template
     *
     * @remarks
     *
     * In ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.
     */
    async deleteSMSTemplates(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, smsTemplatesDeleteSMSTemplates_js_1.smsTemplatesDeleteSMSTemplates)(this, request, options));
    }
}
exports.SMSTemplates = SMSTemplates;
//# sourceMappingURL=smstemplates.js.map