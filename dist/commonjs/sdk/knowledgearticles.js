"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.KnowledgeArticles = void 0;
const knowledgeArticlesCreateKnowledgeArticles_js_1 = require("../funcs/knowledgeArticlesCreateKnowledgeArticles.js");
const knowledgeArticlesDeleteKnowledgeArticles_js_1 = require("../funcs/knowledgeArticlesDeleteKnowledgeArticles.js");
const knowledgeArticlesGetKnowledgeArticles_js_1 = require("../funcs/knowledgeArticlesGetKnowledgeArticles.js");
const knowledgeArticlesListKnowledgeArticles_js_1 = require("../funcs/knowledgeArticlesListKnowledgeArticles.js");
const knowledgeArticlesUpdateKnowledgeArticles_js_1 = require("../funcs/knowledgeArticlesUpdateKnowledgeArticles.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
class KnowledgeArticles extends sdks_js_1.ClientSDK {
    /**
     * List all Knowledge Articles
     *
     * @remarks
     *
     * #### Filtering
     * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **read_knowledge**.
     */
    async listKnowledgeArticles(options) {
        return (0, fp_js_1.unwrapAsync)((0, knowledgeArticlesListKnowledgeArticles_js_1.knowledgeArticlesListKnowledgeArticles)(this, options));
    }
    /**
     * Create a new Knowledge Article
     *
     * @remarks
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **manage_knowledge**.
     *
     * #### Record UUID
     * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.
     */
    async createKnowledgeArticles(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, knowledgeArticlesCreateKnowledgeArticles_js_1.knowledgeArticlesCreateKnowledgeArticles)(this, request, options));
    }
    /**
     * Retrieve a Knowledge Article
     *
     * @remarks
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **read_knowledge**.
     */
    async getKnowledgeArticles(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, knowledgeArticlesGetKnowledgeArticles_js_1.knowledgeArticlesGetKnowledgeArticles)(this, request, options));
    }
    /**
     * Update a Knowledge Article
     */
    async updateKnowledgeArticles(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, knowledgeArticlesUpdateKnowledgeArticles_js_1.knowledgeArticlesUpdateKnowledgeArticles)(this, request, options));
    }
    /**
     * Delete a Knowledge Article
     *
     * @remarks
     *
     * In ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.
     */
    async deleteKnowledgeArticles(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, knowledgeArticlesDeleteKnowledgeArticles_js_1.knowledgeArticlesDeleteKnowledgeArticles)(this, request, options));
    }
}
exports.KnowledgeArticles = KnowledgeArticles;
//# sourceMappingURL=knowledgearticles.js.map