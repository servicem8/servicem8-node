/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { smsTemplatesCreateSMSTemplates } from "../funcs/smsTemplatesCreateSMSTemplates.js";
import { smsTemplatesDeleteSMSTemplates } from "../funcs/smsTemplatesDeleteSMSTemplates.js";
import { smsTemplatesGetSMSTemplates } from "../funcs/smsTemplatesGetSMSTemplates.js";
import { smsTemplatesListSMSTemplates } from "../funcs/smsTemplatesListSMSTemplates.js";
import { smsTemplatesUpdateSMSTemplates } from "../funcs/smsTemplatesUpdateSMSTemplates.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class SMSTemplates extends ClientSDK {
    /**
     * List all SMS Templates
     *
     * @remarks
     *
     * #### Filtering
     * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
     */
    async listSMSTemplates(options) {
        return unwrapAsync(smsTemplatesListSMSTemplates(this, options));
    }
    /**
     * Create a new SMS Template
     *
     * @remarks
     *
     * #### Record UUID
     * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.
     */
    async createSMSTemplates(request, options) {
        return unwrapAsync(smsTemplatesCreateSMSTemplates(this, request, options));
    }
    /**
     * Retrieve a SMS Template
     */
    async getSMSTemplates(request, options) {
        return unwrapAsync(smsTemplatesGetSMSTemplates(this, request, options));
    }
    /**
     * Update a SMS Template
     */
    async updateSMSTemplates(request, options) {
        return unwrapAsync(smsTemplatesUpdateSMSTemplates(this, request, options));
    }
    /**
     * Delete a SMS Template
     *
     * @remarks
     *
     * In ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.
     */
    async deleteSMSTemplates(request, options) {
        return unwrapAsync(smsTemplatesDeleteSMSTemplates(this, request, options));
    }
}
//# sourceMappingURL=smstemplates.js.map