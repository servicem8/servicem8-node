/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { emailTemplatesCreateEmailTemplates } from "../funcs/emailTemplatesCreateEmailTemplates.js";
import { emailTemplatesDeleteEmailTemplates } from "../funcs/emailTemplatesDeleteEmailTemplates.js";
import { emailTemplatesGetEmailTemplates } from "../funcs/emailTemplatesGetEmailTemplates.js";
import { emailTemplatesListEmailTemplates } from "../funcs/emailTemplatesListEmailTemplates.js";
import { emailTemplatesUpdateEmailTemplates } from "../funcs/emailTemplatesUpdateEmailTemplates.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class EmailTemplates extends ClientSDK {
    /**
     * List all Email Templates
     *
     * @remarks
     *
     * #### Filtering
     * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
     */
    async listEmailTemplates(options) {
        return unwrapAsync(emailTemplatesListEmailTemplates(this, options));
    }
    /**
     * Create a new Email Template
     *
     * @remarks
     *
     * #### Record UUID
     * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.
     */
    async createEmailTemplates(request, options) {
        return unwrapAsync(emailTemplatesCreateEmailTemplates(this, request, options));
    }
    /**
     * Retrieve an Email Template
     */
    async getEmailTemplates(request, options) {
        return unwrapAsync(emailTemplatesGetEmailTemplates(this, request, options));
    }
    /**
     * Update an Email Template
     */
    async updateEmailTemplates(request, options) {
        return unwrapAsync(emailTemplatesUpdateEmailTemplates(this, request, options));
    }
    /**
     * Delete an Email Template
     *
     * @remarks
     *
     * In ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.
     */
    async deleteEmailTemplates(request, options) {
        return unwrapAsync(emailTemplatesDeleteEmailTemplates(this, request, options));
    }
}
//# sourceMappingURL=emailtemplates.js.map