/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { jobActivitiesCreateJobActivities } from "../funcs/jobActivitiesCreateJobActivities.js";
import { jobActivitiesDeleteJobActivities } from "../funcs/jobActivitiesDeleteJobActivities.js";
import { jobActivitiesGetJobActivities } from "../funcs/jobActivitiesGetJobActivities.js";
import { jobActivitiesListJobActivities } from "../funcs/jobActivitiesListJobActivities.js";
import { jobActivitiesUpdateJobActivities } from "../funcs/jobActivitiesUpdateJobActivities.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class JobActivities extends ClientSDK {
    /**
     * List all Job Activities
     *
     * @remarks
     *
     * #### Filtering
     * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **read_schedule**.
     */
    async listJobActivities(options) {
        return unwrapAsync(jobActivitiesListJobActivities(this, options));
    }
    /**
     * Create a new Job Activity
     *
     * @remarks
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **manage_schedule**.
     *
     * #### Record UUID
     * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.
     */
    async createJobActivities(request, options) {
        return unwrapAsync(jobActivitiesCreateJobActivities(this, request, options));
    }
    /**
     * Retrieve a Job Activity
     *
     * @remarks
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **read_schedule**.
     */
    async getJobActivities(request, options) {
        return unwrapAsync(jobActivitiesGetJobActivities(this, request, options));
    }
    /**
     * Update a Job Activity
     *
     * @remarks
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **manage_schedule**.
     */
    async updateJobActivities(request, options) {
        return unwrapAsync(jobActivitiesUpdateJobActivities(this, request, options));
    }
    /**
     * Delete a Job Activity
     *
     * @remarks
     *
     * In ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **manage_schedule**.
     */
    async deleteJobActivities(request, options) {
        return unwrapAsync(jobActivitiesDeleteJobActivities(this, request, options));
    }
}
//# sourceMappingURL=jobactivities.js.map