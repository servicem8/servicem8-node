/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { jobMaterialBundlesCreateJobMaterialBundles } from "../funcs/jobMaterialBundlesCreateJobMaterialBundles.js";
import { jobMaterialBundlesDeleteJobMaterialBundles } from "../funcs/jobMaterialBundlesDeleteJobMaterialBundles.js";
import { jobMaterialBundlesGetJobMaterialBundles } from "../funcs/jobMaterialBundlesGetJobMaterialBundles.js";
import { jobMaterialBundlesListJobMaterialBundles } from "../funcs/jobMaterialBundlesListJobMaterialBundles.js";
import { jobMaterialBundlesUpdateJobMaterialBundles } from "../funcs/jobMaterialBundlesUpdateJobMaterialBundles.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class JobMaterialBundles extends ClientSDK {
    /**
     * List all Job Material Bundles
     *
     * @remarks
     *
     * #### Filtering
     * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
     */
    async listJobMaterialBundles(options) {
        return unwrapAsync(jobMaterialBundlesListJobMaterialBundles(this, options));
    }
    /**
     * Create a new Job Material Bundle
     *
     * @remarks
     *
     * #### Record UUID
     * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.
     */
    async createJobMaterialBundles(request, options) {
        return unwrapAsync(jobMaterialBundlesCreateJobMaterialBundles(this, request, options));
    }
    /**
     * Retrieve a Job Material Bundle
     */
    async getJobMaterialBundles(request, options) {
        return unwrapAsync(jobMaterialBundlesGetJobMaterialBundles(this, request, options));
    }
    /**
     * Update a Job Material Bundle
     */
    async updateJobMaterialBundles(request, options) {
        return unwrapAsync(jobMaterialBundlesUpdateJobMaterialBundles(this, request, options));
    }
    /**
     * Delete a Job Material Bundle
     *
     * @remarks
     *
     * In ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.
     */
    async deleteJobMaterialBundles(request, options) {
        return unwrapAsync(jobMaterialBundlesDeleteJobMaterialBundles(this, request, options));
    }
}
//# sourceMappingURL=jobmaterialbundles.js.map