/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { assetsDeleteAssets } from "../funcs/assetsDeleteAssets.js";
import { assetsGetAssets } from "../funcs/assetsGetAssets.js";
import { assetsListAssets } from "../funcs/assetsListAssets.js";
import { assetsUpdateAssets } from "../funcs/assetsUpdateAssets.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class Assets extends ClientSDK {
    /**
     * List all Assets
     *
     * @remarks
     *
     * #### Filtering
     * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **read_assets**.
     */
    async listAssets(options) {
        return unwrapAsync(assetsListAssets(this, options));
    }
    /**
     * Retrieve an Asset
     *
     * @remarks
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **read_assets**.
     */
    async getAssets(request, options) {
        return unwrapAsync(assetsGetAssets(this, request, options));
    }
    /**
     * Update an Asset
     */
    async updateAssets(request, options) {
        return unwrapAsync(assetsUpdateAssets(this, request, options));
    }
    /**
     * Delete an Asset
     *
     * @remarks
     *
     * In ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.
     */
    async deleteAssets(request, options) {
        return unwrapAsync(assetsDeleteAssets(this, request, options));
    }
}
//# sourceMappingURL=assets.js.map