/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { taxRatesCreateTaxRates } from "../funcs/taxRatesCreateTaxRates.js";
import { taxRatesDeleteTaxRates } from "../funcs/taxRatesDeleteTaxRates.js";
import { taxRatesGetTaxRates } from "../funcs/taxRatesGetTaxRates.js";
import { taxRatesListTaxRates } from "../funcs/taxRatesListTaxRates.js";
import { taxRatesUpdateTaxRates } from "../funcs/taxRatesUpdateTaxRates.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class TaxRates extends ClientSDK {
    /**
     * List all Tax Rates
     *
     * @remarks
     *
     * #### Filtering
     * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
     */
    async listTaxRates(options) {
        return unwrapAsync(taxRatesListTaxRates(this, options));
    }
    /**
     * Create a new Tax Rate
     *
     * @remarks
     *
     * #### Record UUID
     * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.
     */
    async createTaxRates(request, options) {
        return unwrapAsync(taxRatesCreateTaxRates(this, request, options));
    }
    /**
     * Retrieve a Tax Rate
     */
    async getTaxRates(request, options) {
        return unwrapAsync(taxRatesGetTaxRates(this, request, options));
    }
    /**
     * Update a Tax Rate
     */
    async updateTaxRates(request, options) {
        return unwrapAsync(taxRatesUpdateTaxRates(this, request, options));
    }
    /**
     * Delete a Tax Rate
     *
     * @remarks
     *
     * In ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.
     */
    async deleteTaxRates(request, options) {
        return unwrapAsync(taxRatesDeleteTaxRates(this, request, options));
    }
}
//# sourceMappingURL=taxrates.js.map