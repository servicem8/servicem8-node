/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { formsCreateForms } from "../funcs/formsCreateForms.js";
import { formsDeleteForms } from "../funcs/formsDeleteForms.js";
import { formsGetForms } from "../funcs/formsGetForms.js";
import { formsListForms } from "../funcs/formsListForms.js";
import { formsUpdateForms } from "../funcs/formsUpdateForms.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class Forms extends ClientSDK {
    /**
     * List all Forms
     *
     * @remarks
     *
     * #### Filtering
     * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
     */
    async listForms(options) {
        return unwrapAsync(formsListForms(this, options));
    }
    /**
     * Create a new Form
     *
     * @remarks
     *
     * #### Record UUID
     * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.
     */
    async createForms(request, options) {
        return unwrapAsync(formsCreateForms(this, request, options));
    }
    /**
     * Retrieve a Form
     */
    async getForms(request, options) {
        return unwrapAsync(formsGetForms(this, request, options));
    }
    /**
     * Update a Form
     */
    async updateForms(request, options) {
        return unwrapAsync(formsUpdateForms(this, request, options));
    }
    /**
     * Delete a Form
     *
     * @remarks
     *
     * In ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.
     */
    async deleteForms(request, options) {
        return unwrapAsync(formsDeleteForms(this, request, options));
    }
}
//# sourceMappingURL=forms.js.map