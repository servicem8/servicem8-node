/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { knowledgeArticlesCreateKnowledgeArticles } from "../funcs/knowledgeArticlesCreateKnowledgeArticles.js";
import { knowledgeArticlesDeleteKnowledgeArticles } from "../funcs/knowledgeArticlesDeleteKnowledgeArticles.js";
import { knowledgeArticlesGetKnowledgeArticles } from "../funcs/knowledgeArticlesGetKnowledgeArticles.js";
import { knowledgeArticlesListKnowledgeArticles } from "../funcs/knowledgeArticlesListKnowledgeArticles.js";
import { knowledgeArticlesUpdateKnowledgeArticles } from "../funcs/knowledgeArticlesUpdateKnowledgeArticles.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class KnowledgeArticles extends ClientSDK {
    /**
     * List all Knowledge Articles
     *
     * @remarks
     *
     * #### Filtering
     * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **read_knowledge**.
     */
    async listKnowledgeArticles(options) {
        return unwrapAsync(knowledgeArticlesListKnowledgeArticles(this, options));
    }
    /**
     * Create a new Knowledge Article
     *
     * @remarks
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **manage_knowledge**.
     *
     * #### Record UUID
     * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.
     */
    async createKnowledgeArticles(request, options) {
        return unwrapAsync(knowledgeArticlesCreateKnowledgeArticles(this, request, options));
    }
    /**
     * Retrieve a Knowledge Article
     *
     * @remarks
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **read_knowledge**.
     */
    async getKnowledgeArticles(request, options) {
        return unwrapAsync(knowledgeArticlesGetKnowledgeArticles(this, request, options));
    }
    /**
     * Update a Knowledge Article
     */
    async updateKnowledgeArticles(request, options) {
        return unwrapAsync(knowledgeArticlesUpdateKnowledgeArticles(this, request, options));
    }
    /**
     * Delete a Knowledge Article
     *
     * @remarks
     *
     * In ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.
     */
    async deleteKnowledgeArticles(request, options) {
        return unwrapAsync(knowledgeArticlesDeleteKnowledgeArticles(this, request, options));
    }
}
//# sourceMappingURL=knowledgearticles.js.map