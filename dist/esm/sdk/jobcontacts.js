/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { jobContactsCreateJobContacts } from "../funcs/jobContactsCreateJobContacts.js";
import { jobContactsDeleteJobContacts } from "../funcs/jobContactsDeleteJobContacts.js";
import { jobContactsGetJobContacts } from "../funcs/jobContactsGetJobContacts.js";
import { jobContactsListJobContacts } from "../funcs/jobContactsListJobContacts.js";
import { jobContactsUpdateJobContacts } from "../funcs/jobContactsUpdateJobContacts.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class JobContacts extends ClientSDK {
    /**
     * List all Job Contacts
     *
     * @remarks
     *
     * #### Filtering
     * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **read_job_contacts**.
     */
    async listJobContacts(options) {
        return unwrapAsync(jobContactsListJobContacts(this, options));
    }
    /**
     * Create a new Job Contact
     *
     * @remarks
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **manage_job_contacts**.
     *
     * #### Record UUID
     * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.
     */
    async createJobContacts(request, options) {
        return unwrapAsync(jobContactsCreateJobContacts(this, request, options));
    }
    /**
     * Retrieve a Job Contact
     *
     * @remarks
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **read_job_contacts**.
     */
    async getJobContacts(request, options) {
        return unwrapAsync(jobContactsGetJobContacts(this, request, options));
    }
    /**
     * Update a Job Contact
     *
     * @remarks
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **manage_job_contacts**.
     */
    async updateJobContacts(request, options) {
        return unwrapAsync(jobContactsUpdateJobContacts(this, request, options));
    }
    /**
     * Delete a Job Contact
     *
     * @remarks
     *
     * In ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **manage_job_contacts**.
     */
    async deleteJobContacts(request, options) {
        return unwrapAsync(jobContactsDeleteJobContacts(this, request, options));
    }
}
//# sourceMappingURL=jobcontacts.js.map