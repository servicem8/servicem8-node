/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { categoriesCreateCategories } from "../funcs/categoriesCreateCategories.js";
import { categoriesDeleteCategories } from "../funcs/categoriesDeleteCategories.js";
import { categoriesGetCategories } from "../funcs/categoriesGetCategories.js";
import { categoriesListCategories } from "../funcs/categoriesListCategories.js";
import { categoriesUpdateCategories } from "../funcs/categoriesUpdateCategories.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class Categories extends ClientSDK {
    /**
     * List all Categories
     *
     * @remarks
     *
     * #### Filtering
     * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **read_job_categories**.
     */
    async listCategories(options) {
        return unwrapAsync(categoriesListCategories(this, options));
    }
    /**
     * Create a new Category
     *
     * @remarks
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **manage_job_categories**.
     *
     * #### Record UUID
     * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.
     */
    async createCategories(request, options) {
        return unwrapAsync(categoriesCreateCategories(this, request, options));
    }
    /**
     * Retrieve a Category
     *
     * @remarks
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **read_job_categories**.
     */
    async getCategories(request, options) {
        return unwrapAsync(categoriesGetCategories(this, request, options));
    }
    /**
     * Update a Category
     *
     * @remarks
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **manage_job_categories**.
     */
    async updateCategories(request, options) {
        return unwrapAsync(categoriesUpdateCategories(this, request, options));
    }
    /**
     * Delete a Category
     *
     * @remarks
     *
     * In ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.
     *
     * #### OAuth Scope
     * This endpoint requires the following OAuth scope **manage_job_categories**.
     */
    async deleteCategories(request, options) {
        return unwrapAsync(categoriesDeleteCategories(this, request, options));
    }
}
//# sourceMappingURL=categories.js.map