/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { staffMessagesCreateStaffMessages } from "../funcs/staffMessagesCreateStaffMessages.js";
import { staffMessagesDeleteStaffMessages } from "../funcs/staffMessagesDeleteStaffMessages.js";
import { staffMessagesGetStaffMessages } from "../funcs/staffMessagesGetStaffMessages.js";
import { staffMessagesListStaffMessages } from "../funcs/staffMessagesListStaffMessages.js";
import { staffMessagesUpdateStaffMessages } from "../funcs/staffMessagesUpdateStaffMessages.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class StaffMessages extends ClientSDK {
    /**
     * List all Staff Messages
     *
     * @remarks
     *
     * #### Filtering
     * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
     */
    async listStaffMessages(options) {
        return unwrapAsync(staffMessagesListStaffMessages(this, options));
    }
    /**
     * Create a new Staff Message
     *
     * @remarks
     *
     * #### Record UUID
     * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.
     */
    async createStaffMessages(request, options) {
        return unwrapAsync(staffMessagesCreateStaffMessages(this, request, options));
    }
    /**
     * Retrieve a Staff Message
     */
    async getStaffMessages(request, options) {
        return unwrapAsync(staffMessagesGetStaffMessages(this, request, options));
    }
    /**
     * Update a Staff Message
     */
    async updateStaffMessages(request, options) {
        return unwrapAsync(staffMessagesUpdateStaffMessages(this, request, options));
    }
    /**
     * Delete a Staff Message
     *
     * @remarks
     *
     * In ServiceM8, records are never deleted, but are archived. Archived records will remain accessible via the API as (active = 0), however will no longer be visible in UI. Archived records can be restored to active by setting the record active field to 1.
     */
    async deleteStaffMessages(request, options) {
        return unwrapAsync(staffMessagesDeleteStaffMessages(this, request, options));
    }
}
//# sourceMappingURL=staffmessages.js.map