/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const Result$inboundSchema = z
    .object({
    errorCode: z.number().optional(),
    message: z.string().optional(),
});
/** @internal */
export const Result$outboundSchema = z.object({
    errorCode: z.number().optional(),
    message: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Result$;
(function (Result$) {
    /** @deprecated use `Result$inboundSchema` instead. */
    Result$.inboundSchema = Result$inboundSchema;
    /** @deprecated use `Result$outboundSchema` instead. */
    Result$.outboundSchema = Result$outboundSchema;
})(Result$ || (Result$ = {}));
export function resultToJSON(result) {
    return JSON.stringify(Result$outboundSchema.parse(result));
}
export function resultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Result$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Result' from JSON`);
}
//# sourceMappingURL=result.js.map