/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/**
 * Record active/deleted flag.
 *
 * @remarks
 *
 * Valid values are [0,1]
 */
export const JobMaterialBundleActive = {
    Zero: 0,
    One: 1,
};
/** @internal */
export const JobMaterialBundleActive$inboundSchema = z.nativeEnum(JobMaterialBundleActive);
/** @internal */
export const JobMaterialBundleActive$outboundSchema = JobMaterialBundleActive$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var JobMaterialBundleActive$;
(function (JobMaterialBundleActive$) {
    /** @deprecated use `JobMaterialBundleActive$inboundSchema` instead. */
    JobMaterialBundleActive$.inboundSchema = JobMaterialBundleActive$inboundSchema;
    /** @deprecated use `JobMaterialBundleActive$outboundSchema` instead. */
    JobMaterialBundleActive$.outboundSchema = JobMaterialBundleActive$outboundSchema;
})(JobMaterialBundleActive$ || (JobMaterialBundleActive$ = {}));
/** @internal */
export const JobMaterialBundle$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: JobMaterialBundleActive$inboundSchema.default(1),
    edit_date: z.string().optional(),
    item_number: z.string().optional(),
    name: z.string().optional(),
    quantity: z.string().optional(),
    sort_order: z.number().int().optional(),
    material_bundle_uuid: z.string().optional(),
    job_uuid: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "edit_date": "editDate",
        "item_number": "itemNumber",
        "sort_order": "sortOrder",
        "material_bundle_uuid": "materialBundleUuid",
        "job_uuid": "jobUuid",
    });
});
/** @internal */
export const JobMaterialBundle$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: JobMaterialBundleActive$outboundSchema.default(1),
    editDate: z.string().optional(),
    itemNumber: z.string().optional(),
    name: z.string().optional(),
    quantity: z.string().optional(),
    sortOrder: z.number().int().optional(),
    materialBundleUuid: z.string().optional(),
    jobUuid: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        editDate: "edit_date",
        itemNumber: "item_number",
        sortOrder: "sort_order",
        materialBundleUuid: "material_bundle_uuid",
        jobUuid: "job_uuid",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var JobMaterialBundle$;
(function (JobMaterialBundle$) {
    /** @deprecated use `JobMaterialBundle$inboundSchema` instead. */
    JobMaterialBundle$.inboundSchema = JobMaterialBundle$inboundSchema;
    /** @deprecated use `JobMaterialBundle$outboundSchema` instead. */
    JobMaterialBundle$.outboundSchema = JobMaterialBundle$outboundSchema;
})(JobMaterialBundle$ || (JobMaterialBundle$ = {}));
export function jobMaterialBundleToJSON(jobMaterialBundle) {
    return JSON.stringify(JobMaterialBundle$outboundSchema.parse(jobMaterialBundle));
}
export function jobMaterialBundleFromJSON(jsonString) {
    return safeParse(jsonString, (x) => JobMaterialBundle$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'JobMaterialBundle' from JSON`);
}
/** @internal */
export const JobMaterialBundleInput$inboundSchema = z.object({
    uuid: z.string().optional(),
    active: JobMaterialBundleActive$inboundSchema.default(1),
    item_number: z.string().optional(),
    name: z.string().optional(),
    quantity: z.string().optional(),
    sort_order: z.number().int().optional(),
    material_bundle_uuid: z.string().optional(),
    job_uuid: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "item_number": "itemNumber",
        "sort_order": "sortOrder",
        "material_bundle_uuid": "materialBundleUuid",
        "job_uuid": "jobUuid",
    });
});
/** @internal */
export const JobMaterialBundleInput$outboundSchema = z.object({
    uuid: z.string().optional(),
    active: JobMaterialBundleActive$outboundSchema.default(1),
    itemNumber: z.string().optional(),
    name: z.string().optional(),
    quantity: z.string().optional(),
    sortOrder: z.number().int().optional(),
    materialBundleUuid: z.string().optional(),
    jobUuid: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        itemNumber: "item_number",
        sortOrder: "sort_order",
        materialBundleUuid: "material_bundle_uuid",
        jobUuid: "job_uuid",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var JobMaterialBundleInput$;
(function (JobMaterialBundleInput$) {
    /** @deprecated use `JobMaterialBundleInput$inboundSchema` instead. */
    JobMaterialBundleInput$.inboundSchema = JobMaterialBundleInput$inboundSchema;
    /** @deprecated use `JobMaterialBundleInput$outboundSchema` instead. */
    JobMaterialBundleInput$.outboundSchema = JobMaterialBundleInput$outboundSchema;
})(JobMaterialBundleInput$ || (JobMaterialBundleInput$ = {}));
export function jobMaterialBundleInputToJSON(jobMaterialBundleInput) {
    return JSON.stringify(JobMaterialBundleInput$outboundSchema.parse(jobMaterialBundleInput));
}
export function jobMaterialBundleInputFromJSON(jsonString) {
    return safeParse(jsonString, (x) => JobMaterialBundleInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'JobMaterialBundleInput' from JSON`);
}
//# sourceMappingURL=jobmaterialbundle.js.map