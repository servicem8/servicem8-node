/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateFeedbackResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateFeedbackResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateFeedbackResponseResult$;
(function (CreateFeedbackResponseResult$) {
    /** @deprecated use `CreateFeedbackResponseResult$inboundSchema` instead. */
    CreateFeedbackResponseResult$.inboundSchema = CreateFeedbackResponseResult$inboundSchema;
    /** @deprecated use `CreateFeedbackResponseResult$outboundSchema` instead. */
    CreateFeedbackResponseResult$.outboundSchema = CreateFeedbackResponseResult$outboundSchema;
})(CreateFeedbackResponseResult$ || (CreateFeedbackResponseResult$ = {}));
export function createFeedbackResponseResultToJSON(createFeedbackResponseResult) {
    return JSON.stringify(CreateFeedbackResponseResult$outboundSchema.parse(createFeedbackResponseResult));
}
export function createFeedbackResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateFeedbackResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateFeedbackResponseResult' from JSON`);
}
/** @internal */
export const CreateFeedbackResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateFeedbackResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateFeedbackResponse$;
(function (CreateFeedbackResponse$) {
    /** @deprecated use `CreateFeedbackResponse$inboundSchema` instead. */
    CreateFeedbackResponse$.inboundSchema = CreateFeedbackResponse$inboundSchema;
    /** @deprecated use `CreateFeedbackResponse$outboundSchema` instead. */
    CreateFeedbackResponse$.outboundSchema = CreateFeedbackResponse$outboundSchema;
})(CreateFeedbackResponse$ || (CreateFeedbackResponse$ = {}));
export function createFeedbackResponseToJSON(createFeedbackResponse) {
    return JSON.stringify(CreateFeedbackResponse$outboundSchema.parse(createFeedbackResponse));
}
export function createFeedbackResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateFeedbackResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateFeedbackResponse' from JSON`);
}
//# sourceMappingURL=createfeedback.js.map