/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateCategoriesResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateCategoriesResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateCategoriesResponseResult$;
(function (CreateCategoriesResponseResult$) {
    /** @deprecated use `CreateCategoriesResponseResult$inboundSchema` instead. */
    CreateCategoriesResponseResult$.inboundSchema = CreateCategoriesResponseResult$inboundSchema;
    /** @deprecated use `CreateCategoriesResponseResult$outboundSchema` instead. */
    CreateCategoriesResponseResult$.outboundSchema = CreateCategoriesResponseResult$outboundSchema;
})(CreateCategoriesResponseResult$ || (CreateCategoriesResponseResult$ = {}));
export function createCategoriesResponseResultToJSON(createCategoriesResponseResult) {
    return JSON.stringify(CreateCategoriesResponseResult$outboundSchema.parse(createCategoriesResponseResult));
}
export function createCategoriesResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateCategoriesResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateCategoriesResponseResult' from JSON`);
}
/** @internal */
export const CreateCategoriesResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateCategoriesResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateCategoriesResponse$;
(function (CreateCategoriesResponse$) {
    /** @deprecated use `CreateCategoriesResponse$inboundSchema` instead. */
    CreateCategoriesResponse$.inboundSchema = CreateCategoriesResponse$inboundSchema;
    /** @deprecated use `CreateCategoriesResponse$outboundSchema` instead. */
    CreateCategoriesResponse$.outboundSchema = CreateCategoriesResponse$outboundSchema;
})(CreateCategoriesResponse$ || (CreateCategoriesResponse$ = {}));
export function createCategoriesResponseToJSON(createCategoriesResponse) {
    return JSON.stringify(CreateCategoriesResponse$outboundSchema.parse(createCategoriesResponse));
}
export function createCategoriesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateCategoriesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateCategoriesResponse' from JSON`);
}
//# sourceMappingURL=createcategories.js.map