/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateCompanyContactsResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateCompanyContactsResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateCompanyContactsResponseResult$;
(function (CreateCompanyContactsResponseResult$) {
    /** @deprecated use `CreateCompanyContactsResponseResult$inboundSchema` instead. */
    CreateCompanyContactsResponseResult$.inboundSchema = CreateCompanyContactsResponseResult$inboundSchema;
    /** @deprecated use `CreateCompanyContactsResponseResult$outboundSchema` instead. */
    CreateCompanyContactsResponseResult$.outboundSchema = CreateCompanyContactsResponseResult$outboundSchema;
})(CreateCompanyContactsResponseResult$ || (CreateCompanyContactsResponseResult$ = {}));
export function createCompanyContactsResponseResultToJSON(createCompanyContactsResponseResult) {
    return JSON.stringify(CreateCompanyContactsResponseResult$outboundSchema.parse(createCompanyContactsResponseResult));
}
export function createCompanyContactsResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateCompanyContactsResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateCompanyContactsResponseResult' from JSON`);
}
/** @internal */
export const CreateCompanyContactsResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateCompanyContactsResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateCompanyContactsResponse$;
(function (CreateCompanyContactsResponse$) {
    /** @deprecated use `CreateCompanyContactsResponse$inboundSchema` instead. */
    CreateCompanyContactsResponse$.inboundSchema = CreateCompanyContactsResponse$inboundSchema;
    /** @deprecated use `CreateCompanyContactsResponse$outboundSchema` instead. */
    CreateCompanyContactsResponse$.outboundSchema = CreateCompanyContactsResponse$outboundSchema;
})(CreateCompanyContactsResponse$ || (CreateCompanyContactsResponse$ = {}));
export function createCompanyContactsResponseToJSON(createCompanyContactsResponse) {
    return JSON.stringify(CreateCompanyContactsResponse$outboundSchema.parse(createCompanyContactsResponse));
}
export function createCompanyContactsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateCompanyContactsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateCompanyContactsResponse' from JSON`);
}
//# sourceMappingURL=createcompanycontacts.js.map