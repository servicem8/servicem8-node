/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const GetFormFieldsRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const GetFormFieldsRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFormFieldsRequest$;
(function (GetFormFieldsRequest$) {
    /** @deprecated use `GetFormFieldsRequest$inboundSchema` instead. */
    GetFormFieldsRequest$.inboundSchema = GetFormFieldsRequest$inboundSchema;
    /** @deprecated use `GetFormFieldsRequest$outboundSchema` instead. */
    GetFormFieldsRequest$.outboundSchema = GetFormFieldsRequest$outboundSchema;
})(GetFormFieldsRequest$ || (GetFormFieldsRequest$ = {}));
export function getFormFieldsRequestToJSON(getFormFieldsRequest) {
    return JSON.stringify(GetFormFieldsRequest$outboundSchema.parse(getFormFieldsRequest));
}
export function getFormFieldsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFormFieldsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFormFieldsRequest' from JSON`);
}
/** @internal */
export const GetFormFieldsResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    components.FormField$inboundSchema,
]);
/** @internal */
export const GetFormFieldsResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    components.FormField$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFormFieldsResponse$;
(function (GetFormFieldsResponse$) {
    /** @deprecated use `GetFormFieldsResponse$inboundSchema` instead. */
    GetFormFieldsResponse$.inboundSchema = GetFormFieldsResponse$inboundSchema;
    /** @deprecated use `GetFormFieldsResponse$outboundSchema` instead. */
    GetFormFieldsResponse$.outboundSchema = GetFormFieldsResponse$outboundSchema;
})(GetFormFieldsResponse$ || (GetFormFieldsResponse$ = {}));
export function getFormFieldsResponseToJSON(getFormFieldsResponse) {
    return JSON.stringify(GetFormFieldsResponse$outboundSchema.parse(getFormFieldsResponse));
}
export function getFormFieldsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFormFieldsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFormFieldsResponse' from JSON`);
}
//# sourceMappingURL=getformfields.js.map