/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateSecurityRolesResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateSecurityRolesResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSecurityRolesResponseResult$;
(function (CreateSecurityRolesResponseResult$) {
    /** @deprecated use `CreateSecurityRolesResponseResult$inboundSchema` instead. */
    CreateSecurityRolesResponseResult$.inboundSchema = CreateSecurityRolesResponseResult$inboundSchema;
    /** @deprecated use `CreateSecurityRolesResponseResult$outboundSchema` instead. */
    CreateSecurityRolesResponseResult$.outboundSchema = CreateSecurityRolesResponseResult$outboundSchema;
})(CreateSecurityRolesResponseResult$ || (CreateSecurityRolesResponseResult$ = {}));
export function createSecurityRolesResponseResultToJSON(createSecurityRolesResponseResult) {
    return JSON.stringify(CreateSecurityRolesResponseResult$outboundSchema.parse(createSecurityRolesResponseResult));
}
export function createSecurityRolesResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSecurityRolesResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSecurityRolesResponseResult' from JSON`);
}
/** @internal */
export const CreateSecurityRolesResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateSecurityRolesResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSecurityRolesResponse$;
(function (CreateSecurityRolesResponse$) {
    /** @deprecated use `CreateSecurityRolesResponse$inboundSchema` instead. */
    CreateSecurityRolesResponse$.inboundSchema = CreateSecurityRolesResponse$inboundSchema;
    /** @deprecated use `CreateSecurityRolesResponse$outboundSchema` instead. */
    CreateSecurityRolesResponse$.outboundSchema = CreateSecurityRolesResponse$outboundSchema;
})(CreateSecurityRolesResponse$ || (CreateSecurityRolesResponse$ = {}));
export function createSecurityRolesResponseToJSON(createSecurityRolesResponse) {
    return JSON.stringify(CreateSecurityRolesResponse$outboundSchema.parse(createSecurityRolesResponse));
}
export function createSecurityRolesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSecurityRolesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSecurityRolesResponse' from JSON`);
}
//# sourceMappingURL=createsecurityroles.js.map