/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const DeleteFeedbackRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const DeleteFeedbackRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteFeedbackRequest$;
(function (DeleteFeedbackRequest$) {
    /** @deprecated use `DeleteFeedbackRequest$inboundSchema` instead. */
    DeleteFeedbackRequest$.inboundSchema = DeleteFeedbackRequest$inboundSchema;
    /** @deprecated use `DeleteFeedbackRequest$outboundSchema` instead. */
    DeleteFeedbackRequest$.outboundSchema = DeleteFeedbackRequest$outboundSchema;
})(DeleteFeedbackRequest$ || (DeleteFeedbackRequest$ = {}));
export function deleteFeedbackRequestToJSON(deleteFeedbackRequest) {
    return JSON.stringify(DeleteFeedbackRequest$outboundSchema.parse(deleteFeedbackRequest));
}
export function deleteFeedbackRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteFeedbackRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteFeedbackRequest' from JSON`);
}
/** @internal */
export const DeleteFeedbackResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const DeleteFeedbackResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteFeedbackResponse$;
(function (DeleteFeedbackResponse$) {
    /** @deprecated use `DeleteFeedbackResponse$inboundSchema` instead. */
    DeleteFeedbackResponse$.inboundSchema = DeleteFeedbackResponse$inboundSchema;
    /** @deprecated use `DeleteFeedbackResponse$outboundSchema` instead. */
    DeleteFeedbackResponse$.outboundSchema = DeleteFeedbackResponse$outboundSchema;
})(DeleteFeedbackResponse$ || (DeleteFeedbackResponse$ = {}));
export function deleteFeedbackResponseToJSON(deleteFeedbackResponse) {
    return JSON.stringify(DeleteFeedbackResponse$outboundSchema.parse(deleteFeedbackResponse));
}
export function deleteFeedbackResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteFeedbackResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteFeedbackResponse' from JSON`);
}
//# sourceMappingURL=deletefeedback.js.map