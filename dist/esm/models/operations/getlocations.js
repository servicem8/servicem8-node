/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const GetLocationsRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const GetLocationsRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetLocationsRequest$;
(function (GetLocationsRequest$) {
    /** @deprecated use `GetLocationsRequest$inboundSchema` instead. */
    GetLocationsRequest$.inboundSchema = GetLocationsRequest$inboundSchema;
    /** @deprecated use `GetLocationsRequest$outboundSchema` instead. */
    GetLocationsRequest$.outboundSchema = GetLocationsRequest$outboundSchema;
})(GetLocationsRequest$ || (GetLocationsRequest$ = {}));
export function getLocationsRequestToJSON(getLocationsRequest) {
    return JSON.stringify(GetLocationsRequest$outboundSchema.parse(getLocationsRequest));
}
export function getLocationsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetLocationsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetLocationsRequest' from JSON`);
}
/** @internal */
export const GetLocationsResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    components.Location$inboundSchema,
]);
/** @internal */
export const GetLocationsResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    components.Location$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetLocationsResponse$;
(function (GetLocationsResponse$) {
    /** @deprecated use `GetLocationsResponse$inboundSchema` instead. */
    GetLocationsResponse$.inboundSchema = GetLocationsResponse$inboundSchema;
    /** @deprecated use `GetLocationsResponse$outboundSchema` instead. */
    GetLocationsResponse$.outboundSchema = GetLocationsResponse$outboundSchema;
})(GetLocationsResponse$ || (GetLocationsResponse$ = {}));
export function getLocationsResponseToJSON(getLocationsResponse) {
    return JSON.stringify(GetLocationsResponse$outboundSchema.parse(getLocationsResponse));
}
export function getLocationsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetLocationsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetLocationsResponse' from JSON`);
}
//# sourceMappingURL=getlocations.js.map