/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateLocationsRequest$inboundSchema = z.object({
    uuid: z.string(),
    Location: components.LocationInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Location": "location",
    });
});
/** @internal */
export const UpdateLocationsRequest$outboundSchema = z.object({
    uuid: z.string(),
    location: components.LocationInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        location: "Location",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateLocationsRequest$;
(function (UpdateLocationsRequest$) {
    /** @deprecated use `UpdateLocationsRequest$inboundSchema` instead. */
    UpdateLocationsRequest$.inboundSchema = UpdateLocationsRequest$inboundSchema;
    /** @deprecated use `UpdateLocationsRequest$outboundSchema` instead. */
    UpdateLocationsRequest$.outboundSchema = UpdateLocationsRequest$outboundSchema;
})(UpdateLocationsRequest$ || (UpdateLocationsRequest$ = {}));
export function updateLocationsRequestToJSON(updateLocationsRequest) {
    return JSON.stringify(UpdateLocationsRequest$outboundSchema.parse(updateLocationsRequest));
}
export function updateLocationsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateLocationsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateLocationsRequest' from JSON`);
}
/** @internal */
export const UpdateLocationsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateLocationsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateLocationsResponse$;
(function (UpdateLocationsResponse$) {
    /** @deprecated use `UpdateLocationsResponse$inboundSchema` instead. */
    UpdateLocationsResponse$.inboundSchema = UpdateLocationsResponse$inboundSchema;
    /** @deprecated use `UpdateLocationsResponse$outboundSchema` instead. */
    UpdateLocationsResponse$.outboundSchema = UpdateLocationsResponse$outboundSchema;
})(UpdateLocationsResponse$ || (UpdateLocationsResponse$ = {}));
export function updateLocationsResponseToJSON(updateLocationsResponse) {
    return JSON.stringify(UpdateLocationsResponse$outboundSchema.parse(updateLocationsResponse));
}
export function updateLocationsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateLocationsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateLocationsResponse' from JSON`);
}
//# sourceMappingURL=updatelocations.js.map