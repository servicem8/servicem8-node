/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateJobsResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateJobsResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateJobsResponseResult$;
(function (CreateJobsResponseResult$) {
    /** @deprecated use `CreateJobsResponseResult$inboundSchema` instead. */
    CreateJobsResponseResult$.inboundSchema = CreateJobsResponseResult$inboundSchema;
    /** @deprecated use `CreateJobsResponseResult$outboundSchema` instead. */
    CreateJobsResponseResult$.outboundSchema = CreateJobsResponseResult$outboundSchema;
})(CreateJobsResponseResult$ || (CreateJobsResponseResult$ = {}));
export function createJobsResponseResultToJSON(createJobsResponseResult) {
    return JSON.stringify(CreateJobsResponseResult$outboundSchema.parse(createJobsResponseResult));
}
export function createJobsResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateJobsResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateJobsResponseResult' from JSON`);
}
/** @internal */
export const CreateJobsResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateJobsResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateJobsResponse$;
(function (CreateJobsResponse$) {
    /** @deprecated use `CreateJobsResponse$inboundSchema` instead. */
    CreateJobsResponse$.inboundSchema = CreateJobsResponse$inboundSchema;
    /** @deprecated use `CreateJobsResponse$outboundSchema` instead. */
    CreateJobsResponse$.outboundSchema = CreateJobsResponse$outboundSchema;
})(CreateJobsResponse$ || (CreateJobsResponse$ = {}));
export function createJobsResponseToJSON(createJobsResponse) {
    return JSON.stringify(CreateJobsResponse$outboundSchema.parse(createJobsResponse));
}
export function createJobsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateJobsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateJobsResponse' from JSON`);
}
//# sourceMappingURL=createjobs.js.map