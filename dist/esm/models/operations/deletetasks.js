/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const DeleteTasksRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const DeleteTasksRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteTasksRequest$;
(function (DeleteTasksRequest$) {
    /** @deprecated use `DeleteTasksRequest$inboundSchema` instead. */
    DeleteTasksRequest$.inboundSchema = DeleteTasksRequest$inboundSchema;
    /** @deprecated use `DeleteTasksRequest$outboundSchema` instead. */
    DeleteTasksRequest$.outboundSchema = DeleteTasksRequest$outboundSchema;
})(DeleteTasksRequest$ || (DeleteTasksRequest$ = {}));
export function deleteTasksRequestToJSON(deleteTasksRequest) {
    return JSON.stringify(DeleteTasksRequest$outboundSchema.parse(deleteTasksRequest));
}
export function deleteTasksRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteTasksRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteTasksRequest' from JSON`);
}
/** @internal */
export const DeleteTasksResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const DeleteTasksResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteTasksResponse$;
(function (DeleteTasksResponse$) {
    /** @deprecated use `DeleteTasksResponse$inboundSchema` instead. */
    DeleteTasksResponse$.inboundSchema = DeleteTasksResponse$inboundSchema;
    /** @deprecated use `DeleteTasksResponse$outboundSchema` instead. */
    DeleteTasksResponse$.outboundSchema = DeleteTasksResponse$outboundSchema;
})(DeleteTasksResponse$ || (DeleteTasksResponse$ = {}));
export function deleteTasksResponseToJSON(deleteTasksResponse) {
    return JSON.stringify(DeleteTasksResponse$outboundSchema.parse(deleteTasksResponse));
}
export function deleteTasksResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteTasksResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteTasksResponse' from JSON`);
}
//# sourceMappingURL=deletetasks.js.map