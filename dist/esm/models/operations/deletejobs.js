/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const DeleteJobsRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const DeleteJobsRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteJobsRequest$;
(function (DeleteJobsRequest$) {
    /** @deprecated use `DeleteJobsRequest$inboundSchema` instead. */
    DeleteJobsRequest$.inboundSchema = DeleteJobsRequest$inboundSchema;
    /** @deprecated use `DeleteJobsRequest$outboundSchema` instead. */
    DeleteJobsRequest$.outboundSchema = DeleteJobsRequest$outboundSchema;
})(DeleteJobsRequest$ || (DeleteJobsRequest$ = {}));
export function deleteJobsRequestToJSON(deleteJobsRequest) {
    return JSON.stringify(DeleteJobsRequest$outboundSchema.parse(deleteJobsRequest));
}
export function deleteJobsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteJobsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteJobsRequest' from JSON`);
}
/** @internal */
export const DeleteJobsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const DeleteJobsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteJobsResponse$;
(function (DeleteJobsResponse$) {
    /** @deprecated use `DeleteJobsResponse$inboundSchema` instead. */
    DeleteJobsResponse$.inboundSchema = DeleteJobsResponse$inboundSchema;
    /** @deprecated use `DeleteJobsResponse$outboundSchema` instead. */
    DeleteJobsResponse$.outboundSchema = DeleteJobsResponse$outboundSchema;
})(DeleteJobsResponse$ || (DeleteJobsResponse$ = {}));
export function deleteJobsResponseToJSON(deleteJobsResponse) {
    return JSON.stringify(DeleteJobsResponse$outboundSchema.parse(deleteJobsResponse));
}
export function deleteJobsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteJobsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteJobsResponse' from JSON`);
}
//# sourceMappingURL=deletejobs.js.map