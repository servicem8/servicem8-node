/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListCategoriesResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.Category$inboundSchema),
]);
/** @internal */
export const ListCategoriesResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.Category$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListCategoriesResponse$;
(function (ListCategoriesResponse$) {
    /** @deprecated use `ListCategoriesResponse$inboundSchema` instead. */
    ListCategoriesResponse$.inboundSchema = ListCategoriesResponse$inboundSchema;
    /** @deprecated use `ListCategoriesResponse$outboundSchema` instead. */
    ListCategoriesResponse$.outboundSchema = ListCategoriesResponse$outboundSchema;
})(ListCategoriesResponse$ || (ListCategoriesResponse$ = {}));
export function listCategoriesResponseToJSON(listCategoriesResponse) {
    return JSON.stringify(ListCategoriesResponse$outboundSchema.parse(listCategoriesResponse));
}
export function listCategoriesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListCategoriesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListCategoriesResponse' from JSON`);
}
//# sourceMappingURL=listcategories.js.map