/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateTaxRatesRequest$inboundSchema = z.object({
    uuid: z.string(),
    TaxRate: components.TaxRateInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "TaxRate": "taxRate",
    });
});
/** @internal */
export const UpdateTaxRatesRequest$outboundSchema = z.object({
    uuid: z.string(),
    taxRate: components.TaxRateInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        taxRate: "TaxRate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateTaxRatesRequest$;
(function (UpdateTaxRatesRequest$) {
    /** @deprecated use `UpdateTaxRatesRequest$inboundSchema` instead. */
    UpdateTaxRatesRequest$.inboundSchema = UpdateTaxRatesRequest$inboundSchema;
    /** @deprecated use `UpdateTaxRatesRequest$outboundSchema` instead. */
    UpdateTaxRatesRequest$.outboundSchema = UpdateTaxRatesRequest$outboundSchema;
})(UpdateTaxRatesRequest$ || (UpdateTaxRatesRequest$ = {}));
export function updateTaxRatesRequestToJSON(updateTaxRatesRequest) {
    return JSON.stringify(UpdateTaxRatesRequest$outboundSchema.parse(updateTaxRatesRequest));
}
export function updateTaxRatesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateTaxRatesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateTaxRatesRequest' from JSON`);
}
/** @internal */
export const UpdateTaxRatesResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateTaxRatesResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateTaxRatesResponse$;
(function (UpdateTaxRatesResponse$) {
    /** @deprecated use `UpdateTaxRatesResponse$inboundSchema` instead. */
    UpdateTaxRatesResponse$.inboundSchema = UpdateTaxRatesResponse$inboundSchema;
    /** @deprecated use `UpdateTaxRatesResponse$outboundSchema` instead. */
    UpdateTaxRatesResponse$.outboundSchema = UpdateTaxRatesResponse$outboundSchema;
})(UpdateTaxRatesResponse$ || (UpdateTaxRatesResponse$ = {}));
export function updateTaxRatesResponseToJSON(updateTaxRatesResponse) {
    return JSON.stringify(UpdateTaxRatesResponse$outboundSchema.parse(updateTaxRatesResponse));
}
export function updateTaxRatesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateTaxRatesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateTaxRatesResponse' from JSON`);
}
//# sourceMappingURL=updatetaxrates.js.map