/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateAllocationWindowsRequest$inboundSchema = z.object({
    uuid: z.string(),
    AllocationWindow: components.AllocationWindowInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "AllocationWindow": "allocationWindow",
    });
});
/** @internal */
export const UpdateAllocationWindowsRequest$outboundSchema = z.object({
    uuid: z.string(),
    allocationWindow: components.AllocationWindowInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        allocationWindow: "AllocationWindow",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateAllocationWindowsRequest$;
(function (UpdateAllocationWindowsRequest$) {
    /** @deprecated use `UpdateAllocationWindowsRequest$inboundSchema` instead. */
    UpdateAllocationWindowsRequest$.inboundSchema = UpdateAllocationWindowsRequest$inboundSchema;
    /** @deprecated use `UpdateAllocationWindowsRequest$outboundSchema` instead. */
    UpdateAllocationWindowsRequest$.outboundSchema = UpdateAllocationWindowsRequest$outboundSchema;
})(UpdateAllocationWindowsRequest$ || (UpdateAllocationWindowsRequest$ = {}));
export function updateAllocationWindowsRequestToJSON(updateAllocationWindowsRequest) {
    return JSON.stringify(UpdateAllocationWindowsRequest$outboundSchema.parse(updateAllocationWindowsRequest));
}
export function updateAllocationWindowsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateAllocationWindowsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateAllocationWindowsRequest' from JSON`);
}
/** @internal */
export const UpdateAllocationWindowsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateAllocationWindowsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateAllocationWindowsResponse$;
(function (UpdateAllocationWindowsResponse$) {
    /** @deprecated use `UpdateAllocationWindowsResponse$inboundSchema` instead. */
    UpdateAllocationWindowsResponse$.inboundSchema = UpdateAllocationWindowsResponse$inboundSchema;
    /** @deprecated use `UpdateAllocationWindowsResponse$outboundSchema` instead. */
    UpdateAllocationWindowsResponse$.outboundSchema = UpdateAllocationWindowsResponse$outboundSchema;
})(UpdateAllocationWindowsResponse$ || (UpdateAllocationWindowsResponse$ = {}));
export function updateAllocationWindowsResponseToJSON(updateAllocationWindowsResponse) {
    return JSON.stringify(UpdateAllocationWindowsResponse$outboundSchema.parse(updateAllocationWindowsResponse));
}
export function updateAllocationWindowsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateAllocationWindowsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateAllocationWindowsResponse' from JSON`);
}
//# sourceMappingURL=updateallocationwindows.js.map