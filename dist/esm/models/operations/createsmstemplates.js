/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateSMSTemplatesResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateSMSTemplatesResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSMSTemplatesResponseResult$;
(function (CreateSMSTemplatesResponseResult$) {
    /** @deprecated use `CreateSMSTemplatesResponseResult$inboundSchema` instead. */
    CreateSMSTemplatesResponseResult$.inboundSchema = CreateSMSTemplatesResponseResult$inboundSchema;
    /** @deprecated use `CreateSMSTemplatesResponseResult$outboundSchema` instead. */
    CreateSMSTemplatesResponseResult$.outboundSchema = CreateSMSTemplatesResponseResult$outboundSchema;
})(CreateSMSTemplatesResponseResult$ || (CreateSMSTemplatesResponseResult$ = {}));
export function createSMSTemplatesResponseResultToJSON(createSMSTemplatesResponseResult) {
    return JSON.stringify(CreateSMSTemplatesResponseResult$outboundSchema.parse(createSMSTemplatesResponseResult));
}
export function createSMSTemplatesResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSMSTemplatesResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSMSTemplatesResponseResult' from JSON`);
}
/** @internal */
export const CreateSMSTemplatesResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateSMSTemplatesResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSMSTemplatesResponse$;
(function (CreateSMSTemplatesResponse$) {
    /** @deprecated use `CreateSMSTemplatesResponse$inboundSchema` instead. */
    CreateSMSTemplatesResponse$.inboundSchema = CreateSMSTemplatesResponse$inboundSchema;
    /** @deprecated use `CreateSMSTemplatesResponse$outboundSchema` instead. */
    CreateSMSTemplatesResponse$.outboundSchema = CreateSMSTemplatesResponse$outboundSchema;
})(CreateSMSTemplatesResponse$ || (CreateSMSTemplatesResponse$ = {}));
export function createSMSTemplatesResponseToJSON(createSMSTemplatesResponse) {
    return JSON.stringify(CreateSMSTemplatesResponse$outboundSchema.parse(createSMSTemplatesResponse));
}
export function createSMSTemplatesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSMSTemplatesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSMSTemplatesResponse' from JSON`);
}
//# sourceMappingURL=createsmstemplates.js.map