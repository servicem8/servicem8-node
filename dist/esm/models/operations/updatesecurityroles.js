/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateSecurityRolesRequest$inboundSchema = z.object({
    uuid: z.string(),
    SecurityRole: components.SecurityRoleInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "SecurityRole": "securityRole",
    });
});
/** @internal */
export const UpdateSecurityRolesRequest$outboundSchema = z.object({
    uuid: z.string(),
    securityRole: components.SecurityRoleInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        securityRole: "SecurityRole",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateSecurityRolesRequest$;
(function (UpdateSecurityRolesRequest$) {
    /** @deprecated use `UpdateSecurityRolesRequest$inboundSchema` instead. */
    UpdateSecurityRolesRequest$.inboundSchema = UpdateSecurityRolesRequest$inboundSchema;
    /** @deprecated use `UpdateSecurityRolesRequest$outboundSchema` instead. */
    UpdateSecurityRolesRequest$.outboundSchema = UpdateSecurityRolesRequest$outboundSchema;
})(UpdateSecurityRolesRequest$ || (UpdateSecurityRolesRequest$ = {}));
export function updateSecurityRolesRequestToJSON(updateSecurityRolesRequest) {
    return JSON.stringify(UpdateSecurityRolesRequest$outboundSchema.parse(updateSecurityRolesRequest));
}
export function updateSecurityRolesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateSecurityRolesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateSecurityRolesRequest' from JSON`);
}
/** @internal */
export const UpdateSecurityRolesResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateSecurityRolesResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateSecurityRolesResponse$;
(function (UpdateSecurityRolesResponse$) {
    /** @deprecated use `UpdateSecurityRolesResponse$inboundSchema` instead. */
    UpdateSecurityRolesResponse$.inboundSchema = UpdateSecurityRolesResponse$inboundSchema;
    /** @deprecated use `UpdateSecurityRolesResponse$outboundSchema` instead. */
    UpdateSecurityRolesResponse$.outboundSchema = UpdateSecurityRolesResponse$outboundSchema;
})(UpdateSecurityRolesResponse$ || (UpdateSecurityRolesResponse$ = {}));
export function updateSecurityRolesResponseToJSON(updateSecurityRolesResponse) {
    return JSON.stringify(UpdateSecurityRolesResponse$outboundSchema.parse(updateSecurityRolesResponse));
}
export function updateSecurityRolesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateSecurityRolesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateSecurityRolesResponse' from JSON`);
}
//# sourceMappingURL=updatesecurityroles.js.map