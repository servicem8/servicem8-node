/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const GetFormResponsesRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const GetFormResponsesRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFormResponsesRequest$;
(function (GetFormResponsesRequest$) {
    /** @deprecated use `GetFormResponsesRequest$inboundSchema` instead. */
    GetFormResponsesRequest$.inboundSchema = GetFormResponsesRequest$inboundSchema;
    /** @deprecated use `GetFormResponsesRequest$outboundSchema` instead. */
    GetFormResponsesRequest$.outboundSchema = GetFormResponsesRequest$outboundSchema;
})(GetFormResponsesRequest$ || (GetFormResponsesRequest$ = {}));
export function getFormResponsesRequestToJSON(getFormResponsesRequest) {
    return JSON.stringify(GetFormResponsesRequest$outboundSchema.parse(getFormResponsesRequest));
}
export function getFormResponsesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFormResponsesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFormResponsesRequest' from JSON`);
}
/** @internal */
export const GetFormResponsesResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    components.FormResponse$inboundSchema,
]);
/** @internal */
export const GetFormResponsesResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    components.FormResponse$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFormResponsesResponse$;
(function (GetFormResponsesResponse$) {
    /** @deprecated use `GetFormResponsesResponse$inboundSchema` instead. */
    GetFormResponsesResponse$.inboundSchema = GetFormResponsesResponse$inboundSchema;
    /** @deprecated use `GetFormResponsesResponse$outboundSchema` instead. */
    GetFormResponsesResponse$.outboundSchema = GetFormResponsesResponse$outboundSchema;
})(GetFormResponsesResponse$ || (GetFormResponsesResponse$ = {}));
export function getFormResponsesResponseToJSON(getFormResponsesResponse) {
    return JSON.stringify(GetFormResponsesResponse$outboundSchema.parse(getFormResponsesResponse));
}
export function getFormResponsesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFormResponsesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFormResponsesResponse' from JSON`);
}
//# sourceMappingURL=getformresponses.js.map