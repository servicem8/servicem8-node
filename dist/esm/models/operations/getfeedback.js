/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const GetFeedbackRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const GetFeedbackRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFeedbackRequest$;
(function (GetFeedbackRequest$) {
    /** @deprecated use `GetFeedbackRequest$inboundSchema` instead. */
    GetFeedbackRequest$.inboundSchema = GetFeedbackRequest$inboundSchema;
    /** @deprecated use `GetFeedbackRequest$outboundSchema` instead. */
    GetFeedbackRequest$.outboundSchema = GetFeedbackRequest$outboundSchema;
})(GetFeedbackRequest$ || (GetFeedbackRequest$ = {}));
export function getFeedbackRequestToJSON(getFeedbackRequest) {
    return JSON.stringify(GetFeedbackRequest$outboundSchema.parse(getFeedbackRequest));
}
export function getFeedbackRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFeedbackRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFeedbackRequest' from JSON`);
}
/** @internal */
export const GetFeedbackResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    components.Feedback$inboundSchema,
]);
/** @internal */
export const GetFeedbackResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    components.Feedback$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFeedbackResponse$;
(function (GetFeedbackResponse$) {
    /** @deprecated use `GetFeedbackResponse$inboundSchema` instead. */
    GetFeedbackResponse$.inboundSchema = GetFeedbackResponse$inboundSchema;
    /** @deprecated use `GetFeedbackResponse$outboundSchema` instead. */
    GetFeedbackResponse$.outboundSchema = GetFeedbackResponse$outboundSchema;
})(GetFeedbackResponse$ || (GetFeedbackResponse$ = {}));
export function getFeedbackResponseToJSON(getFeedbackResponse) {
    return JSON.stringify(GetFeedbackResponse$outboundSchema.parse(getFeedbackResponse));
}
export function getFeedbackResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFeedbackResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFeedbackResponse' from JSON`);
}
//# sourceMappingURL=getfeedback.js.map