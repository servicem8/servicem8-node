/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateJobAllocationsResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateJobAllocationsResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateJobAllocationsResponseResult$;
(function (CreateJobAllocationsResponseResult$) {
    /** @deprecated use `CreateJobAllocationsResponseResult$inboundSchema` instead. */
    CreateJobAllocationsResponseResult$.inboundSchema = CreateJobAllocationsResponseResult$inboundSchema;
    /** @deprecated use `CreateJobAllocationsResponseResult$outboundSchema` instead. */
    CreateJobAllocationsResponseResult$.outboundSchema = CreateJobAllocationsResponseResult$outboundSchema;
})(CreateJobAllocationsResponseResult$ || (CreateJobAllocationsResponseResult$ = {}));
export function createJobAllocationsResponseResultToJSON(createJobAllocationsResponseResult) {
    return JSON.stringify(CreateJobAllocationsResponseResult$outboundSchema.parse(createJobAllocationsResponseResult));
}
export function createJobAllocationsResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateJobAllocationsResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateJobAllocationsResponseResult' from JSON`);
}
/** @internal */
export const CreateJobAllocationsResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateJobAllocationsResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateJobAllocationsResponse$;
(function (CreateJobAllocationsResponse$) {
    /** @deprecated use `CreateJobAllocationsResponse$inboundSchema` instead. */
    CreateJobAllocationsResponse$.inboundSchema = CreateJobAllocationsResponse$inboundSchema;
    /** @deprecated use `CreateJobAllocationsResponse$outboundSchema` instead. */
    CreateJobAllocationsResponse$.outboundSchema = CreateJobAllocationsResponse$outboundSchema;
})(CreateJobAllocationsResponse$ || (CreateJobAllocationsResponse$ = {}));
export function createJobAllocationsResponseToJSON(createJobAllocationsResponse) {
    return JSON.stringify(CreateJobAllocationsResponse$outboundSchema.parse(createJobAllocationsResponse));
}
export function createJobAllocationsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateJobAllocationsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateJobAllocationsResponse' from JSON`);
}
//# sourceMappingURL=createjoballocations.js.map