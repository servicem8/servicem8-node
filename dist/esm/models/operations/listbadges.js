/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListBadgesResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.Badge$inboundSchema),
]);
/** @internal */
export const ListBadgesResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.Badge$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListBadgesResponse$;
(function (ListBadgesResponse$) {
    /** @deprecated use `ListBadgesResponse$inboundSchema` instead. */
    ListBadgesResponse$.inboundSchema = ListBadgesResponse$inboundSchema;
    /** @deprecated use `ListBadgesResponse$outboundSchema` instead. */
    ListBadgesResponse$.outboundSchema = ListBadgesResponse$outboundSchema;
})(ListBadgesResponse$ || (ListBadgesResponse$ = {}));
export function listBadgesResponseToJSON(listBadgesResponse) {
    return JSON.stringify(ListBadgesResponse$outboundSchema.parse(listBadgesResponse));
}
export function listBadgesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListBadgesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListBadgesResponse' from JSON`);
}
//# sourceMappingURL=listbadges.js.map