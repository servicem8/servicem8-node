/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateEmailTemplatesRequest$inboundSchema = z.object({
    uuid: z.string(),
    EmailTemplate: components.EmailTemplateInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "EmailTemplate": "emailTemplate",
    });
});
/** @internal */
export const UpdateEmailTemplatesRequest$outboundSchema = z.object({
    uuid: z.string(),
    emailTemplate: components.EmailTemplateInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        emailTemplate: "EmailTemplate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateEmailTemplatesRequest$;
(function (UpdateEmailTemplatesRequest$) {
    /** @deprecated use `UpdateEmailTemplatesRequest$inboundSchema` instead. */
    UpdateEmailTemplatesRequest$.inboundSchema = UpdateEmailTemplatesRequest$inboundSchema;
    /** @deprecated use `UpdateEmailTemplatesRequest$outboundSchema` instead. */
    UpdateEmailTemplatesRequest$.outboundSchema = UpdateEmailTemplatesRequest$outboundSchema;
})(UpdateEmailTemplatesRequest$ || (UpdateEmailTemplatesRequest$ = {}));
export function updateEmailTemplatesRequestToJSON(updateEmailTemplatesRequest) {
    return JSON.stringify(UpdateEmailTemplatesRequest$outboundSchema.parse(updateEmailTemplatesRequest));
}
export function updateEmailTemplatesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateEmailTemplatesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateEmailTemplatesRequest' from JSON`);
}
/** @internal */
export const UpdateEmailTemplatesResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateEmailTemplatesResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateEmailTemplatesResponse$;
(function (UpdateEmailTemplatesResponse$) {
    /** @deprecated use `UpdateEmailTemplatesResponse$inboundSchema` instead. */
    UpdateEmailTemplatesResponse$.inboundSchema = UpdateEmailTemplatesResponse$inboundSchema;
    /** @deprecated use `UpdateEmailTemplatesResponse$outboundSchema` instead. */
    UpdateEmailTemplatesResponse$.outboundSchema = UpdateEmailTemplatesResponse$outboundSchema;
})(UpdateEmailTemplatesResponse$ || (UpdateEmailTemplatesResponse$ = {}));
export function updateEmailTemplatesResponseToJSON(updateEmailTemplatesResponse) {
    return JSON.stringify(UpdateEmailTemplatesResponse$outboundSchema.parse(updateEmailTemplatesResponse));
}
export function updateEmailTemplatesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateEmailTemplatesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateEmailTemplatesResponse' from JSON`);
}
//# sourceMappingURL=updateemailtemplates.js.map