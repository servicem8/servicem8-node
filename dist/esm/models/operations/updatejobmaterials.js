/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateJobMaterialsRequest$inboundSchema = z.object({
    uuid: z.string(),
    JobMaterial: components.JobMaterialInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "JobMaterial": "jobMaterial",
    });
});
/** @internal */
export const UpdateJobMaterialsRequest$outboundSchema = z.object({
    uuid: z.string(),
    jobMaterial: components.JobMaterialInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        jobMaterial: "JobMaterial",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateJobMaterialsRequest$;
(function (UpdateJobMaterialsRequest$) {
    /** @deprecated use `UpdateJobMaterialsRequest$inboundSchema` instead. */
    UpdateJobMaterialsRequest$.inboundSchema = UpdateJobMaterialsRequest$inboundSchema;
    /** @deprecated use `UpdateJobMaterialsRequest$outboundSchema` instead. */
    UpdateJobMaterialsRequest$.outboundSchema = UpdateJobMaterialsRequest$outboundSchema;
})(UpdateJobMaterialsRequest$ || (UpdateJobMaterialsRequest$ = {}));
export function updateJobMaterialsRequestToJSON(updateJobMaterialsRequest) {
    return JSON.stringify(UpdateJobMaterialsRequest$outboundSchema.parse(updateJobMaterialsRequest));
}
export function updateJobMaterialsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateJobMaterialsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateJobMaterialsRequest' from JSON`);
}
/** @internal */
export const UpdateJobMaterialsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateJobMaterialsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateJobMaterialsResponse$;
(function (UpdateJobMaterialsResponse$) {
    /** @deprecated use `UpdateJobMaterialsResponse$inboundSchema` instead. */
    UpdateJobMaterialsResponse$.inboundSchema = UpdateJobMaterialsResponse$inboundSchema;
    /** @deprecated use `UpdateJobMaterialsResponse$outboundSchema` instead. */
    UpdateJobMaterialsResponse$.outboundSchema = UpdateJobMaterialsResponse$outboundSchema;
})(UpdateJobMaterialsResponse$ || (UpdateJobMaterialsResponse$ = {}));
export function updateJobMaterialsResponseToJSON(updateJobMaterialsResponse) {
    return JSON.stringify(UpdateJobMaterialsResponse$outboundSchema.parse(updateJobMaterialsResponse));
}
export function updateJobMaterialsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateJobMaterialsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateJobMaterialsResponse' from JSON`);
}
//# sourceMappingURL=updatejobmaterials.js.map