/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateJobQueuesResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateJobQueuesResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateJobQueuesResponseResult$;
(function (CreateJobQueuesResponseResult$) {
    /** @deprecated use `CreateJobQueuesResponseResult$inboundSchema` instead. */
    CreateJobQueuesResponseResult$.inboundSchema = CreateJobQueuesResponseResult$inboundSchema;
    /** @deprecated use `CreateJobQueuesResponseResult$outboundSchema` instead. */
    CreateJobQueuesResponseResult$.outboundSchema = CreateJobQueuesResponseResult$outboundSchema;
})(CreateJobQueuesResponseResult$ || (CreateJobQueuesResponseResult$ = {}));
export function createJobQueuesResponseResultToJSON(createJobQueuesResponseResult) {
    return JSON.stringify(CreateJobQueuesResponseResult$outboundSchema.parse(createJobQueuesResponseResult));
}
export function createJobQueuesResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateJobQueuesResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateJobQueuesResponseResult' from JSON`);
}
/** @internal */
export const CreateJobQueuesResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateJobQueuesResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateJobQueuesResponse$;
(function (CreateJobQueuesResponse$) {
    /** @deprecated use `CreateJobQueuesResponse$inboundSchema` instead. */
    CreateJobQueuesResponse$.inboundSchema = CreateJobQueuesResponse$inboundSchema;
    /** @deprecated use `CreateJobQueuesResponse$outboundSchema` instead. */
    CreateJobQueuesResponse$.outboundSchema = CreateJobQueuesResponse$outboundSchema;
})(CreateJobQueuesResponse$ || (CreateJobQueuesResponse$ = {}));
export function createJobQueuesResponseToJSON(createJobQueuesResponse) {
    return JSON.stringify(CreateJobQueuesResponse$outboundSchema.parse(createJobQueuesResponse));
}
export function createJobQueuesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateJobQueuesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateJobQueuesResponse' from JSON`);
}
//# sourceMappingURL=createjobqueues.js.map