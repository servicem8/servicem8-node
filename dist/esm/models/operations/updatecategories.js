/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateCategoriesRequest$inboundSchema = z.object({
    uuid: z.string(),
    Category: components.CategoryInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Category": "category",
    });
});
/** @internal */
export const UpdateCategoriesRequest$outboundSchema = z.object({
    uuid: z.string(),
    category: components.CategoryInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        category: "Category",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateCategoriesRequest$;
(function (UpdateCategoriesRequest$) {
    /** @deprecated use `UpdateCategoriesRequest$inboundSchema` instead. */
    UpdateCategoriesRequest$.inboundSchema = UpdateCategoriesRequest$inboundSchema;
    /** @deprecated use `UpdateCategoriesRequest$outboundSchema` instead. */
    UpdateCategoriesRequest$.outboundSchema = UpdateCategoriesRequest$outboundSchema;
})(UpdateCategoriesRequest$ || (UpdateCategoriesRequest$ = {}));
export function updateCategoriesRequestToJSON(updateCategoriesRequest) {
    return JSON.stringify(UpdateCategoriesRequest$outboundSchema.parse(updateCategoriesRequest));
}
export function updateCategoriesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateCategoriesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateCategoriesRequest' from JSON`);
}
/** @internal */
export const UpdateCategoriesResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateCategoriesResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateCategoriesResponse$;
(function (UpdateCategoriesResponse$) {
    /** @deprecated use `UpdateCategoriesResponse$inboundSchema` instead. */
    UpdateCategoriesResponse$.inboundSchema = UpdateCategoriesResponse$inboundSchema;
    /** @deprecated use `UpdateCategoriesResponse$outboundSchema` instead. */
    UpdateCategoriesResponse$.outboundSchema = UpdateCategoriesResponse$outboundSchema;
})(UpdateCategoriesResponse$ || (UpdateCategoriesResponse$ = {}));
export function updateCategoriesResponseToJSON(updateCategoriesResponse) {
    return JSON.stringify(UpdateCategoriesResponse$outboundSchema.parse(updateCategoriesResponse));
}
export function updateCategoriesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateCategoriesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateCategoriesResponse' from JSON`);
}
//# sourceMappingURL=updatecategories.js.map