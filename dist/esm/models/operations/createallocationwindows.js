/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateAllocationWindowsResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateAllocationWindowsResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateAllocationWindowsResponseResult$;
(function (CreateAllocationWindowsResponseResult$) {
    /** @deprecated use `CreateAllocationWindowsResponseResult$inboundSchema` instead. */
    CreateAllocationWindowsResponseResult$.inboundSchema = CreateAllocationWindowsResponseResult$inboundSchema;
    /** @deprecated use `CreateAllocationWindowsResponseResult$outboundSchema` instead. */
    CreateAllocationWindowsResponseResult$.outboundSchema = CreateAllocationWindowsResponseResult$outboundSchema;
})(CreateAllocationWindowsResponseResult$ || (CreateAllocationWindowsResponseResult$ = {}));
export function createAllocationWindowsResponseResultToJSON(createAllocationWindowsResponseResult) {
    return JSON.stringify(CreateAllocationWindowsResponseResult$outboundSchema.parse(createAllocationWindowsResponseResult));
}
export function createAllocationWindowsResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateAllocationWindowsResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateAllocationWindowsResponseResult' from JSON`);
}
/** @internal */
export const CreateAllocationWindowsResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateAllocationWindowsResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateAllocationWindowsResponse$;
(function (CreateAllocationWindowsResponse$) {
    /** @deprecated use `CreateAllocationWindowsResponse$inboundSchema` instead. */
    CreateAllocationWindowsResponse$.inboundSchema = CreateAllocationWindowsResponse$inboundSchema;
    /** @deprecated use `CreateAllocationWindowsResponse$outboundSchema` instead. */
    CreateAllocationWindowsResponse$.outboundSchema = CreateAllocationWindowsResponse$outboundSchema;
})(CreateAllocationWindowsResponse$ || (CreateAllocationWindowsResponse$ = {}));
export function createAllocationWindowsResponseToJSON(createAllocationWindowsResponse) {
    return JSON.stringify(CreateAllocationWindowsResponse$outboundSchema.parse(createAllocationWindowsResponse));
}
export function createAllocationWindowsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateAllocationWindowsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateAllocationWindowsResponse' from JSON`);
}
//# sourceMappingURL=createallocationwindows.js.map