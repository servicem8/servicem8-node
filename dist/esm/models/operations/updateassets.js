/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateAssetsRequest$inboundSchema = z.object({
    uuid: z.string(),
    Asset: components.AssetInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Asset": "asset",
    });
});
/** @internal */
export const UpdateAssetsRequest$outboundSchema = z.object({
    uuid: z.string(),
    asset: components.AssetInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        asset: "Asset",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateAssetsRequest$;
(function (UpdateAssetsRequest$) {
    /** @deprecated use `UpdateAssetsRequest$inboundSchema` instead. */
    UpdateAssetsRequest$.inboundSchema = UpdateAssetsRequest$inboundSchema;
    /** @deprecated use `UpdateAssetsRequest$outboundSchema` instead. */
    UpdateAssetsRequest$.outboundSchema = UpdateAssetsRequest$outboundSchema;
})(UpdateAssetsRequest$ || (UpdateAssetsRequest$ = {}));
export function updateAssetsRequestToJSON(updateAssetsRequest) {
    return JSON.stringify(UpdateAssetsRequest$outboundSchema.parse(updateAssetsRequest));
}
export function updateAssetsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateAssetsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateAssetsRequest' from JSON`);
}
/** @internal */
export const UpdateAssetsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateAssetsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateAssetsResponse$;
(function (UpdateAssetsResponse$) {
    /** @deprecated use `UpdateAssetsResponse$inboundSchema` instead. */
    UpdateAssetsResponse$.inboundSchema = UpdateAssetsResponse$inboundSchema;
    /** @deprecated use `UpdateAssetsResponse$outboundSchema` instead. */
    UpdateAssetsResponse$.outboundSchema = UpdateAssetsResponse$outboundSchema;
})(UpdateAssetsResponse$ || (UpdateAssetsResponse$ = {}));
export function updateAssetsResponseToJSON(updateAssetsResponse) {
    return JSON.stringify(UpdateAssetsResponse$outboundSchema.parse(updateAssetsResponse));
}
export function updateAssetsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateAssetsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateAssetsResponse' from JSON`);
}
//# sourceMappingURL=updateassets.js.map