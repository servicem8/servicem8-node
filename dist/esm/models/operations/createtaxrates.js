/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateTaxRatesResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateTaxRatesResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateTaxRatesResponseResult$;
(function (CreateTaxRatesResponseResult$) {
    /** @deprecated use `CreateTaxRatesResponseResult$inboundSchema` instead. */
    CreateTaxRatesResponseResult$.inboundSchema = CreateTaxRatesResponseResult$inboundSchema;
    /** @deprecated use `CreateTaxRatesResponseResult$outboundSchema` instead. */
    CreateTaxRatesResponseResult$.outboundSchema = CreateTaxRatesResponseResult$outboundSchema;
})(CreateTaxRatesResponseResult$ || (CreateTaxRatesResponseResult$ = {}));
export function createTaxRatesResponseResultToJSON(createTaxRatesResponseResult) {
    return JSON.stringify(CreateTaxRatesResponseResult$outboundSchema.parse(createTaxRatesResponseResult));
}
export function createTaxRatesResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateTaxRatesResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateTaxRatesResponseResult' from JSON`);
}
/** @internal */
export const CreateTaxRatesResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateTaxRatesResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateTaxRatesResponse$;
(function (CreateTaxRatesResponse$) {
    /** @deprecated use `CreateTaxRatesResponse$inboundSchema` instead. */
    CreateTaxRatesResponse$.inboundSchema = CreateTaxRatesResponse$inboundSchema;
    /** @deprecated use `CreateTaxRatesResponse$outboundSchema` instead. */
    CreateTaxRatesResponse$.outboundSchema = CreateTaxRatesResponse$outboundSchema;
})(CreateTaxRatesResponse$ || (CreateTaxRatesResponse$ = {}));
export function createTaxRatesResponseToJSON(createTaxRatesResponse) {
    return JSON.stringify(CreateTaxRatesResponse$outboundSchema.parse(createTaxRatesResponse));
}
export function createTaxRatesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateTaxRatesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateTaxRatesResponse' from JSON`);
}
//# sourceMappingURL=createtaxrates.js.map