/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListFormsResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.Form$inboundSchema),
]);
/** @internal */
export const ListFormsResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.Form$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListFormsResponse$;
(function (ListFormsResponse$) {
    /** @deprecated use `ListFormsResponse$inboundSchema` instead. */
    ListFormsResponse$.inboundSchema = ListFormsResponse$inboundSchema;
    /** @deprecated use `ListFormsResponse$outboundSchema` instead. */
    ListFormsResponse$.outboundSchema = ListFormsResponse$outboundSchema;
})(ListFormsResponse$ || (ListFormsResponse$ = {}));
export function listFormsResponseToJSON(listFormsResponse) {
    return JSON.stringify(ListFormsResponse$outboundSchema.parse(listFormsResponse));
}
export function listFormsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListFormsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListFormsResponse' from JSON`);
}
//# sourceMappingURL=listforms.js.map