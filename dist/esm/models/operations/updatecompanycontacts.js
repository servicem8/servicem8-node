/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateCompanyContactsRequest$inboundSchema = z.object({
    uuid: z.string(),
    CompanyContact: components.CompanyContactInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "CompanyContact": "companyContact",
    });
});
/** @internal */
export const UpdateCompanyContactsRequest$outboundSchema = z.object({
    uuid: z.string(),
    companyContact: components.CompanyContactInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        companyContact: "CompanyContact",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateCompanyContactsRequest$;
(function (UpdateCompanyContactsRequest$) {
    /** @deprecated use `UpdateCompanyContactsRequest$inboundSchema` instead. */
    UpdateCompanyContactsRequest$.inboundSchema = UpdateCompanyContactsRequest$inboundSchema;
    /** @deprecated use `UpdateCompanyContactsRequest$outboundSchema` instead. */
    UpdateCompanyContactsRequest$.outboundSchema = UpdateCompanyContactsRequest$outboundSchema;
})(UpdateCompanyContactsRequest$ || (UpdateCompanyContactsRequest$ = {}));
export function updateCompanyContactsRequestToJSON(updateCompanyContactsRequest) {
    return JSON.stringify(UpdateCompanyContactsRequest$outboundSchema.parse(updateCompanyContactsRequest));
}
export function updateCompanyContactsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateCompanyContactsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateCompanyContactsRequest' from JSON`);
}
/** @internal */
export const UpdateCompanyContactsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateCompanyContactsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateCompanyContactsResponse$;
(function (UpdateCompanyContactsResponse$) {
    /** @deprecated use `UpdateCompanyContactsResponse$inboundSchema` instead. */
    UpdateCompanyContactsResponse$.inboundSchema = UpdateCompanyContactsResponse$inboundSchema;
    /** @deprecated use `UpdateCompanyContactsResponse$outboundSchema` instead. */
    UpdateCompanyContactsResponse$.outboundSchema = UpdateCompanyContactsResponse$outboundSchema;
})(UpdateCompanyContactsResponse$ || (UpdateCompanyContactsResponse$ = {}));
export function updateCompanyContactsResponseToJSON(updateCompanyContactsResponse) {
    return JSON.stringify(UpdateCompanyContactsResponse$outboundSchema.parse(updateCompanyContactsResponse));
}
export function updateCompanyContactsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateCompanyContactsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateCompanyContactsResponse' from JSON`);
}
//# sourceMappingURL=updatecompanycontacts.js.map