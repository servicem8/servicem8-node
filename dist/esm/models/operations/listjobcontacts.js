/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListJobContactsResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.JobContact$inboundSchema),
]);
/** @internal */
export const ListJobContactsResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.JobContact$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListJobContactsResponse$;
(function (ListJobContactsResponse$) {
    /** @deprecated use `ListJobContactsResponse$inboundSchema` instead. */
    ListJobContactsResponse$.inboundSchema = ListJobContactsResponse$inboundSchema;
    /** @deprecated use `ListJobContactsResponse$outboundSchema` instead. */
    ListJobContactsResponse$.outboundSchema = ListJobContactsResponse$outboundSchema;
})(ListJobContactsResponse$ || (ListJobContactsResponse$ = {}));
export function listJobContactsResponseToJSON(listJobContactsResponse) {
    return JSON.stringify(ListJobContactsResponse$outboundSchema.parse(listJobContactsResponse));
}
export function listJobContactsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListJobContactsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListJobContactsResponse' from JSON`);
}
//# sourceMappingURL=listjobcontacts.js.map