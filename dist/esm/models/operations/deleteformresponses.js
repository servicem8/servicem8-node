/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const DeleteFormResponsesRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const DeleteFormResponsesRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteFormResponsesRequest$;
(function (DeleteFormResponsesRequest$) {
    /** @deprecated use `DeleteFormResponsesRequest$inboundSchema` instead. */
    DeleteFormResponsesRequest$.inboundSchema = DeleteFormResponsesRequest$inboundSchema;
    /** @deprecated use `DeleteFormResponsesRequest$outboundSchema` instead. */
    DeleteFormResponsesRequest$.outboundSchema = DeleteFormResponsesRequest$outboundSchema;
})(DeleteFormResponsesRequest$ || (DeleteFormResponsesRequest$ = {}));
export function deleteFormResponsesRequestToJSON(deleteFormResponsesRequest) {
    return JSON.stringify(DeleteFormResponsesRequest$outboundSchema.parse(deleteFormResponsesRequest));
}
export function deleteFormResponsesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteFormResponsesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteFormResponsesRequest' from JSON`);
}
/** @internal */
export const DeleteFormResponsesResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const DeleteFormResponsesResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteFormResponsesResponse$;
(function (DeleteFormResponsesResponse$) {
    /** @deprecated use `DeleteFormResponsesResponse$inboundSchema` instead. */
    DeleteFormResponsesResponse$.inboundSchema = DeleteFormResponsesResponse$inboundSchema;
    /** @deprecated use `DeleteFormResponsesResponse$outboundSchema` instead. */
    DeleteFormResponsesResponse$.outboundSchema = DeleteFormResponsesResponse$outboundSchema;
})(DeleteFormResponsesResponse$ || (DeleteFormResponsesResponse$ = {}));
export function deleteFormResponsesResponseToJSON(deleteFormResponsesResponse) {
    return JSON.stringify(DeleteFormResponsesResponse$outboundSchema.parse(deleteFormResponsesResponse));
}
export function deleteFormResponsesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteFormResponsesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteFormResponsesResponse' from JSON`);
}
//# sourceMappingURL=deleteformresponses.js.map