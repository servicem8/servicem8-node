/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListFormResponsesResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.FormResponse$inboundSchema),
]);
/** @internal */
export const ListFormResponsesResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.FormResponse$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListFormResponsesResponse$;
(function (ListFormResponsesResponse$) {
    /** @deprecated use `ListFormResponsesResponse$inboundSchema` instead. */
    ListFormResponsesResponse$.inboundSchema = ListFormResponsesResponse$inboundSchema;
    /** @deprecated use `ListFormResponsesResponse$outboundSchema` instead. */
    ListFormResponsesResponse$.outboundSchema = ListFormResponsesResponse$outboundSchema;
})(ListFormResponsesResponse$ || (ListFormResponsesResponse$ = {}));
export function listFormResponsesResponseToJSON(listFormResponsesResponse) {
    return JSON.stringify(ListFormResponsesResponse$outboundSchema.parse(listFormResponsesResponse));
}
export function listFormResponsesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListFormResponsesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListFormResponsesResponse' from JSON`);
}
//# sourceMappingURL=listformresponses.js.map