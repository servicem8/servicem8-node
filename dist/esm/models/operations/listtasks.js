/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListTasksResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.Task$inboundSchema),
]);
/** @internal */
export const ListTasksResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.Task$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListTasksResponse$;
(function (ListTasksResponse$) {
    /** @deprecated use `ListTasksResponse$inboundSchema` instead. */
    ListTasksResponse$.inboundSchema = ListTasksResponse$inboundSchema;
    /** @deprecated use `ListTasksResponse$outboundSchema` instead. */
    ListTasksResponse$.outboundSchema = ListTasksResponse$outboundSchema;
})(ListTasksResponse$ || (ListTasksResponse$ = {}));
export function listTasksResponseToJSON(listTasksResponse) {
    return JSON.stringify(ListTasksResponse$outboundSchema.parse(listTasksResponse));
}
export function listTasksResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListTasksResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListTasksResponse' from JSON`);
}
//# sourceMappingURL=listtasks.js.map