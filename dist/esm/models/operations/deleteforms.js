/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const DeleteFormsRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const DeleteFormsRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteFormsRequest$;
(function (DeleteFormsRequest$) {
    /** @deprecated use `DeleteFormsRequest$inboundSchema` instead. */
    DeleteFormsRequest$.inboundSchema = DeleteFormsRequest$inboundSchema;
    /** @deprecated use `DeleteFormsRequest$outboundSchema` instead. */
    DeleteFormsRequest$.outboundSchema = DeleteFormsRequest$outboundSchema;
})(DeleteFormsRequest$ || (DeleteFormsRequest$ = {}));
export function deleteFormsRequestToJSON(deleteFormsRequest) {
    return JSON.stringify(DeleteFormsRequest$outboundSchema.parse(deleteFormsRequest));
}
export function deleteFormsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteFormsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteFormsRequest' from JSON`);
}
/** @internal */
export const DeleteFormsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const DeleteFormsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteFormsResponse$;
(function (DeleteFormsResponse$) {
    /** @deprecated use `DeleteFormsResponse$inboundSchema` instead. */
    DeleteFormsResponse$.inboundSchema = DeleteFormsResponse$inboundSchema;
    /** @deprecated use `DeleteFormsResponse$outboundSchema` instead. */
    DeleteFormsResponse$.outboundSchema = DeleteFormsResponse$outboundSchema;
})(DeleteFormsResponse$ || (DeleteFormsResponse$ = {}));
export function deleteFormsResponseToJSON(deleteFormsResponse) {
    return JSON.stringify(DeleteFormsResponse$outboundSchema.parse(deleteFormsResponse));
}
export function deleteFormsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteFormsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteFormsResponse' from JSON`);
}
//# sourceMappingURL=deleteforms.js.map