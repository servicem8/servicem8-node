/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateAssetTypeFieldsResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateAssetTypeFieldsResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateAssetTypeFieldsResponseResult$;
(function (CreateAssetTypeFieldsResponseResult$) {
    /** @deprecated use `CreateAssetTypeFieldsResponseResult$inboundSchema` instead. */
    CreateAssetTypeFieldsResponseResult$.inboundSchema = CreateAssetTypeFieldsResponseResult$inboundSchema;
    /** @deprecated use `CreateAssetTypeFieldsResponseResult$outboundSchema` instead. */
    CreateAssetTypeFieldsResponseResult$.outboundSchema = CreateAssetTypeFieldsResponseResult$outboundSchema;
})(CreateAssetTypeFieldsResponseResult$ || (CreateAssetTypeFieldsResponseResult$ = {}));
export function createAssetTypeFieldsResponseResultToJSON(createAssetTypeFieldsResponseResult) {
    return JSON.stringify(CreateAssetTypeFieldsResponseResult$outboundSchema.parse(createAssetTypeFieldsResponseResult));
}
export function createAssetTypeFieldsResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateAssetTypeFieldsResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateAssetTypeFieldsResponseResult' from JSON`);
}
/** @internal */
export const CreateAssetTypeFieldsResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateAssetTypeFieldsResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateAssetTypeFieldsResponse$;
(function (CreateAssetTypeFieldsResponse$) {
    /** @deprecated use `CreateAssetTypeFieldsResponse$inboundSchema` instead. */
    CreateAssetTypeFieldsResponse$.inboundSchema = CreateAssetTypeFieldsResponse$inboundSchema;
    /** @deprecated use `CreateAssetTypeFieldsResponse$outboundSchema` instead. */
    CreateAssetTypeFieldsResponse$.outboundSchema = CreateAssetTypeFieldsResponse$outboundSchema;
})(CreateAssetTypeFieldsResponse$ || (CreateAssetTypeFieldsResponse$ = {}));
export function createAssetTypeFieldsResponseToJSON(createAssetTypeFieldsResponse) {
    return JSON.stringify(CreateAssetTypeFieldsResponse$outboundSchema.parse(createAssetTypeFieldsResponse));
}
export function createAssetTypeFieldsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateAssetTypeFieldsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateAssetTypeFieldsResponse' from JSON`);
}
//# sourceMappingURL=createassettypefields.js.map