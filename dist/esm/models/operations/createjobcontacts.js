/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateJobContactsResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateJobContactsResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateJobContactsResponseResult$;
(function (CreateJobContactsResponseResult$) {
    /** @deprecated use `CreateJobContactsResponseResult$inboundSchema` instead. */
    CreateJobContactsResponseResult$.inboundSchema = CreateJobContactsResponseResult$inboundSchema;
    /** @deprecated use `CreateJobContactsResponseResult$outboundSchema` instead. */
    CreateJobContactsResponseResult$.outboundSchema = CreateJobContactsResponseResult$outboundSchema;
})(CreateJobContactsResponseResult$ || (CreateJobContactsResponseResult$ = {}));
export function createJobContactsResponseResultToJSON(createJobContactsResponseResult) {
    return JSON.stringify(CreateJobContactsResponseResult$outboundSchema.parse(createJobContactsResponseResult));
}
export function createJobContactsResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateJobContactsResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateJobContactsResponseResult' from JSON`);
}
/** @internal */
export const CreateJobContactsResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateJobContactsResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateJobContactsResponse$;
(function (CreateJobContactsResponse$) {
    /** @deprecated use `CreateJobContactsResponse$inboundSchema` instead. */
    CreateJobContactsResponse$.inboundSchema = CreateJobContactsResponse$inboundSchema;
    /** @deprecated use `CreateJobContactsResponse$outboundSchema` instead. */
    CreateJobContactsResponse$.outboundSchema = CreateJobContactsResponse$outboundSchema;
})(CreateJobContactsResponse$ || (CreateJobContactsResponse$ = {}));
export function createJobContactsResponseToJSON(createJobContactsResponse) {
    return JSON.stringify(CreateJobContactsResponse$outboundSchema.parse(createJobContactsResponse));
}
export function createJobContactsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateJobContactsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateJobContactsResponse' from JSON`);
}
//# sourceMappingURL=createjobcontacts.js.map