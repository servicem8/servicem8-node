/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListVendorsResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.Vendor$inboundSchema),
]);
/** @internal */
export const ListVendorsResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.Vendor$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListVendorsResponse$;
(function (ListVendorsResponse$) {
    /** @deprecated use `ListVendorsResponse$inboundSchema` instead. */
    ListVendorsResponse$.inboundSchema = ListVendorsResponse$inboundSchema;
    /** @deprecated use `ListVendorsResponse$outboundSchema` instead. */
    ListVendorsResponse$.outboundSchema = ListVendorsResponse$outboundSchema;
})(ListVendorsResponse$ || (ListVendorsResponse$ = {}));
export function listVendorsResponseToJSON(listVendorsResponse) {
    return JSON.stringify(ListVendorsResponse$outboundSchema.parse(listVendorsResponse));
}
export function listVendorsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListVendorsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListVendorsResponse' from JSON`);
}
//# sourceMappingURL=listvendors.js.map