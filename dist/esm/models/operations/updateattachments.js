/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateAttachmentsRequest$inboundSchema = z.object({
    uuid: z.string(),
    Attachment: components.AttachmentInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Attachment": "attachment",
    });
});
/** @internal */
export const UpdateAttachmentsRequest$outboundSchema = z.object({
    uuid: z.string(),
    attachment: components.AttachmentInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        attachment: "Attachment",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateAttachmentsRequest$;
(function (UpdateAttachmentsRequest$) {
    /** @deprecated use `UpdateAttachmentsRequest$inboundSchema` instead. */
    UpdateAttachmentsRequest$.inboundSchema = UpdateAttachmentsRequest$inboundSchema;
    /** @deprecated use `UpdateAttachmentsRequest$outboundSchema` instead. */
    UpdateAttachmentsRequest$.outboundSchema = UpdateAttachmentsRequest$outboundSchema;
})(UpdateAttachmentsRequest$ || (UpdateAttachmentsRequest$ = {}));
export function updateAttachmentsRequestToJSON(updateAttachmentsRequest) {
    return JSON.stringify(UpdateAttachmentsRequest$outboundSchema.parse(updateAttachmentsRequest));
}
export function updateAttachmentsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateAttachmentsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateAttachmentsRequest' from JSON`);
}
/** @internal */
export const UpdateAttachmentsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateAttachmentsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateAttachmentsResponse$;
(function (UpdateAttachmentsResponse$) {
    /** @deprecated use `UpdateAttachmentsResponse$inboundSchema` instead. */
    UpdateAttachmentsResponse$.inboundSchema = UpdateAttachmentsResponse$inboundSchema;
    /** @deprecated use `UpdateAttachmentsResponse$outboundSchema` instead. */
    UpdateAttachmentsResponse$.outboundSchema = UpdateAttachmentsResponse$outboundSchema;
})(UpdateAttachmentsResponse$ || (UpdateAttachmentsResponse$ = {}));
export function updateAttachmentsResponseToJSON(updateAttachmentsResponse) {
    return JSON.stringify(UpdateAttachmentsResponse$outboundSchema.parse(updateAttachmentsResponse));
}
export function updateAttachmentsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateAttachmentsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateAttachmentsResponse' from JSON`);
}
//# sourceMappingURL=updateattachments.js.map