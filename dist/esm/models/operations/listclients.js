/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListClientsResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.Company$inboundSchema),
]);
/** @internal */
export const ListClientsResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.Company$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListClientsResponse$;
(function (ListClientsResponse$) {
    /** @deprecated use `ListClientsResponse$inboundSchema` instead. */
    ListClientsResponse$.inboundSchema = ListClientsResponse$inboundSchema;
    /** @deprecated use `ListClientsResponse$outboundSchema` instead. */
    ListClientsResponse$.outboundSchema = ListClientsResponse$outboundSchema;
})(ListClientsResponse$ || (ListClientsResponse$ = {}));
export function listClientsResponseToJSON(listClientsResponse) {
    return JSON.stringify(ListClientsResponse$outboundSchema.parse(listClientsResponse));
}
export function listClientsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListClientsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListClientsResponse' from JSON`);
}
//# sourceMappingURL=listclients.js.map