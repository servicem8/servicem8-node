/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateBundlesRequest$inboundSchema = z.object({
    uuid: z.string(),
    MaterialBundle: components.MaterialBundleInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "MaterialBundle": "materialBundle",
    });
});
/** @internal */
export const UpdateBundlesRequest$outboundSchema = z.object({
    uuid: z.string(),
    materialBundle: components.MaterialBundleInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        materialBundle: "MaterialBundle",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateBundlesRequest$;
(function (UpdateBundlesRequest$) {
    /** @deprecated use `UpdateBundlesRequest$inboundSchema` instead. */
    UpdateBundlesRequest$.inboundSchema = UpdateBundlesRequest$inboundSchema;
    /** @deprecated use `UpdateBundlesRequest$outboundSchema` instead. */
    UpdateBundlesRequest$.outboundSchema = UpdateBundlesRequest$outboundSchema;
})(UpdateBundlesRequest$ || (UpdateBundlesRequest$ = {}));
export function updateBundlesRequestToJSON(updateBundlesRequest) {
    return JSON.stringify(UpdateBundlesRequest$outboundSchema.parse(updateBundlesRequest));
}
export function updateBundlesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateBundlesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateBundlesRequest' from JSON`);
}
/** @internal */
export const UpdateBundlesResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateBundlesResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateBundlesResponse$;
(function (UpdateBundlesResponse$) {
    /** @deprecated use `UpdateBundlesResponse$inboundSchema` instead. */
    UpdateBundlesResponse$.inboundSchema = UpdateBundlesResponse$inboundSchema;
    /** @deprecated use `UpdateBundlesResponse$outboundSchema` instead. */
    UpdateBundlesResponse$.outboundSchema = UpdateBundlesResponse$outboundSchema;
})(UpdateBundlesResponse$ || (UpdateBundlesResponse$ = {}));
export function updateBundlesResponseToJSON(updateBundlesResponse) {
    return JSON.stringify(UpdateBundlesResponse$outboundSchema.parse(updateBundlesResponse));
}
export function updateBundlesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateBundlesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateBundlesResponse' from JSON`);
}
//# sourceMappingURL=updatebundles.js.map