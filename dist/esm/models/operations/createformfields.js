/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateFormFieldsResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateFormFieldsResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateFormFieldsResponseResult$;
(function (CreateFormFieldsResponseResult$) {
    /** @deprecated use `CreateFormFieldsResponseResult$inboundSchema` instead. */
    CreateFormFieldsResponseResult$.inboundSchema = CreateFormFieldsResponseResult$inboundSchema;
    /** @deprecated use `CreateFormFieldsResponseResult$outboundSchema` instead. */
    CreateFormFieldsResponseResult$.outboundSchema = CreateFormFieldsResponseResult$outboundSchema;
})(CreateFormFieldsResponseResult$ || (CreateFormFieldsResponseResult$ = {}));
export function createFormFieldsResponseResultToJSON(createFormFieldsResponseResult) {
    return JSON.stringify(CreateFormFieldsResponseResult$outboundSchema.parse(createFormFieldsResponseResult));
}
export function createFormFieldsResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateFormFieldsResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateFormFieldsResponseResult' from JSON`);
}
/** @internal */
export const CreateFormFieldsResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateFormFieldsResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateFormFieldsResponse$;
(function (CreateFormFieldsResponse$) {
    /** @deprecated use `CreateFormFieldsResponse$inboundSchema` instead. */
    CreateFormFieldsResponse$.inboundSchema = CreateFormFieldsResponse$inboundSchema;
    /** @deprecated use `CreateFormFieldsResponse$outboundSchema` instead. */
    CreateFormFieldsResponse$.outboundSchema = CreateFormFieldsResponse$outboundSchema;
})(CreateFormFieldsResponse$ || (CreateFormFieldsResponse$ = {}));
export function createFormFieldsResponseToJSON(createFormFieldsResponse) {
    return JSON.stringify(CreateFormFieldsResponse$outboundSchema.parse(createFormFieldsResponse));
}
export function createFormFieldsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateFormFieldsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateFormFieldsResponse' from JSON`);
}
//# sourceMappingURL=createformfields.js.map