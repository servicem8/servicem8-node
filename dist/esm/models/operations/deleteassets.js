/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const DeleteAssetsRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const DeleteAssetsRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteAssetsRequest$;
(function (DeleteAssetsRequest$) {
    /** @deprecated use `DeleteAssetsRequest$inboundSchema` instead. */
    DeleteAssetsRequest$.inboundSchema = DeleteAssetsRequest$inboundSchema;
    /** @deprecated use `DeleteAssetsRequest$outboundSchema` instead. */
    DeleteAssetsRequest$.outboundSchema = DeleteAssetsRequest$outboundSchema;
})(DeleteAssetsRequest$ || (DeleteAssetsRequest$ = {}));
export function deleteAssetsRequestToJSON(deleteAssetsRequest) {
    return JSON.stringify(DeleteAssetsRequest$outboundSchema.parse(deleteAssetsRequest));
}
export function deleteAssetsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteAssetsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteAssetsRequest' from JSON`);
}
/** @internal */
export const DeleteAssetsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const DeleteAssetsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteAssetsResponse$;
(function (DeleteAssetsResponse$) {
    /** @deprecated use `DeleteAssetsResponse$inboundSchema` instead. */
    DeleteAssetsResponse$.inboundSchema = DeleteAssetsResponse$inboundSchema;
    /** @deprecated use `DeleteAssetsResponse$outboundSchema` instead. */
    DeleteAssetsResponse$.outboundSchema = DeleteAssetsResponse$outboundSchema;
})(DeleteAssetsResponse$ || (DeleteAssetsResponse$ = {}));
export function deleteAssetsResponseToJSON(deleteAssetsResponse) {
    return JSON.stringify(DeleteAssetsResponse$outboundSchema.parse(deleteAssetsResponse));
}
export function deleteAssetsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteAssetsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteAssetsResponse' from JSON`);
}
//# sourceMappingURL=deleteassets.js.map