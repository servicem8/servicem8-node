/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateJobActivitiesResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateJobActivitiesResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateJobActivitiesResponseResult$;
(function (CreateJobActivitiesResponseResult$) {
    /** @deprecated use `CreateJobActivitiesResponseResult$inboundSchema` instead. */
    CreateJobActivitiesResponseResult$.inboundSchema = CreateJobActivitiesResponseResult$inboundSchema;
    /** @deprecated use `CreateJobActivitiesResponseResult$outboundSchema` instead. */
    CreateJobActivitiesResponseResult$.outboundSchema = CreateJobActivitiesResponseResult$outboundSchema;
})(CreateJobActivitiesResponseResult$ || (CreateJobActivitiesResponseResult$ = {}));
export function createJobActivitiesResponseResultToJSON(createJobActivitiesResponseResult) {
    return JSON.stringify(CreateJobActivitiesResponseResult$outboundSchema.parse(createJobActivitiesResponseResult));
}
export function createJobActivitiesResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateJobActivitiesResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateJobActivitiesResponseResult' from JSON`);
}
/** @internal */
export const CreateJobActivitiesResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateJobActivitiesResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateJobActivitiesResponse$;
(function (CreateJobActivitiesResponse$) {
    /** @deprecated use `CreateJobActivitiesResponse$inboundSchema` instead. */
    CreateJobActivitiesResponse$.inboundSchema = CreateJobActivitiesResponse$inboundSchema;
    /** @deprecated use `CreateJobActivitiesResponse$outboundSchema` instead. */
    CreateJobActivitiesResponse$.outboundSchema = CreateJobActivitiesResponse$outboundSchema;
})(CreateJobActivitiesResponse$ || (CreateJobActivitiesResponse$ = {}));
export function createJobActivitiesResponseToJSON(createJobActivitiesResponse) {
    return JSON.stringify(CreateJobActivitiesResponse$outboundSchema.parse(createJobActivitiesResponse));
}
export function createJobActivitiesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateJobActivitiesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateJobActivitiesResponse' from JSON`);
}
//# sourceMappingURL=createjobactivities.js.map