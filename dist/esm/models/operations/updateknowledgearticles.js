/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateKnowledgeArticlesRequest$inboundSchema = z.object({
    uuid: z.string(),
    KnowledgeArticle: components.KnowledgeArticleInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "KnowledgeArticle": "knowledgeArticle",
    });
});
/** @internal */
export const UpdateKnowledgeArticlesRequest$outboundSchema = z.object({
    uuid: z.string(),
    knowledgeArticle: components.KnowledgeArticleInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        knowledgeArticle: "KnowledgeArticle",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateKnowledgeArticlesRequest$;
(function (UpdateKnowledgeArticlesRequest$) {
    /** @deprecated use `UpdateKnowledgeArticlesRequest$inboundSchema` instead. */
    UpdateKnowledgeArticlesRequest$.inboundSchema = UpdateKnowledgeArticlesRequest$inboundSchema;
    /** @deprecated use `UpdateKnowledgeArticlesRequest$outboundSchema` instead. */
    UpdateKnowledgeArticlesRequest$.outboundSchema = UpdateKnowledgeArticlesRequest$outboundSchema;
})(UpdateKnowledgeArticlesRequest$ || (UpdateKnowledgeArticlesRequest$ = {}));
export function updateKnowledgeArticlesRequestToJSON(updateKnowledgeArticlesRequest) {
    return JSON.stringify(UpdateKnowledgeArticlesRequest$outboundSchema.parse(updateKnowledgeArticlesRequest));
}
export function updateKnowledgeArticlesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateKnowledgeArticlesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateKnowledgeArticlesRequest' from JSON`);
}
/** @internal */
export const UpdateKnowledgeArticlesResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateKnowledgeArticlesResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateKnowledgeArticlesResponse$;
(function (UpdateKnowledgeArticlesResponse$) {
    /** @deprecated use `UpdateKnowledgeArticlesResponse$inboundSchema` instead. */
    UpdateKnowledgeArticlesResponse$.inboundSchema = UpdateKnowledgeArticlesResponse$inboundSchema;
    /** @deprecated use `UpdateKnowledgeArticlesResponse$outboundSchema` instead. */
    UpdateKnowledgeArticlesResponse$.outboundSchema = UpdateKnowledgeArticlesResponse$outboundSchema;
})(UpdateKnowledgeArticlesResponse$ || (UpdateKnowledgeArticlesResponse$ = {}));
export function updateKnowledgeArticlesResponseToJSON(updateKnowledgeArticlesResponse) {
    return JSON.stringify(UpdateKnowledgeArticlesResponse$outboundSchema.parse(updateKnowledgeArticlesResponse));
}
export function updateKnowledgeArticlesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateKnowledgeArticlesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateKnowledgeArticlesResponse' from JSON`);
}
//# sourceMappingURL=updateknowledgearticles.js.map