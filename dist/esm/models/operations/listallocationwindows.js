/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListAllocationWindowsResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.AllocationWindow$inboundSchema),
]);
/** @internal */
export const ListAllocationWindowsResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.AllocationWindow$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAllocationWindowsResponse$;
(function (ListAllocationWindowsResponse$) {
    /** @deprecated use `ListAllocationWindowsResponse$inboundSchema` instead. */
    ListAllocationWindowsResponse$.inboundSchema = ListAllocationWindowsResponse$inboundSchema;
    /** @deprecated use `ListAllocationWindowsResponse$outboundSchema` instead. */
    ListAllocationWindowsResponse$.outboundSchema = ListAllocationWindowsResponse$outboundSchema;
})(ListAllocationWindowsResponse$ || (ListAllocationWindowsResponse$ = {}));
export function listAllocationWindowsResponseToJSON(listAllocationWindowsResponse) {
    return JSON.stringify(ListAllocationWindowsResponse$outboundSchema.parse(listAllocationWindowsResponse));
}
export function listAllocationWindowsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAllocationWindowsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAllocationWindowsResponse' from JSON`);
}
//# sourceMappingURL=listallocationwindows.js.map