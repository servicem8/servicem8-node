/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListLocationsResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.Location$inboundSchema),
]);
/** @internal */
export const ListLocationsResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.Location$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListLocationsResponse$;
(function (ListLocationsResponse$) {
    /** @deprecated use `ListLocationsResponse$inboundSchema` instead. */
    ListLocationsResponse$.inboundSchema = ListLocationsResponse$inboundSchema;
    /** @deprecated use `ListLocationsResponse$outboundSchema` instead. */
    ListLocationsResponse$.outboundSchema = ListLocationsResponse$outboundSchema;
})(ListLocationsResponse$ || (ListLocationsResponse$ = {}));
export function listLocationsResponseToJSON(listLocationsResponse) {
    return JSON.stringify(ListLocationsResponse$outboundSchema.parse(listLocationsResponse));
}
export function listLocationsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListLocationsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListLocationsResponse' from JSON`);
}
//# sourceMappingURL=listlocations.js.map