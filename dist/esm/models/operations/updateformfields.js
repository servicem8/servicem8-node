/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateFormFieldsRequest$inboundSchema = z.object({
    uuid: z.string(),
    FormField: components.FormFieldInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "FormField": "formField",
    });
});
/** @internal */
export const UpdateFormFieldsRequest$outboundSchema = z.object({
    uuid: z.string(),
    formField: components.FormFieldInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        formField: "FormField",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateFormFieldsRequest$;
(function (UpdateFormFieldsRequest$) {
    /** @deprecated use `UpdateFormFieldsRequest$inboundSchema` instead. */
    UpdateFormFieldsRequest$.inboundSchema = UpdateFormFieldsRequest$inboundSchema;
    /** @deprecated use `UpdateFormFieldsRequest$outboundSchema` instead. */
    UpdateFormFieldsRequest$.outboundSchema = UpdateFormFieldsRequest$outboundSchema;
})(UpdateFormFieldsRequest$ || (UpdateFormFieldsRequest$ = {}));
export function updateFormFieldsRequestToJSON(updateFormFieldsRequest) {
    return JSON.stringify(UpdateFormFieldsRequest$outboundSchema.parse(updateFormFieldsRequest));
}
export function updateFormFieldsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateFormFieldsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateFormFieldsRequest' from JSON`);
}
/** @internal */
export const UpdateFormFieldsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateFormFieldsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateFormFieldsResponse$;
(function (UpdateFormFieldsResponse$) {
    /** @deprecated use `UpdateFormFieldsResponse$inboundSchema` instead. */
    UpdateFormFieldsResponse$.inboundSchema = UpdateFormFieldsResponse$inboundSchema;
    /** @deprecated use `UpdateFormFieldsResponse$outboundSchema` instead. */
    UpdateFormFieldsResponse$.outboundSchema = UpdateFormFieldsResponse$outboundSchema;
})(UpdateFormFieldsResponse$ || (UpdateFormFieldsResponse$ = {}));
export function updateFormFieldsResponseToJSON(updateFormFieldsResponse) {
    return JSON.stringify(UpdateFormFieldsResponse$outboundSchema.parse(updateFormFieldsResponse));
}
export function updateFormFieldsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateFormFieldsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateFormFieldsResponse' from JSON`);
}
//# sourceMappingURL=updateformfields.js.map