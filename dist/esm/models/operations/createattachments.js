/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateAttachmentsResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateAttachmentsResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateAttachmentsResponseResult$;
(function (CreateAttachmentsResponseResult$) {
    /** @deprecated use `CreateAttachmentsResponseResult$inboundSchema` instead. */
    CreateAttachmentsResponseResult$.inboundSchema = CreateAttachmentsResponseResult$inboundSchema;
    /** @deprecated use `CreateAttachmentsResponseResult$outboundSchema` instead. */
    CreateAttachmentsResponseResult$.outboundSchema = CreateAttachmentsResponseResult$outboundSchema;
})(CreateAttachmentsResponseResult$ || (CreateAttachmentsResponseResult$ = {}));
export function createAttachmentsResponseResultToJSON(createAttachmentsResponseResult) {
    return JSON.stringify(CreateAttachmentsResponseResult$outboundSchema.parse(createAttachmentsResponseResult));
}
export function createAttachmentsResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateAttachmentsResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateAttachmentsResponseResult' from JSON`);
}
/** @internal */
export const CreateAttachmentsResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateAttachmentsResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateAttachmentsResponse$;
(function (CreateAttachmentsResponse$) {
    /** @deprecated use `CreateAttachmentsResponse$inboundSchema` instead. */
    CreateAttachmentsResponse$.inboundSchema = CreateAttachmentsResponse$inboundSchema;
    /** @deprecated use `CreateAttachmentsResponse$outboundSchema` instead. */
    CreateAttachmentsResponse$.outboundSchema = CreateAttachmentsResponse$outboundSchema;
})(CreateAttachmentsResponse$ || (CreateAttachmentsResponse$ = {}));
export function createAttachmentsResponseToJSON(createAttachmentsResponse) {
    return JSON.stringify(CreateAttachmentsResponse$outboundSchema.parse(createAttachmentsResponse));
}
export function createAttachmentsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateAttachmentsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateAttachmentsResponse' from JSON`);
}
//# sourceMappingURL=createattachments.js.map