/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateStaffMessagesRequest$inboundSchema = z.object({
    uuid: z.string(),
    StaffMessage: components.StaffMessageInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "StaffMessage": "staffMessage",
    });
});
/** @internal */
export const UpdateStaffMessagesRequest$outboundSchema = z.object({
    uuid: z.string(),
    staffMessage: components.StaffMessageInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        staffMessage: "StaffMessage",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateStaffMessagesRequest$;
(function (UpdateStaffMessagesRequest$) {
    /** @deprecated use `UpdateStaffMessagesRequest$inboundSchema` instead. */
    UpdateStaffMessagesRequest$.inboundSchema = UpdateStaffMessagesRequest$inboundSchema;
    /** @deprecated use `UpdateStaffMessagesRequest$outboundSchema` instead. */
    UpdateStaffMessagesRequest$.outboundSchema = UpdateStaffMessagesRequest$outboundSchema;
})(UpdateStaffMessagesRequest$ || (UpdateStaffMessagesRequest$ = {}));
export function updateStaffMessagesRequestToJSON(updateStaffMessagesRequest) {
    return JSON.stringify(UpdateStaffMessagesRequest$outboundSchema.parse(updateStaffMessagesRequest));
}
export function updateStaffMessagesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateStaffMessagesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateStaffMessagesRequest' from JSON`);
}
/** @internal */
export const UpdateStaffMessagesResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateStaffMessagesResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateStaffMessagesResponse$;
(function (UpdateStaffMessagesResponse$) {
    /** @deprecated use `UpdateStaffMessagesResponse$inboundSchema` instead. */
    UpdateStaffMessagesResponse$.inboundSchema = UpdateStaffMessagesResponse$inboundSchema;
    /** @deprecated use `UpdateStaffMessagesResponse$outboundSchema` instead. */
    UpdateStaffMessagesResponse$.outboundSchema = UpdateStaffMessagesResponse$outboundSchema;
})(UpdateStaffMessagesResponse$ || (UpdateStaffMessagesResponse$ = {}));
export function updateStaffMessagesResponseToJSON(updateStaffMessagesResponse) {
    return JSON.stringify(UpdateStaffMessagesResponse$outboundSchema.parse(updateStaffMessagesResponse));
}
export function updateStaffMessagesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateStaffMessagesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateStaffMessagesResponse' from JSON`);
}
//# sourceMappingURL=updatestaffmessages.js.map