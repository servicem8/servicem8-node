/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const GetJobsRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const GetJobsRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetJobsRequest$;
(function (GetJobsRequest$) {
    /** @deprecated use `GetJobsRequest$inboundSchema` instead. */
    GetJobsRequest$.inboundSchema = GetJobsRequest$inboundSchema;
    /** @deprecated use `GetJobsRequest$outboundSchema` instead. */
    GetJobsRequest$.outboundSchema = GetJobsRequest$outboundSchema;
})(GetJobsRequest$ || (GetJobsRequest$ = {}));
export function getJobsRequestToJSON(getJobsRequest) {
    return JSON.stringify(GetJobsRequest$outboundSchema.parse(getJobsRequest));
}
export function getJobsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetJobsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetJobsRequest' from JSON`);
}
/** @internal */
export const GetJobsResponse$inboundSchema = z.union([components.ErrorT$inboundSchema, components.Job$inboundSchema]);
/** @internal */
export const GetJobsResponse$outboundSchema = z.union([components.ErrorT$outboundSchema, components.Job$outboundSchema]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetJobsResponse$;
(function (GetJobsResponse$) {
    /** @deprecated use `GetJobsResponse$inboundSchema` instead. */
    GetJobsResponse$.inboundSchema = GetJobsResponse$inboundSchema;
    /** @deprecated use `GetJobsResponse$outboundSchema` instead. */
    GetJobsResponse$.outboundSchema = GetJobsResponse$outboundSchema;
})(GetJobsResponse$ || (GetJobsResponse$ = {}));
export function getJobsResponseToJSON(getJobsResponse) {
    return JSON.stringify(GetJobsResponse$outboundSchema.parse(getJobsResponse));
}
export function getJobsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetJobsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetJobsResponse' from JSON`);
}
//# sourceMappingURL=getjobs.js.map