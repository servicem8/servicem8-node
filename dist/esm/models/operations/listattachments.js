/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListAttachmentsResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.Attachment$inboundSchema),
]);
/** @internal */
export const ListAttachmentsResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.Attachment$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAttachmentsResponse$;
(function (ListAttachmentsResponse$) {
    /** @deprecated use `ListAttachmentsResponse$inboundSchema` instead. */
    ListAttachmentsResponse$.inboundSchema = ListAttachmentsResponse$inboundSchema;
    /** @deprecated use `ListAttachmentsResponse$outboundSchema` instead. */
    ListAttachmentsResponse$.outboundSchema = ListAttachmentsResponse$outboundSchema;
})(ListAttachmentsResponse$ || (ListAttachmentsResponse$ = {}));
export function listAttachmentsResponseToJSON(listAttachmentsResponse) {
    return JSON.stringify(ListAttachmentsResponse$outboundSchema.parse(listAttachmentsResponse));
}
export function listAttachmentsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAttachmentsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAttachmentsResponse' from JSON`);
}
//# sourceMappingURL=listattachments.js.map