/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateFormResponsesResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateFormResponsesResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateFormResponsesResponseResult$;
(function (CreateFormResponsesResponseResult$) {
    /** @deprecated use `CreateFormResponsesResponseResult$inboundSchema` instead. */
    CreateFormResponsesResponseResult$.inboundSchema = CreateFormResponsesResponseResult$inboundSchema;
    /** @deprecated use `CreateFormResponsesResponseResult$outboundSchema` instead. */
    CreateFormResponsesResponseResult$.outboundSchema = CreateFormResponsesResponseResult$outboundSchema;
})(CreateFormResponsesResponseResult$ || (CreateFormResponsesResponseResult$ = {}));
export function createFormResponsesResponseResultToJSON(createFormResponsesResponseResult) {
    return JSON.stringify(CreateFormResponsesResponseResult$outboundSchema.parse(createFormResponsesResponseResult));
}
export function createFormResponsesResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateFormResponsesResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateFormResponsesResponseResult' from JSON`);
}
/** @internal */
export const CreateFormResponsesResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateFormResponsesResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateFormResponsesResponse$;
(function (CreateFormResponsesResponse$) {
    /** @deprecated use `CreateFormResponsesResponse$inboundSchema` instead. */
    CreateFormResponsesResponse$.inboundSchema = CreateFormResponsesResponse$inboundSchema;
    /** @deprecated use `CreateFormResponsesResponse$outboundSchema` instead. */
    CreateFormResponsesResponse$.outboundSchema = CreateFormResponsesResponse$outboundSchema;
})(CreateFormResponsesResponse$ || (CreateFormResponsesResponse$ = {}));
export function createFormResponsesResponseToJSON(createFormResponsesResponse) {
    return JSON.stringify(CreateFormResponsesResponse$outboundSchema.parse(createFormResponsesResponse));
}
export function createFormResponsesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateFormResponsesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateFormResponsesResponse' from JSON`);
}
//# sourceMappingURL=createformresponses.js.map