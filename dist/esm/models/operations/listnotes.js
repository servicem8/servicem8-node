/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListNotesResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.Note$inboundSchema),
]);
/** @internal */
export const ListNotesResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.Note$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListNotesResponse$;
(function (ListNotesResponse$) {
    /** @deprecated use `ListNotesResponse$inboundSchema` instead. */
    ListNotesResponse$.inboundSchema = ListNotesResponse$inboundSchema;
    /** @deprecated use `ListNotesResponse$outboundSchema` instead. */
    ListNotesResponse$.outboundSchema = ListNotesResponse$outboundSchema;
})(ListNotesResponse$ || (ListNotesResponse$ = {}));
export function listNotesResponseToJSON(listNotesResponse) {
    return JSON.stringify(ListNotesResponse$outboundSchema.parse(listNotesResponse));
}
export function listNotesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListNotesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListNotesResponse' from JSON`);
}
//# sourceMappingURL=listnotes.js.map