/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateAssetTypeFieldsRequest$inboundSchema = z.object({
    uuid: z.string(),
    AssetTypeField: components.AssetTypeFieldInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "AssetTypeField": "assetTypeField",
    });
});
/** @internal */
export const UpdateAssetTypeFieldsRequest$outboundSchema = z.object({
    uuid: z.string(),
    assetTypeField: components.AssetTypeFieldInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        assetTypeField: "AssetTypeField",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateAssetTypeFieldsRequest$;
(function (UpdateAssetTypeFieldsRequest$) {
    /** @deprecated use `UpdateAssetTypeFieldsRequest$inboundSchema` instead. */
    UpdateAssetTypeFieldsRequest$.inboundSchema = UpdateAssetTypeFieldsRequest$inboundSchema;
    /** @deprecated use `UpdateAssetTypeFieldsRequest$outboundSchema` instead. */
    UpdateAssetTypeFieldsRequest$.outboundSchema = UpdateAssetTypeFieldsRequest$outboundSchema;
})(UpdateAssetTypeFieldsRequest$ || (UpdateAssetTypeFieldsRequest$ = {}));
export function updateAssetTypeFieldsRequestToJSON(updateAssetTypeFieldsRequest) {
    return JSON.stringify(UpdateAssetTypeFieldsRequest$outboundSchema.parse(updateAssetTypeFieldsRequest));
}
export function updateAssetTypeFieldsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateAssetTypeFieldsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateAssetTypeFieldsRequest' from JSON`);
}
/** @internal */
export const UpdateAssetTypeFieldsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateAssetTypeFieldsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateAssetTypeFieldsResponse$;
(function (UpdateAssetTypeFieldsResponse$) {
    /** @deprecated use `UpdateAssetTypeFieldsResponse$inboundSchema` instead. */
    UpdateAssetTypeFieldsResponse$.inboundSchema = UpdateAssetTypeFieldsResponse$inboundSchema;
    /** @deprecated use `UpdateAssetTypeFieldsResponse$outboundSchema` instead. */
    UpdateAssetTypeFieldsResponse$.outboundSchema = UpdateAssetTypeFieldsResponse$outboundSchema;
})(UpdateAssetTypeFieldsResponse$ || (UpdateAssetTypeFieldsResponse$ = {}));
export function updateAssetTypeFieldsResponseToJSON(updateAssetTypeFieldsResponse) {
    return JSON.stringify(UpdateAssetTypeFieldsResponse$outboundSchema.parse(updateAssetTypeFieldsResponse));
}
export function updateAssetTypeFieldsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateAssetTypeFieldsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateAssetTypeFieldsResponse' from JSON`);
}
//# sourceMappingURL=updateassettypefields.js.map