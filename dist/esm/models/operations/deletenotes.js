/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const DeleteNotesRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const DeleteNotesRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteNotesRequest$;
(function (DeleteNotesRequest$) {
    /** @deprecated use `DeleteNotesRequest$inboundSchema` instead. */
    DeleteNotesRequest$.inboundSchema = DeleteNotesRequest$inboundSchema;
    /** @deprecated use `DeleteNotesRequest$outboundSchema` instead. */
    DeleteNotesRequest$.outboundSchema = DeleteNotesRequest$outboundSchema;
})(DeleteNotesRequest$ || (DeleteNotesRequest$ = {}));
export function deleteNotesRequestToJSON(deleteNotesRequest) {
    return JSON.stringify(DeleteNotesRequest$outboundSchema.parse(deleteNotesRequest));
}
export function deleteNotesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteNotesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteNotesRequest' from JSON`);
}
/** @internal */
export const DeleteNotesResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const DeleteNotesResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteNotesResponse$;
(function (DeleteNotesResponse$) {
    /** @deprecated use `DeleteNotesResponse$inboundSchema` instead. */
    DeleteNotesResponse$.inboundSchema = DeleteNotesResponse$inboundSchema;
    /** @deprecated use `DeleteNotesResponse$outboundSchema` instead. */
    DeleteNotesResponse$.outboundSchema = DeleteNotesResponse$outboundSchema;
})(DeleteNotesResponse$ || (DeleteNotesResponse$ = {}));
export function deleteNotesResponseToJSON(deleteNotesResponse) {
    return JSON.stringify(DeleteNotesResponse$outboundSchema.parse(deleteNotesResponse));
}
export function deleteNotesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteNotesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteNotesResponse' from JSON`);
}
//# sourceMappingURL=deletenotes.js.map