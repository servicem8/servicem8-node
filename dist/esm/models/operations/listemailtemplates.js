/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListEmailTemplatesResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.EmailTemplate$inboundSchema),
]);
/** @internal */
export const ListEmailTemplatesResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.EmailTemplate$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListEmailTemplatesResponse$;
(function (ListEmailTemplatesResponse$) {
    /** @deprecated use `ListEmailTemplatesResponse$inboundSchema` instead. */
    ListEmailTemplatesResponse$.inboundSchema = ListEmailTemplatesResponse$inboundSchema;
    /** @deprecated use `ListEmailTemplatesResponse$outboundSchema` instead. */
    ListEmailTemplatesResponse$.outboundSchema = ListEmailTemplatesResponse$outboundSchema;
})(ListEmailTemplatesResponse$ || (ListEmailTemplatesResponse$ = {}));
export function listEmailTemplatesResponseToJSON(listEmailTemplatesResponse) {
    return JSON.stringify(ListEmailTemplatesResponse$outboundSchema.parse(listEmailTemplatesResponse));
}
export function listEmailTemplatesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListEmailTemplatesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListEmailTemplatesResponse' from JSON`);
}
//# sourceMappingURL=listemailtemplates.js.map