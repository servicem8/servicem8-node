/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListMaterialsResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.Material$inboundSchema),
]);
/** @internal */
export const ListMaterialsResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.Material$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListMaterialsResponse$;
(function (ListMaterialsResponse$) {
    /** @deprecated use `ListMaterialsResponse$inboundSchema` instead. */
    ListMaterialsResponse$.inboundSchema = ListMaterialsResponse$inboundSchema;
    /** @deprecated use `ListMaterialsResponse$outboundSchema` instead. */
    ListMaterialsResponse$.outboundSchema = ListMaterialsResponse$outboundSchema;
})(ListMaterialsResponse$ || (ListMaterialsResponse$ = {}));
export function listMaterialsResponseToJSON(listMaterialsResponse) {
    return JSON.stringify(ListMaterialsResponse$outboundSchema.parse(listMaterialsResponse));
}
export function listMaterialsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListMaterialsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListMaterialsResponse' from JSON`);
}
//# sourceMappingURL=listmaterials.js.map