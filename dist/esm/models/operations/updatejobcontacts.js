/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateJobContactsRequest$inboundSchema = z.object({
    uuid: z.string(),
    JobContact: components.JobContactInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "JobContact": "jobContact",
    });
});
/** @internal */
export const UpdateJobContactsRequest$outboundSchema = z.object({
    uuid: z.string(),
    jobContact: components.JobContactInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        jobContact: "JobContact",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateJobContactsRequest$;
(function (UpdateJobContactsRequest$) {
    /** @deprecated use `UpdateJobContactsRequest$inboundSchema` instead. */
    UpdateJobContactsRequest$.inboundSchema = UpdateJobContactsRequest$inboundSchema;
    /** @deprecated use `UpdateJobContactsRequest$outboundSchema` instead. */
    UpdateJobContactsRequest$.outboundSchema = UpdateJobContactsRequest$outboundSchema;
})(UpdateJobContactsRequest$ || (UpdateJobContactsRequest$ = {}));
export function updateJobContactsRequestToJSON(updateJobContactsRequest) {
    return JSON.stringify(UpdateJobContactsRequest$outboundSchema.parse(updateJobContactsRequest));
}
export function updateJobContactsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateJobContactsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateJobContactsRequest' from JSON`);
}
/** @internal */
export const UpdateJobContactsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateJobContactsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateJobContactsResponse$;
(function (UpdateJobContactsResponse$) {
    /** @deprecated use `UpdateJobContactsResponse$inboundSchema` instead. */
    UpdateJobContactsResponse$.inboundSchema = UpdateJobContactsResponse$inboundSchema;
    /** @deprecated use `UpdateJobContactsResponse$outboundSchema` instead. */
    UpdateJobContactsResponse$.outboundSchema = UpdateJobContactsResponse$outboundSchema;
})(UpdateJobContactsResponse$ || (UpdateJobContactsResponse$ = {}));
export function updateJobContactsResponseToJSON(updateJobContactsResponse) {
    return JSON.stringify(UpdateJobContactsResponse$outboundSchema.parse(updateJobContactsResponse));
}
export function updateJobContactsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateJobContactsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateJobContactsResponse' from JSON`);
}
//# sourceMappingURL=updatejobcontacts.js.map