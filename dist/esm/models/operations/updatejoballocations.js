/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateJobAllocationsRequest$inboundSchema = z.object({
    uuid: z.string(),
    JobAllocation: components.JobAllocationInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "JobAllocation": "jobAllocation",
    });
});
/** @internal */
export const UpdateJobAllocationsRequest$outboundSchema = z.object({
    uuid: z.string(),
    jobAllocation: components.JobAllocationInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        jobAllocation: "JobAllocation",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateJobAllocationsRequest$;
(function (UpdateJobAllocationsRequest$) {
    /** @deprecated use `UpdateJobAllocationsRequest$inboundSchema` instead. */
    UpdateJobAllocationsRequest$.inboundSchema = UpdateJobAllocationsRequest$inboundSchema;
    /** @deprecated use `UpdateJobAllocationsRequest$outboundSchema` instead. */
    UpdateJobAllocationsRequest$.outboundSchema = UpdateJobAllocationsRequest$outboundSchema;
})(UpdateJobAllocationsRequest$ || (UpdateJobAllocationsRequest$ = {}));
export function updateJobAllocationsRequestToJSON(updateJobAllocationsRequest) {
    return JSON.stringify(UpdateJobAllocationsRequest$outboundSchema.parse(updateJobAllocationsRequest));
}
export function updateJobAllocationsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateJobAllocationsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateJobAllocationsRequest' from JSON`);
}
/** @internal */
export const UpdateJobAllocationsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateJobAllocationsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateJobAllocationsResponse$;
(function (UpdateJobAllocationsResponse$) {
    /** @deprecated use `UpdateJobAllocationsResponse$inboundSchema` instead. */
    UpdateJobAllocationsResponse$.inboundSchema = UpdateJobAllocationsResponse$inboundSchema;
    /** @deprecated use `UpdateJobAllocationsResponse$outboundSchema` instead. */
    UpdateJobAllocationsResponse$.outboundSchema = UpdateJobAllocationsResponse$outboundSchema;
})(UpdateJobAllocationsResponse$ || (UpdateJobAllocationsResponse$ = {}));
export function updateJobAllocationsResponseToJSON(updateJobAllocationsResponse) {
    return JSON.stringify(UpdateJobAllocationsResponse$outboundSchema.parse(updateJobAllocationsResponse));
}
export function updateJobAllocationsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateJobAllocationsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateJobAllocationsResponse' from JSON`);
}
//# sourceMappingURL=updatejoballocations.js.map