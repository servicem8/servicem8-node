/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const DeleteMaterialsRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const DeleteMaterialsRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteMaterialsRequest$;
(function (DeleteMaterialsRequest$) {
    /** @deprecated use `DeleteMaterialsRequest$inboundSchema` instead. */
    DeleteMaterialsRequest$.inboundSchema = DeleteMaterialsRequest$inboundSchema;
    /** @deprecated use `DeleteMaterialsRequest$outboundSchema` instead. */
    DeleteMaterialsRequest$.outboundSchema = DeleteMaterialsRequest$outboundSchema;
})(DeleteMaterialsRequest$ || (DeleteMaterialsRequest$ = {}));
export function deleteMaterialsRequestToJSON(deleteMaterialsRequest) {
    return JSON.stringify(DeleteMaterialsRequest$outboundSchema.parse(deleteMaterialsRequest));
}
export function deleteMaterialsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteMaterialsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteMaterialsRequest' from JSON`);
}
/** @internal */
export const DeleteMaterialsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const DeleteMaterialsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteMaterialsResponse$;
(function (DeleteMaterialsResponse$) {
    /** @deprecated use `DeleteMaterialsResponse$inboundSchema` instead. */
    DeleteMaterialsResponse$.inboundSchema = DeleteMaterialsResponse$inboundSchema;
    /** @deprecated use `DeleteMaterialsResponse$outboundSchema` instead. */
    DeleteMaterialsResponse$.outboundSchema = DeleteMaterialsResponse$outboundSchema;
})(DeleteMaterialsResponse$ || (DeleteMaterialsResponse$ = {}));
export function deleteMaterialsResponseToJSON(deleteMaterialsResponse) {
    return JSON.stringify(DeleteMaterialsResponse$outboundSchema.parse(deleteMaterialsResponse));
}
export function deleteMaterialsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteMaterialsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteMaterialsResponse' from JSON`);
}
//# sourceMappingURL=deletematerials.js.map