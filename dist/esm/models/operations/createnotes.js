/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateNotesResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateNotesResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateNotesResponseResult$;
(function (CreateNotesResponseResult$) {
    /** @deprecated use `CreateNotesResponseResult$inboundSchema` instead. */
    CreateNotesResponseResult$.inboundSchema = CreateNotesResponseResult$inboundSchema;
    /** @deprecated use `CreateNotesResponseResult$outboundSchema` instead. */
    CreateNotesResponseResult$.outboundSchema = CreateNotesResponseResult$outboundSchema;
})(CreateNotesResponseResult$ || (CreateNotesResponseResult$ = {}));
export function createNotesResponseResultToJSON(createNotesResponseResult) {
    return JSON.stringify(CreateNotesResponseResult$outboundSchema.parse(createNotesResponseResult));
}
export function createNotesResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateNotesResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateNotesResponseResult' from JSON`);
}
/** @internal */
export const CreateNotesResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateNotesResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateNotesResponse$;
(function (CreateNotesResponse$) {
    /** @deprecated use `CreateNotesResponse$inboundSchema` instead. */
    CreateNotesResponse$.inboundSchema = CreateNotesResponse$inboundSchema;
    /** @deprecated use `CreateNotesResponse$outboundSchema` instead. */
    CreateNotesResponse$.outboundSchema = CreateNotesResponse$outboundSchema;
})(CreateNotesResponse$ || (CreateNotesResponse$ = {}));
export function createNotesResponseToJSON(createNotesResponse) {
    return JSON.stringify(CreateNotesResponse$outboundSchema.parse(createNotesResponse));
}
export function createNotesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateNotesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateNotesResponse' from JSON`);
}
//# sourceMappingURL=createnotes.js.map