/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateMaterialsRequest$inboundSchema = z.object({
    uuid: z.string(),
    Material: components.MaterialInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Material": "material",
    });
});
/** @internal */
export const UpdateMaterialsRequest$outboundSchema = z.object({
    uuid: z.string(),
    material: components.MaterialInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        material: "Material",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateMaterialsRequest$;
(function (UpdateMaterialsRequest$) {
    /** @deprecated use `UpdateMaterialsRequest$inboundSchema` instead. */
    UpdateMaterialsRequest$.inboundSchema = UpdateMaterialsRequest$inboundSchema;
    /** @deprecated use `UpdateMaterialsRequest$outboundSchema` instead. */
    UpdateMaterialsRequest$.outboundSchema = UpdateMaterialsRequest$outboundSchema;
})(UpdateMaterialsRequest$ || (UpdateMaterialsRequest$ = {}));
export function updateMaterialsRequestToJSON(updateMaterialsRequest) {
    return JSON.stringify(UpdateMaterialsRequest$outboundSchema.parse(updateMaterialsRequest));
}
export function updateMaterialsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateMaterialsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateMaterialsRequest' from JSON`);
}
/** @internal */
export const UpdateMaterialsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateMaterialsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateMaterialsResponse$;
(function (UpdateMaterialsResponse$) {
    /** @deprecated use `UpdateMaterialsResponse$inboundSchema` instead. */
    UpdateMaterialsResponse$.inboundSchema = UpdateMaterialsResponse$inboundSchema;
    /** @deprecated use `UpdateMaterialsResponse$outboundSchema` instead. */
    UpdateMaterialsResponse$.outboundSchema = UpdateMaterialsResponse$outboundSchema;
})(UpdateMaterialsResponse$ || (UpdateMaterialsResponse$ = {}));
export function updateMaterialsResponseToJSON(updateMaterialsResponse) {
    return JSON.stringify(UpdateMaterialsResponse$outboundSchema.parse(updateMaterialsResponse));
}
export function updateMaterialsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateMaterialsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateMaterialsResponse' from JSON`);
}
//# sourceMappingURL=updatematerials.js.map