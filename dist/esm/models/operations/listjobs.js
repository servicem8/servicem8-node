/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListJobsResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.Job$inboundSchema),
]);
/** @internal */
export const ListJobsResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.Job$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListJobsResponse$;
(function (ListJobsResponse$) {
    /** @deprecated use `ListJobsResponse$inboundSchema` instead. */
    ListJobsResponse$.inboundSchema = ListJobsResponse$inboundSchema;
    /** @deprecated use `ListJobsResponse$outboundSchema` instead. */
    ListJobsResponse$.outboundSchema = ListJobsResponse$outboundSchema;
})(ListJobsResponse$ || (ListJobsResponse$ = {}));
export function listJobsResponseToJSON(listJobsResponse) {
    return JSON.stringify(ListJobsResponse$outboundSchema.parse(listJobsResponse));
}
export function listJobsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListJobsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListJobsResponse' from JSON`);
}
//# sourceMappingURL=listjobs.js.map