/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateLocationsResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateLocationsResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateLocationsResponseResult$;
(function (CreateLocationsResponseResult$) {
    /** @deprecated use `CreateLocationsResponseResult$inboundSchema` instead. */
    CreateLocationsResponseResult$.inboundSchema = CreateLocationsResponseResult$inboundSchema;
    /** @deprecated use `CreateLocationsResponseResult$outboundSchema` instead. */
    CreateLocationsResponseResult$.outboundSchema = CreateLocationsResponseResult$outboundSchema;
})(CreateLocationsResponseResult$ || (CreateLocationsResponseResult$ = {}));
export function createLocationsResponseResultToJSON(createLocationsResponseResult) {
    return JSON.stringify(CreateLocationsResponseResult$outboundSchema.parse(createLocationsResponseResult));
}
export function createLocationsResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateLocationsResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateLocationsResponseResult' from JSON`);
}
/** @internal */
export const CreateLocationsResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateLocationsResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateLocationsResponse$;
(function (CreateLocationsResponse$) {
    /** @deprecated use `CreateLocationsResponse$inboundSchema` instead. */
    CreateLocationsResponse$.inboundSchema = CreateLocationsResponse$inboundSchema;
    /** @deprecated use `CreateLocationsResponse$outboundSchema` instead. */
    CreateLocationsResponse$.outboundSchema = CreateLocationsResponse$outboundSchema;
})(CreateLocationsResponse$ || (CreateLocationsResponse$ = {}));
export function createLocationsResponseToJSON(createLocationsResponse) {
    return JSON.stringify(CreateLocationsResponse$outboundSchema.parse(createLocationsResponse));
}
export function createLocationsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateLocationsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateLocationsResponse' from JSON`);
}
//# sourceMappingURL=createlocations.js.map