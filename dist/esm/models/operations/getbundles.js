/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const GetBundlesRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const GetBundlesRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetBundlesRequest$;
(function (GetBundlesRequest$) {
    /** @deprecated use `GetBundlesRequest$inboundSchema` instead. */
    GetBundlesRequest$.inboundSchema = GetBundlesRequest$inboundSchema;
    /** @deprecated use `GetBundlesRequest$outboundSchema` instead. */
    GetBundlesRequest$.outboundSchema = GetBundlesRequest$outboundSchema;
})(GetBundlesRequest$ || (GetBundlesRequest$ = {}));
export function getBundlesRequestToJSON(getBundlesRequest) {
    return JSON.stringify(GetBundlesRequest$outboundSchema.parse(getBundlesRequest));
}
export function getBundlesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetBundlesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetBundlesRequest' from JSON`);
}
/** @internal */
export const GetBundlesResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    components.MaterialBundle$inboundSchema,
]);
/** @internal */
export const GetBundlesResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    components.MaterialBundle$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetBundlesResponse$;
(function (GetBundlesResponse$) {
    /** @deprecated use `GetBundlesResponse$inboundSchema` instead. */
    GetBundlesResponse$.inboundSchema = GetBundlesResponse$inboundSchema;
    /** @deprecated use `GetBundlesResponse$outboundSchema` instead. */
    GetBundlesResponse$.outboundSchema = GetBundlesResponse$outboundSchema;
})(GetBundlesResponse$ || (GetBundlesResponse$ = {}));
export function getBundlesResponseToJSON(getBundlesResponse) {
    return JSON.stringify(GetBundlesResponse$outboundSchema.parse(getBundlesResponse));
}
export function getBundlesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetBundlesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetBundlesResponse' from JSON`);
}
//# sourceMappingURL=getbundles.js.map