/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const DeleteCompanyContactsRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const DeleteCompanyContactsRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteCompanyContactsRequest$;
(function (DeleteCompanyContactsRequest$) {
    /** @deprecated use `DeleteCompanyContactsRequest$inboundSchema` instead. */
    DeleteCompanyContactsRequest$.inboundSchema = DeleteCompanyContactsRequest$inboundSchema;
    /** @deprecated use `DeleteCompanyContactsRequest$outboundSchema` instead. */
    DeleteCompanyContactsRequest$.outboundSchema = DeleteCompanyContactsRequest$outboundSchema;
})(DeleteCompanyContactsRequest$ || (DeleteCompanyContactsRequest$ = {}));
export function deleteCompanyContactsRequestToJSON(deleteCompanyContactsRequest) {
    return JSON.stringify(DeleteCompanyContactsRequest$outboundSchema.parse(deleteCompanyContactsRequest));
}
export function deleteCompanyContactsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteCompanyContactsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteCompanyContactsRequest' from JSON`);
}
/** @internal */
export const DeleteCompanyContactsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const DeleteCompanyContactsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteCompanyContactsResponse$;
(function (DeleteCompanyContactsResponse$) {
    /** @deprecated use `DeleteCompanyContactsResponse$inboundSchema` instead. */
    DeleteCompanyContactsResponse$.inboundSchema = DeleteCompanyContactsResponse$inboundSchema;
    /** @deprecated use `DeleteCompanyContactsResponse$outboundSchema` instead. */
    DeleteCompanyContactsResponse$.outboundSchema = DeleteCompanyContactsResponse$outboundSchema;
})(DeleteCompanyContactsResponse$ || (DeleteCompanyContactsResponse$ = {}));
export function deleteCompanyContactsResponseToJSON(deleteCompanyContactsResponse) {
    return JSON.stringify(DeleteCompanyContactsResponse$outboundSchema.parse(deleteCompanyContactsResponse));
}
export function deleteCompanyContactsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteCompanyContactsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteCompanyContactsResponse' from JSON`);
}
//# sourceMappingURL=deletecompanycontacts.js.map