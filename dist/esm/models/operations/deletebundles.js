/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const DeleteBundlesRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const DeleteBundlesRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteBundlesRequest$;
(function (DeleteBundlesRequest$) {
    /** @deprecated use `DeleteBundlesRequest$inboundSchema` instead. */
    DeleteBundlesRequest$.inboundSchema = DeleteBundlesRequest$inboundSchema;
    /** @deprecated use `DeleteBundlesRequest$outboundSchema` instead. */
    DeleteBundlesRequest$.outboundSchema = DeleteBundlesRequest$outboundSchema;
})(DeleteBundlesRequest$ || (DeleteBundlesRequest$ = {}));
export function deleteBundlesRequestToJSON(deleteBundlesRequest) {
    return JSON.stringify(DeleteBundlesRequest$outboundSchema.parse(deleteBundlesRequest));
}
export function deleteBundlesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteBundlesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteBundlesRequest' from JSON`);
}
/** @internal */
export const DeleteBundlesResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const DeleteBundlesResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteBundlesResponse$;
(function (DeleteBundlesResponse$) {
    /** @deprecated use `DeleteBundlesResponse$inboundSchema` instead. */
    DeleteBundlesResponse$.inboundSchema = DeleteBundlesResponse$inboundSchema;
    /** @deprecated use `DeleteBundlesResponse$outboundSchema` instead. */
    DeleteBundlesResponse$.outboundSchema = DeleteBundlesResponse$outboundSchema;
})(DeleteBundlesResponse$ || (DeleteBundlesResponse$ = {}));
export function deleteBundlesResponseToJSON(deleteBundlesResponse) {
    return JSON.stringify(DeleteBundlesResponse$outboundSchema.parse(deleteBundlesResponse));
}
export function deleteBundlesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteBundlesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteBundlesResponse' from JSON`);
}
//# sourceMappingURL=deletebundles.js.map