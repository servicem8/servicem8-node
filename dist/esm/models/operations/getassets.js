/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const GetAssetsRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const GetAssetsRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAssetsRequest$;
(function (GetAssetsRequest$) {
    /** @deprecated use `GetAssetsRequest$inboundSchema` instead. */
    GetAssetsRequest$.inboundSchema = GetAssetsRequest$inboundSchema;
    /** @deprecated use `GetAssetsRequest$outboundSchema` instead. */
    GetAssetsRequest$.outboundSchema = GetAssetsRequest$outboundSchema;
})(GetAssetsRequest$ || (GetAssetsRequest$ = {}));
export function getAssetsRequestToJSON(getAssetsRequest) {
    return JSON.stringify(GetAssetsRequest$outboundSchema.parse(getAssetsRequest));
}
export function getAssetsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAssetsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAssetsRequest' from JSON`);
}
/** @internal */
export const GetAssetsResponse$inboundSchema = z.union([components.ErrorT$inboundSchema, components.Asset$inboundSchema]);
/** @internal */
export const GetAssetsResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    components.Asset$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAssetsResponse$;
(function (GetAssetsResponse$) {
    /** @deprecated use `GetAssetsResponse$inboundSchema` instead. */
    GetAssetsResponse$.inboundSchema = GetAssetsResponse$inboundSchema;
    /** @deprecated use `GetAssetsResponse$outboundSchema` instead. */
    GetAssetsResponse$.outboundSchema = GetAssetsResponse$outboundSchema;
})(GetAssetsResponse$ || (GetAssetsResponse$ = {}));
export function getAssetsResponseToJSON(getAssetsResponse) {
    return JSON.stringify(GetAssetsResponse$outboundSchema.parse(getAssetsResponse));
}
export function getAssetsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAssetsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAssetsResponse' from JSON`);
}
//# sourceMappingURL=getassets.js.map