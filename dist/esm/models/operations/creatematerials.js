/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateMaterialsResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateMaterialsResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateMaterialsResponseResult$;
(function (CreateMaterialsResponseResult$) {
    /** @deprecated use `CreateMaterialsResponseResult$inboundSchema` instead. */
    CreateMaterialsResponseResult$.inboundSchema = CreateMaterialsResponseResult$inboundSchema;
    /** @deprecated use `CreateMaterialsResponseResult$outboundSchema` instead. */
    CreateMaterialsResponseResult$.outboundSchema = CreateMaterialsResponseResult$outboundSchema;
})(CreateMaterialsResponseResult$ || (CreateMaterialsResponseResult$ = {}));
export function createMaterialsResponseResultToJSON(createMaterialsResponseResult) {
    return JSON.stringify(CreateMaterialsResponseResult$outboundSchema.parse(createMaterialsResponseResult));
}
export function createMaterialsResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateMaterialsResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateMaterialsResponseResult' from JSON`);
}
/** @internal */
export const CreateMaterialsResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateMaterialsResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateMaterialsResponse$;
(function (CreateMaterialsResponse$) {
    /** @deprecated use `CreateMaterialsResponse$inboundSchema` instead. */
    CreateMaterialsResponse$.inboundSchema = CreateMaterialsResponse$inboundSchema;
    /** @deprecated use `CreateMaterialsResponse$outboundSchema` instead. */
    CreateMaterialsResponse$.outboundSchema = CreateMaterialsResponse$outboundSchema;
})(CreateMaterialsResponse$ || (CreateMaterialsResponse$ = {}));
export function createMaterialsResponseToJSON(createMaterialsResponse) {
    return JSON.stringify(CreateMaterialsResponse$outboundSchema.parse(createMaterialsResponse));
}
export function createMaterialsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateMaterialsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateMaterialsResponse' from JSON`);
}
//# sourceMappingURL=creatematerials.js.map