/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const DeleteAttachmentsRequest$inboundSchema = z.object({
    uuid: z.string(),
});
/** @internal */
export const DeleteAttachmentsRequest$outboundSchema = z.object({
    uuid: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteAttachmentsRequest$;
(function (DeleteAttachmentsRequest$) {
    /** @deprecated use `DeleteAttachmentsRequest$inboundSchema` instead. */
    DeleteAttachmentsRequest$.inboundSchema = DeleteAttachmentsRequest$inboundSchema;
    /** @deprecated use `DeleteAttachmentsRequest$outboundSchema` instead. */
    DeleteAttachmentsRequest$.outboundSchema = DeleteAttachmentsRequest$outboundSchema;
})(DeleteAttachmentsRequest$ || (DeleteAttachmentsRequest$ = {}));
export function deleteAttachmentsRequestToJSON(deleteAttachmentsRequest) {
    return JSON.stringify(DeleteAttachmentsRequest$outboundSchema.parse(deleteAttachmentsRequest));
}
export function deleteAttachmentsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteAttachmentsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteAttachmentsRequest' from JSON`);
}
/** @internal */
export const DeleteAttachmentsResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const DeleteAttachmentsResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteAttachmentsResponse$;
(function (DeleteAttachmentsResponse$) {
    /** @deprecated use `DeleteAttachmentsResponse$inboundSchema` instead. */
    DeleteAttachmentsResponse$.inboundSchema = DeleteAttachmentsResponse$inboundSchema;
    /** @deprecated use `DeleteAttachmentsResponse$outboundSchema` instead. */
    DeleteAttachmentsResponse$.outboundSchema = DeleteAttachmentsResponse$outboundSchema;
})(DeleteAttachmentsResponse$ || (DeleteAttachmentsResponse$ = {}));
export function deleteAttachmentsResponseToJSON(deleteAttachmentsResponse) {
    return JSON.stringify(DeleteAttachmentsResponse$outboundSchema.parse(deleteAttachmentsResponse));
}
export function deleteAttachmentsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteAttachmentsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteAttachmentsResponse' from JSON`);
}
//# sourceMappingURL=deleteattachments.js.map