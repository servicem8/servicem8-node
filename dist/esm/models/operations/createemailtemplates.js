/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateEmailTemplatesResponseResult$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const CreateEmailTemplatesResponseResult$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateEmailTemplatesResponseResult$;
(function (CreateEmailTemplatesResponseResult$) {
    /** @deprecated use `CreateEmailTemplatesResponseResult$inboundSchema` instead. */
    CreateEmailTemplatesResponseResult$.inboundSchema = CreateEmailTemplatesResponseResult$inboundSchema;
    /** @deprecated use `CreateEmailTemplatesResponseResult$outboundSchema` instead. */
    CreateEmailTemplatesResponseResult$.outboundSchema = CreateEmailTemplatesResponseResult$outboundSchema;
})(CreateEmailTemplatesResponseResult$ || (CreateEmailTemplatesResponseResult$ = {}));
export function createEmailTemplatesResponseResultToJSON(createEmailTemplatesResponseResult) {
    return JSON.stringify(CreateEmailTemplatesResponseResult$outboundSchema.parse(createEmailTemplatesResponseResult));
}
export function createEmailTemplatesResponseResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateEmailTemplatesResponseResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateEmailTemplatesResponseResult' from JSON`);
}
/** @internal */
export const CreateEmailTemplatesResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.union([
        components.Result$inboundSchema,
        components.ErrorT$inboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateEmailTemplatesResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.union([
        components.Result$outboundSchema,
        components.ErrorT$outboundSchema,
    ]),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateEmailTemplatesResponse$;
(function (CreateEmailTemplatesResponse$) {
    /** @deprecated use `CreateEmailTemplatesResponse$inboundSchema` instead. */
    CreateEmailTemplatesResponse$.inboundSchema = CreateEmailTemplatesResponse$inboundSchema;
    /** @deprecated use `CreateEmailTemplatesResponse$outboundSchema` instead. */
    CreateEmailTemplatesResponse$.outboundSchema = CreateEmailTemplatesResponse$outboundSchema;
})(CreateEmailTemplatesResponse$ || (CreateEmailTemplatesResponse$ = {}));
export function createEmailTemplatesResponseToJSON(createEmailTemplatesResponse) {
    return JSON.stringify(CreateEmailTemplatesResponse$outboundSchema.parse(createEmailTemplatesResponse));
}
export function createEmailTemplatesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateEmailTemplatesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateEmailTemplatesResponse' from JSON`);
}
//# sourceMappingURL=createemailtemplates.js.map