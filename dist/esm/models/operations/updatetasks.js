/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateTasksRequest$inboundSchema = z.object({
    uuid: z.string(),
    Task: components.TaskInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Task": "task",
    });
});
/** @internal */
export const UpdateTasksRequest$outboundSchema = z.object({
    uuid: z.string(),
    task: components.TaskInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        task: "Task",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateTasksRequest$;
(function (UpdateTasksRequest$) {
    /** @deprecated use `UpdateTasksRequest$inboundSchema` instead. */
    UpdateTasksRequest$.inboundSchema = UpdateTasksRequest$inboundSchema;
    /** @deprecated use `UpdateTasksRequest$outboundSchema` instead. */
    UpdateTasksRequest$.outboundSchema = UpdateTasksRequest$outboundSchema;
})(UpdateTasksRequest$ || (UpdateTasksRequest$ = {}));
export function updateTasksRequestToJSON(updateTasksRequest) {
    return JSON.stringify(UpdateTasksRequest$outboundSchema.parse(updateTasksRequest));
}
export function updateTasksRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateTasksRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateTasksRequest' from JSON`);
}
/** @internal */
export const UpdateTasksResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateTasksResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateTasksResponse$;
(function (UpdateTasksResponse$) {
    /** @deprecated use `UpdateTasksResponse$inboundSchema` instead. */
    UpdateTasksResponse$.inboundSchema = UpdateTasksResponse$inboundSchema;
    /** @deprecated use `UpdateTasksResponse$outboundSchema` instead. */
    UpdateTasksResponse$.outboundSchema = UpdateTasksResponse$outboundSchema;
})(UpdateTasksResponse$ || (UpdateTasksResponse$ = {}));
export function updateTasksResponseToJSON(updateTasksResponse) {
    return JSON.stringify(UpdateTasksResponse$outboundSchema.parse(updateTasksResponse));
}
export function updateTasksResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateTasksResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateTasksResponse' from JSON`);
}
//# sourceMappingURL=updatetasks.js.map