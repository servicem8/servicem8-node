/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ListFeedbackResponse$inboundSchema = z.union([
    components.ErrorT$inboundSchema,
    z.array(components.Feedback$inboundSchema),
]);
/** @internal */
export const ListFeedbackResponse$outboundSchema = z.union([
    components.ErrorT$outboundSchema,
    z.array(components.Feedback$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListFeedbackResponse$;
(function (ListFeedbackResponse$) {
    /** @deprecated use `ListFeedbackResponse$inboundSchema` instead. */
    ListFeedbackResponse$.inboundSchema = ListFeedbackResponse$inboundSchema;
    /** @deprecated use `ListFeedbackResponse$outboundSchema` instead. */
    ListFeedbackResponse$.outboundSchema = ListFeedbackResponse$outboundSchema;
})(ListFeedbackResponse$ || (ListFeedbackResponse$ = {}));
export function listFeedbackResponseToJSON(listFeedbackResponse) {
    return JSON.stringify(ListFeedbackResponse$outboundSchema.parse(listFeedbackResponse));
}
export function listFeedbackResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListFeedbackResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListFeedbackResponse' from JSON`);
}
//# sourceMappingURL=listfeedback.js.map