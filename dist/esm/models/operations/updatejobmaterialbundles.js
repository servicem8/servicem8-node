/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const UpdateJobMaterialBundlesRequest$inboundSchema = z.object({
    uuid: z.string(),
    JobMaterialBundle: components.JobMaterialBundleInput$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "JobMaterialBundle": "jobMaterialBundle",
    });
});
/** @internal */
export const UpdateJobMaterialBundlesRequest$outboundSchema = z.object({
    uuid: z.string(),
    jobMaterialBundle: components.JobMaterialBundleInput$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        jobMaterialBundle: "JobMaterialBundle",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateJobMaterialBundlesRequest$;
(function (UpdateJobMaterialBundlesRequest$) {
    /** @deprecated use `UpdateJobMaterialBundlesRequest$inboundSchema` instead. */
    UpdateJobMaterialBundlesRequest$.inboundSchema = UpdateJobMaterialBundlesRequest$inboundSchema;
    /** @deprecated use `UpdateJobMaterialBundlesRequest$outboundSchema` instead. */
    UpdateJobMaterialBundlesRequest$.outboundSchema = UpdateJobMaterialBundlesRequest$outboundSchema;
})(UpdateJobMaterialBundlesRequest$ || (UpdateJobMaterialBundlesRequest$ = {}));
export function updateJobMaterialBundlesRequestToJSON(updateJobMaterialBundlesRequest) {
    return JSON.stringify(UpdateJobMaterialBundlesRequest$outboundSchema.parse(updateJobMaterialBundlesRequest));
}
export function updateJobMaterialBundlesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateJobMaterialBundlesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateJobMaterialBundlesRequest' from JSON`);
}
/** @internal */
export const UpdateJobMaterialBundlesResponse$inboundSchema = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);
/** @internal */
export const UpdateJobMaterialBundlesResponse$outboundSchema = z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateJobMaterialBundlesResponse$;
(function (UpdateJobMaterialBundlesResponse$) {
    /** @deprecated use `UpdateJobMaterialBundlesResponse$inboundSchema` instead. */
    UpdateJobMaterialBundlesResponse$.inboundSchema = UpdateJobMaterialBundlesResponse$inboundSchema;
    /** @deprecated use `UpdateJobMaterialBundlesResponse$outboundSchema` instead. */
    UpdateJobMaterialBundlesResponse$.outboundSchema = UpdateJobMaterialBundlesResponse$outboundSchema;
})(UpdateJobMaterialBundlesResponse$ || (UpdateJobMaterialBundlesResponse$ = {}));
export function updateJobMaterialBundlesResponseToJSON(updateJobMaterialBundlesResponse) {
    return JSON.stringify(UpdateJobMaterialBundlesResponse$outboundSchema.parse(updateJobMaterialBundlesResponse));
}
export function updateJobMaterialBundlesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateJobMaterialBundlesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateJobMaterialBundlesResponse' from JSON`);
}
//# sourceMappingURL=updatejobmaterialbundles.js.map