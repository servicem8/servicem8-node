/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { smsTemplatesCreateSMSTemplates } from "../../funcs/smsTemplatesCreateSMSTemplates.js";
import * as components from "../../models/components/index.js";
import { formatResult } from "../tools.js";
const args = {
    request: components.SmsTemplateInput$inboundSchema,
};
export const tool$smsTemplatesCreateSMSTemplates = {
    name: "SMS-templates-create-SMS-templates",
    description: `Create a new SMS Template


			
#### Record UUID
UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the response header as x-record-uuid.

			`,
    args,
    tool: async (client, args, ctx) => {
        const [result, apiCall] = await smsTemplatesCreateSMSTemplates(client, args.request, { fetchOptions: { signal: ctx.signal } }).$inspect();
        if (!result.ok) {
            return {
                content: [{ type: "text", text: result.error.message }],
                isError: true,
            };
        }
        const value = result.value.result;
        return formatResult(value, apiCall);
    },
};
//# sourceMappingURL=smsTemplatesCreateSMSTemplates.js.map