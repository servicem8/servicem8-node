/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { searchJobEmbeddingSearch } from "../../funcs/searchJobEmbeddingSearch.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.JobEmbeddingSearchRequest$inboundSchema,
};

export const tool$searchJobEmbeddingSearch: ToolDefinition<typeof args> = {
  name: "search-job-embedding-search",
  description: `Semantic search for jobs

Harness the power of advanced AI embeddings to revolutionise how you search through job data. This endpoint transforms your search query into high-dimensional vector embeddings, then intelligently matches it against our entire job database using semantic similarity algorithms.

How it works:
1. AI Query Understanding - Your search terms are processed through neural embedding models that understand context, intent, and meaning
2. Vector-Based Matching - The system compares your query against vector representations of all job content in real-time
3. Intelligent Ranking - Returns results ranked by semantic similarity, not just keyword matching

Why this matters:
- Find jobs about "plumbing repairs" even when searching for "fixing pipes"
- Discover relevant work orders that use different terminology but share the same intent
- Uncover hidden patterns and connections in your job data that traditional search would miss

This isn't just searchâ€”it's AI that truly understands what you're looking for and delivers the most relevant results, even when the exact words don't match.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await searchJobEmbeddingSearch(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
