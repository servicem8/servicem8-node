/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteJobMaterialBundlesSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type DeleteJobMaterialBundlesRequest = {
  /**
   * UUID of the Job Material Bundle
   */
  uuid: string;
};

export type DeleteJobMaterialBundlesResponse =
  | components.Result
  | components.ErrorT;

/** @internal */
export const DeleteJobMaterialBundlesSecurity$inboundSchema: z.ZodType<
  DeleteJobMaterialBundlesSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type DeleteJobMaterialBundlesSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const DeleteJobMaterialBundlesSecurity$outboundSchema: z.ZodType<
  DeleteJobMaterialBundlesSecurity$Outbound,
  z.ZodTypeDef,
  DeleteJobMaterialBundlesSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteJobMaterialBundlesSecurity$ {
  /** @deprecated use `DeleteJobMaterialBundlesSecurity$inboundSchema` instead. */
  export const inboundSchema = DeleteJobMaterialBundlesSecurity$inboundSchema;
  /** @deprecated use `DeleteJobMaterialBundlesSecurity$outboundSchema` instead. */
  export const outboundSchema = DeleteJobMaterialBundlesSecurity$outboundSchema;
  /** @deprecated use `DeleteJobMaterialBundlesSecurity$Outbound` instead. */
  export type Outbound = DeleteJobMaterialBundlesSecurity$Outbound;
}

export function deleteJobMaterialBundlesSecurityToJSON(
  deleteJobMaterialBundlesSecurity: DeleteJobMaterialBundlesSecurity,
): string {
  return JSON.stringify(
    DeleteJobMaterialBundlesSecurity$outboundSchema.parse(
      deleteJobMaterialBundlesSecurity,
    ),
  );
}

export function deleteJobMaterialBundlesSecurityFromJSON(
  jsonString: string,
): SafeParseResult<DeleteJobMaterialBundlesSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteJobMaterialBundlesSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteJobMaterialBundlesSecurity' from JSON`,
  );
}

/** @internal */
export const DeleteJobMaterialBundlesRequest$inboundSchema: z.ZodType<
  DeleteJobMaterialBundlesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type DeleteJobMaterialBundlesRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const DeleteJobMaterialBundlesRequest$outboundSchema: z.ZodType<
  DeleteJobMaterialBundlesRequest$Outbound,
  z.ZodTypeDef,
  DeleteJobMaterialBundlesRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteJobMaterialBundlesRequest$ {
  /** @deprecated use `DeleteJobMaterialBundlesRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteJobMaterialBundlesRequest$inboundSchema;
  /** @deprecated use `DeleteJobMaterialBundlesRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteJobMaterialBundlesRequest$outboundSchema;
  /** @deprecated use `DeleteJobMaterialBundlesRequest$Outbound` instead. */
  export type Outbound = DeleteJobMaterialBundlesRequest$Outbound;
}

export function deleteJobMaterialBundlesRequestToJSON(
  deleteJobMaterialBundlesRequest: DeleteJobMaterialBundlesRequest,
): string {
  return JSON.stringify(
    DeleteJobMaterialBundlesRequest$outboundSchema.parse(
      deleteJobMaterialBundlesRequest,
    ),
  );
}

export function deleteJobMaterialBundlesRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteJobMaterialBundlesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteJobMaterialBundlesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteJobMaterialBundlesRequest' from JSON`,
  );
}

/** @internal */
export const DeleteJobMaterialBundlesResponse$inboundSchema: z.ZodType<
  DeleteJobMaterialBundlesResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type DeleteJobMaterialBundlesResponse$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const DeleteJobMaterialBundlesResponse$outboundSchema: z.ZodType<
  DeleteJobMaterialBundlesResponse$Outbound,
  z.ZodTypeDef,
  DeleteJobMaterialBundlesResponse
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteJobMaterialBundlesResponse$ {
  /** @deprecated use `DeleteJobMaterialBundlesResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteJobMaterialBundlesResponse$inboundSchema;
  /** @deprecated use `DeleteJobMaterialBundlesResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteJobMaterialBundlesResponse$outboundSchema;
  /** @deprecated use `DeleteJobMaterialBundlesResponse$Outbound` instead. */
  export type Outbound = DeleteJobMaterialBundlesResponse$Outbound;
}

export function deleteJobMaterialBundlesResponseToJSON(
  deleteJobMaterialBundlesResponse: DeleteJobMaterialBundlesResponse,
): string {
  return JSON.stringify(
    DeleteJobMaterialBundlesResponse$outboundSchema.parse(
      deleteJobMaterialBundlesResponse,
    ),
  );
}

export function deleteJobMaterialBundlesResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteJobMaterialBundlesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteJobMaterialBundlesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteJobMaterialBundlesResponse' from JSON`,
  );
}
