/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetJobAllocationsRequest = {
  /**
   * UUID of the Job Allocation
   */
  uuid: string;
};

export type GetJobAllocationsResponse =
  | components.ErrorT
  | components.JobAllocation;

/** @internal */
export const GetJobAllocationsRequest$inboundSchema: z.ZodType<
  GetJobAllocationsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type GetJobAllocationsRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const GetJobAllocationsRequest$outboundSchema: z.ZodType<
  GetJobAllocationsRequest$Outbound,
  z.ZodTypeDef,
  GetJobAllocationsRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetJobAllocationsRequest$ {
  /** @deprecated use `GetJobAllocationsRequest$inboundSchema` instead. */
  export const inboundSchema = GetJobAllocationsRequest$inboundSchema;
  /** @deprecated use `GetJobAllocationsRequest$outboundSchema` instead. */
  export const outboundSchema = GetJobAllocationsRequest$outboundSchema;
  /** @deprecated use `GetJobAllocationsRequest$Outbound` instead. */
  export type Outbound = GetJobAllocationsRequest$Outbound;
}

export function getJobAllocationsRequestToJSON(
  getJobAllocationsRequest: GetJobAllocationsRequest,
): string {
  return JSON.stringify(
    GetJobAllocationsRequest$outboundSchema.parse(getJobAllocationsRequest),
  );
}

export function getJobAllocationsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetJobAllocationsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetJobAllocationsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetJobAllocationsRequest' from JSON`,
  );
}

/** @internal */
export const GetJobAllocationsResponse$inboundSchema: z.ZodType<
  GetJobAllocationsResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.ErrorT$inboundSchema,
  components.JobAllocation$inboundSchema,
]);

/** @internal */
export type GetJobAllocationsResponse$Outbound =
  | components.ErrorT$Outbound
  | components.JobAllocation$Outbound;

/** @internal */
export const GetJobAllocationsResponse$outboundSchema: z.ZodType<
  GetJobAllocationsResponse$Outbound,
  z.ZodTypeDef,
  GetJobAllocationsResponse
> = z.union([
  components.ErrorT$outboundSchema,
  components.JobAllocation$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetJobAllocationsResponse$ {
  /** @deprecated use `GetJobAllocationsResponse$inboundSchema` instead. */
  export const inboundSchema = GetJobAllocationsResponse$inboundSchema;
  /** @deprecated use `GetJobAllocationsResponse$outboundSchema` instead. */
  export const outboundSchema = GetJobAllocationsResponse$outboundSchema;
  /** @deprecated use `GetJobAllocationsResponse$Outbound` instead. */
  export type Outbound = GetJobAllocationsResponse$Outbound;
}

export function getJobAllocationsResponseToJSON(
  getJobAllocationsResponse: GetJobAllocationsResponse,
): string {
  return JSON.stringify(
    GetJobAllocationsResponse$outboundSchema.parse(getJobAllocationsResponse),
  );
}

export function getJobAllocationsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetJobAllocationsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetJobAllocationsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetJobAllocationsResponse' from JSON`,
  );
}
