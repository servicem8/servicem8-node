/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteJobsRequest = {
  /**
   * UUID of the Job
   */
  uuid: string;
};

/** @internal */
export const DeleteJobsRequest$inboundSchema: z.ZodType<
  DeleteJobsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type DeleteJobsRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const DeleteJobsRequest$outboundSchema: z.ZodType<
  DeleteJobsRequest$Outbound,
  z.ZodTypeDef,
  DeleteJobsRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteJobsRequest$ {
  /** @deprecated use `DeleteJobsRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteJobsRequest$inboundSchema;
  /** @deprecated use `DeleteJobsRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteJobsRequest$outboundSchema;
  /** @deprecated use `DeleteJobsRequest$Outbound` instead. */
  export type Outbound = DeleteJobsRequest$Outbound;
}

export function deleteJobsRequestToJSON(
  deleteJobsRequest: DeleteJobsRequest,
): string {
  return JSON.stringify(
    DeleteJobsRequest$outboundSchema.parse(deleteJobsRequest),
  );
}

export function deleteJobsRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteJobsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteJobsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteJobsRequest' from JSON`,
  );
}
