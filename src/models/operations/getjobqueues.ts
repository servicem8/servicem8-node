/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetJobQueuesSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type GetJobQueuesRequest = {
  /**
   * UUID of the Job Queue
   */
  uuid: string;
};

export type GetJobQueuesResponse = components.ErrorT | components.Queue;

/** @internal */
export const GetJobQueuesSecurity$inboundSchema: z.ZodType<
  GetJobQueuesSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type GetJobQueuesSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const GetJobQueuesSecurity$outboundSchema: z.ZodType<
  GetJobQueuesSecurity$Outbound,
  z.ZodTypeDef,
  GetJobQueuesSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetJobQueuesSecurity$ {
  /** @deprecated use `GetJobQueuesSecurity$inboundSchema` instead. */
  export const inboundSchema = GetJobQueuesSecurity$inboundSchema;
  /** @deprecated use `GetJobQueuesSecurity$outboundSchema` instead. */
  export const outboundSchema = GetJobQueuesSecurity$outboundSchema;
  /** @deprecated use `GetJobQueuesSecurity$Outbound` instead. */
  export type Outbound = GetJobQueuesSecurity$Outbound;
}

export function getJobQueuesSecurityToJSON(
  getJobQueuesSecurity: GetJobQueuesSecurity,
): string {
  return JSON.stringify(
    GetJobQueuesSecurity$outboundSchema.parse(getJobQueuesSecurity),
  );
}

export function getJobQueuesSecurityFromJSON(
  jsonString: string,
): SafeParseResult<GetJobQueuesSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetJobQueuesSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetJobQueuesSecurity' from JSON`,
  );
}

/** @internal */
export const GetJobQueuesRequest$inboundSchema: z.ZodType<
  GetJobQueuesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type GetJobQueuesRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const GetJobQueuesRequest$outboundSchema: z.ZodType<
  GetJobQueuesRequest$Outbound,
  z.ZodTypeDef,
  GetJobQueuesRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetJobQueuesRequest$ {
  /** @deprecated use `GetJobQueuesRequest$inboundSchema` instead. */
  export const inboundSchema = GetJobQueuesRequest$inboundSchema;
  /** @deprecated use `GetJobQueuesRequest$outboundSchema` instead. */
  export const outboundSchema = GetJobQueuesRequest$outboundSchema;
  /** @deprecated use `GetJobQueuesRequest$Outbound` instead. */
  export type Outbound = GetJobQueuesRequest$Outbound;
}

export function getJobQueuesRequestToJSON(
  getJobQueuesRequest: GetJobQueuesRequest,
): string {
  return JSON.stringify(
    GetJobQueuesRequest$outboundSchema.parse(getJobQueuesRequest),
  );
}

export function getJobQueuesRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetJobQueuesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetJobQueuesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetJobQueuesRequest' from JSON`,
  );
}

/** @internal */
export const GetJobQueuesResponse$inboundSchema: z.ZodType<
  GetJobQueuesResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.ErrorT$inboundSchema, components.Queue$inboundSchema]);

/** @internal */
export type GetJobQueuesResponse$Outbound =
  | components.ErrorT$Outbound
  | components.Queue$Outbound;

/** @internal */
export const GetJobQueuesResponse$outboundSchema: z.ZodType<
  GetJobQueuesResponse$Outbound,
  z.ZodTypeDef,
  GetJobQueuesResponse
> = z.union([
  components.ErrorT$outboundSchema,
  components.Queue$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetJobQueuesResponse$ {
  /** @deprecated use `GetJobQueuesResponse$inboundSchema` instead. */
  export const inboundSchema = GetJobQueuesResponse$inboundSchema;
  /** @deprecated use `GetJobQueuesResponse$outboundSchema` instead. */
  export const outboundSchema = GetJobQueuesResponse$outboundSchema;
  /** @deprecated use `GetJobQueuesResponse$Outbound` instead. */
  export type Outbound = GetJobQueuesResponse$Outbound;
}

export function getJobQueuesResponseToJSON(
  getJobQueuesResponse: GetJobQueuesResponse,
): string {
  return JSON.stringify(
    GetJobQueuesResponse$outboundSchema.parse(getJobQueuesResponse),
  );
}

export function getJobQueuesResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetJobQueuesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetJobQueuesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetJobQueuesResponse' from JSON`,
  );
}
