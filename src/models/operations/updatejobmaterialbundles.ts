/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateJobMaterialBundlesRequest = {
  /**
   * UUID of the Job Material Bundle
   */
  uuid: string;
  /**
   * Job Material Bundle fields to update
   */
  jobMaterialBundle: components.JobMaterialBundleInput;
};

export type UpdateJobMaterialBundlesResponse =
  | components.Result
  | components.ErrorT;

/** @internal */
export const UpdateJobMaterialBundlesRequest$inboundSchema: z.ZodType<
  UpdateJobMaterialBundlesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  JobMaterialBundle: components.JobMaterialBundleInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "JobMaterialBundle": "jobMaterialBundle",
  });
});

/** @internal */
export type UpdateJobMaterialBundlesRequest$Outbound = {
  uuid: string;
  JobMaterialBundle: components.JobMaterialBundleInput$Outbound;
};

/** @internal */
export const UpdateJobMaterialBundlesRequest$outboundSchema: z.ZodType<
  UpdateJobMaterialBundlesRequest$Outbound,
  z.ZodTypeDef,
  UpdateJobMaterialBundlesRequest
> = z.object({
  uuid: z.string(),
  jobMaterialBundle: components.JobMaterialBundleInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    jobMaterialBundle: "JobMaterialBundle",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateJobMaterialBundlesRequest$ {
  /** @deprecated use `UpdateJobMaterialBundlesRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateJobMaterialBundlesRequest$inboundSchema;
  /** @deprecated use `UpdateJobMaterialBundlesRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateJobMaterialBundlesRequest$outboundSchema;
  /** @deprecated use `UpdateJobMaterialBundlesRequest$Outbound` instead. */
  export type Outbound = UpdateJobMaterialBundlesRequest$Outbound;
}

export function updateJobMaterialBundlesRequestToJSON(
  updateJobMaterialBundlesRequest: UpdateJobMaterialBundlesRequest,
): string {
  return JSON.stringify(
    UpdateJobMaterialBundlesRequest$outboundSchema.parse(
      updateJobMaterialBundlesRequest,
    ),
  );
}

export function updateJobMaterialBundlesRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateJobMaterialBundlesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateJobMaterialBundlesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateJobMaterialBundlesRequest' from JSON`,
  );
}

/** @internal */
export const UpdateJobMaterialBundlesResponse$inboundSchema: z.ZodType<
  UpdateJobMaterialBundlesResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type UpdateJobMaterialBundlesResponse$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const UpdateJobMaterialBundlesResponse$outboundSchema: z.ZodType<
  UpdateJobMaterialBundlesResponse$Outbound,
  z.ZodTypeDef,
  UpdateJobMaterialBundlesResponse
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateJobMaterialBundlesResponse$ {
  /** @deprecated use `UpdateJobMaterialBundlesResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateJobMaterialBundlesResponse$inboundSchema;
  /** @deprecated use `UpdateJobMaterialBundlesResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateJobMaterialBundlesResponse$outboundSchema;
  /** @deprecated use `UpdateJobMaterialBundlesResponse$Outbound` instead. */
  export type Outbound = UpdateJobMaterialBundlesResponse$Outbound;
}

export function updateJobMaterialBundlesResponseToJSON(
  updateJobMaterialBundlesResponse: UpdateJobMaterialBundlesResponse,
): string {
  return JSON.stringify(
    UpdateJobMaterialBundlesResponse$outboundSchema.parse(
      updateJobMaterialBundlesResponse,
    ),
  );
}

export function updateJobMaterialBundlesResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateJobMaterialBundlesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateJobMaterialBundlesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateJobMaterialBundlesResponse' from JSON`,
  );
}
