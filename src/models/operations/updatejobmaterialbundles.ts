/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateJobMaterialBundlesRequest = {
  /**
   * UUID of the Job Material Bundle
   */
  uuid: string;
  /**
   * Job Material Bundle fields to update
   */
  jobMaterialBundleCreate: components.JobMaterialBundleCreate;
};

/** @internal */
export const UpdateJobMaterialBundlesRequest$inboundSchema: z.ZodType<
  UpdateJobMaterialBundlesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  JobMaterialBundleCreate: components.JobMaterialBundleCreate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "JobMaterialBundleCreate": "jobMaterialBundleCreate",
  });
});

/** @internal */
export type UpdateJobMaterialBundlesRequest$Outbound = {
  uuid: string;
  JobMaterialBundleCreate: components.JobMaterialBundleCreate$Outbound;
};

/** @internal */
export const UpdateJobMaterialBundlesRequest$outboundSchema: z.ZodType<
  UpdateJobMaterialBundlesRequest$Outbound,
  z.ZodTypeDef,
  UpdateJobMaterialBundlesRequest
> = z.object({
  uuid: z.string(),
  jobMaterialBundleCreate: components.JobMaterialBundleCreate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    jobMaterialBundleCreate: "JobMaterialBundleCreate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateJobMaterialBundlesRequest$ {
  /** @deprecated use `UpdateJobMaterialBundlesRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateJobMaterialBundlesRequest$inboundSchema;
  /** @deprecated use `UpdateJobMaterialBundlesRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateJobMaterialBundlesRequest$outboundSchema;
  /** @deprecated use `UpdateJobMaterialBundlesRequest$Outbound` instead. */
  export type Outbound = UpdateJobMaterialBundlesRequest$Outbound;
}

export function updateJobMaterialBundlesRequestToJSON(
  updateJobMaterialBundlesRequest: UpdateJobMaterialBundlesRequest,
): string {
  return JSON.stringify(
    UpdateJobMaterialBundlesRequest$outboundSchema.parse(
      updateJobMaterialBundlesRequest,
    ),
  );
}

export function updateJobMaterialBundlesRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateJobMaterialBundlesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateJobMaterialBundlesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateJobMaterialBundlesRequest' from JSON`,
  );
}
