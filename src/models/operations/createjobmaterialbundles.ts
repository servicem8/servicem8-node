/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateJobMaterialBundlesSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type CreateJobMaterialBundlesResponseResult =
  | components.Result
  | components.ErrorT;

export type CreateJobMaterialBundlesResponse = {
  headers: { [k: string]: Array<string> };
  result: components.Result | components.ErrorT;
};

/** @internal */
export const CreateJobMaterialBundlesSecurity$inboundSchema: z.ZodType<
  CreateJobMaterialBundlesSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type CreateJobMaterialBundlesSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const CreateJobMaterialBundlesSecurity$outboundSchema: z.ZodType<
  CreateJobMaterialBundlesSecurity$Outbound,
  z.ZodTypeDef,
  CreateJobMaterialBundlesSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateJobMaterialBundlesSecurity$ {
  /** @deprecated use `CreateJobMaterialBundlesSecurity$inboundSchema` instead. */
  export const inboundSchema = CreateJobMaterialBundlesSecurity$inboundSchema;
  /** @deprecated use `CreateJobMaterialBundlesSecurity$outboundSchema` instead. */
  export const outboundSchema = CreateJobMaterialBundlesSecurity$outboundSchema;
  /** @deprecated use `CreateJobMaterialBundlesSecurity$Outbound` instead. */
  export type Outbound = CreateJobMaterialBundlesSecurity$Outbound;
}

export function createJobMaterialBundlesSecurityToJSON(
  createJobMaterialBundlesSecurity: CreateJobMaterialBundlesSecurity,
): string {
  return JSON.stringify(
    CreateJobMaterialBundlesSecurity$outboundSchema.parse(
      createJobMaterialBundlesSecurity,
    ),
  );
}

export function createJobMaterialBundlesSecurityFromJSON(
  jsonString: string,
): SafeParseResult<CreateJobMaterialBundlesSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateJobMaterialBundlesSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateJobMaterialBundlesSecurity' from JSON`,
  );
}

/** @internal */
export const CreateJobMaterialBundlesResponseResult$inboundSchema: z.ZodType<
  CreateJobMaterialBundlesResponseResult,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type CreateJobMaterialBundlesResponseResult$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const CreateJobMaterialBundlesResponseResult$outboundSchema: z.ZodType<
  CreateJobMaterialBundlesResponseResult$Outbound,
  z.ZodTypeDef,
  CreateJobMaterialBundlesResponseResult
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateJobMaterialBundlesResponseResult$ {
  /** @deprecated use `CreateJobMaterialBundlesResponseResult$inboundSchema` instead. */
  export const inboundSchema =
    CreateJobMaterialBundlesResponseResult$inboundSchema;
  /** @deprecated use `CreateJobMaterialBundlesResponseResult$outboundSchema` instead. */
  export const outboundSchema =
    CreateJobMaterialBundlesResponseResult$outboundSchema;
  /** @deprecated use `CreateJobMaterialBundlesResponseResult$Outbound` instead. */
  export type Outbound = CreateJobMaterialBundlesResponseResult$Outbound;
}

export function createJobMaterialBundlesResponseResultToJSON(
  createJobMaterialBundlesResponseResult:
    CreateJobMaterialBundlesResponseResult,
): string {
  return JSON.stringify(
    CreateJobMaterialBundlesResponseResult$outboundSchema.parse(
      createJobMaterialBundlesResponseResult,
    ),
  );
}

export function createJobMaterialBundlesResponseResultFromJSON(
  jsonString: string,
): SafeParseResult<CreateJobMaterialBundlesResponseResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateJobMaterialBundlesResponseResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateJobMaterialBundlesResponseResult' from JSON`,
  );
}

/** @internal */
export const CreateJobMaterialBundlesResponse$inboundSchema: z.ZodType<
  CreateJobMaterialBundlesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: z.union([
    components.Result$inboundSchema,
    components.ErrorT$inboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type CreateJobMaterialBundlesResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result: components.Result$Outbound | components.ErrorT$Outbound;
};

/** @internal */
export const CreateJobMaterialBundlesResponse$outboundSchema: z.ZodType<
  CreateJobMaterialBundlesResponse$Outbound,
  z.ZodTypeDef,
  CreateJobMaterialBundlesResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateJobMaterialBundlesResponse$ {
  /** @deprecated use `CreateJobMaterialBundlesResponse$inboundSchema` instead. */
  export const inboundSchema = CreateJobMaterialBundlesResponse$inboundSchema;
  /** @deprecated use `CreateJobMaterialBundlesResponse$outboundSchema` instead. */
  export const outboundSchema = CreateJobMaterialBundlesResponse$outboundSchema;
  /** @deprecated use `CreateJobMaterialBundlesResponse$Outbound` instead. */
  export type Outbound = CreateJobMaterialBundlesResponse$Outbound;
}

export function createJobMaterialBundlesResponseToJSON(
  createJobMaterialBundlesResponse: CreateJobMaterialBundlesResponse,
): string {
  return JSON.stringify(
    CreateJobMaterialBundlesResponse$outboundSchema.parse(
      createJobMaterialBundlesResponse,
    ),
  );
}

export function createJobMaterialBundlesResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateJobMaterialBundlesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateJobMaterialBundlesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateJobMaterialBundlesResponse' from JSON`,
  );
}
