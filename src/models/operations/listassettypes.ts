/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListAssetTypesResponse =
  | components.ErrorT
  | Array<components.AssetType>;

/** @internal */
export const ListAssetTypesResponse$inboundSchema: z.ZodType<
  ListAssetTypesResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.ErrorT$inboundSchema,
  z.array(components.AssetType$inboundSchema),
]);

/** @internal */
export type ListAssetTypesResponse$Outbound =
  | components.ErrorT$Outbound
  | Array<components.AssetType$Outbound>;

/** @internal */
export const ListAssetTypesResponse$outboundSchema: z.ZodType<
  ListAssetTypesResponse$Outbound,
  z.ZodTypeDef,
  ListAssetTypesResponse
> = z.union([
  components.ErrorT$outboundSchema,
  z.array(components.AssetType$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAssetTypesResponse$ {
  /** @deprecated use `ListAssetTypesResponse$inboundSchema` instead. */
  export const inboundSchema = ListAssetTypesResponse$inboundSchema;
  /** @deprecated use `ListAssetTypesResponse$outboundSchema` instead. */
  export const outboundSchema = ListAssetTypesResponse$outboundSchema;
  /** @deprecated use `ListAssetTypesResponse$Outbound` instead. */
  export type Outbound = ListAssetTypesResponse$Outbound;
}

export function listAssetTypesResponseToJSON(
  listAssetTypesResponse: ListAssetTypesResponse,
): string {
  return JSON.stringify(
    ListAssetTypesResponse$outboundSchema.parse(listAssetTypesResponse),
  );
}

export function listAssetTypesResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListAssetTypesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListAssetTypesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListAssetTypesResponse' from JSON`,
  );
}
