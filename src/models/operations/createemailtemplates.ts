/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateEmailTemplatesResponseResult =
  | components.Result
  | components.ErrorT;

export type CreateEmailTemplatesResponse = {
  headers: { [k: string]: Array<string> };
  result: components.Result | components.ErrorT;
};

/** @internal */
export const CreateEmailTemplatesResponseResult$inboundSchema: z.ZodType<
  CreateEmailTemplatesResponseResult,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type CreateEmailTemplatesResponseResult$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const CreateEmailTemplatesResponseResult$outboundSchema: z.ZodType<
  CreateEmailTemplatesResponseResult$Outbound,
  z.ZodTypeDef,
  CreateEmailTemplatesResponseResult
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmailTemplatesResponseResult$ {
  /** @deprecated use `CreateEmailTemplatesResponseResult$inboundSchema` instead. */
  export const inboundSchema = CreateEmailTemplatesResponseResult$inboundSchema;
  /** @deprecated use `CreateEmailTemplatesResponseResult$outboundSchema` instead. */
  export const outboundSchema =
    CreateEmailTemplatesResponseResult$outboundSchema;
  /** @deprecated use `CreateEmailTemplatesResponseResult$Outbound` instead. */
  export type Outbound = CreateEmailTemplatesResponseResult$Outbound;
}

export function createEmailTemplatesResponseResultToJSON(
  createEmailTemplatesResponseResult: CreateEmailTemplatesResponseResult,
): string {
  return JSON.stringify(
    CreateEmailTemplatesResponseResult$outboundSchema.parse(
      createEmailTemplatesResponseResult,
    ),
  );
}

export function createEmailTemplatesResponseResultFromJSON(
  jsonString: string,
): SafeParseResult<CreateEmailTemplatesResponseResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEmailTemplatesResponseResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEmailTemplatesResponseResult' from JSON`,
  );
}

/** @internal */
export const CreateEmailTemplatesResponse$inboundSchema: z.ZodType<
  CreateEmailTemplatesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: z.union([
    components.Result$inboundSchema,
    components.ErrorT$inboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type CreateEmailTemplatesResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result: components.Result$Outbound | components.ErrorT$Outbound;
};

/** @internal */
export const CreateEmailTemplatesResponse$outboundSchema: z.ZodType<
  CreateEmailTemplatesResponse$Outbound,
  z.ZodTypeDef,
  CreateEmailTemplatesResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEmailTemplatesResponse$ {
  /** @deprecated use `CreateEmailTemplatesResponse$inboundSchema` instead. */
  export const inboundSchema = CreateEmailTemplatesResponse$inboundSchema;
  /** @deprecated use `CreateEmailTemplatesResponse$outboundSchema` instead. */
  export const outboundSchema = CreateEmailTemplatesResponse$outboundSchema;
  /** @deprecated use `CreateEmailTemplatesResponse$Outbound` instead. */
  export type Outbound = CreateEmailTemplatesResponse$Outbound;
}

export function createEmailTemplatesResponseToJSON(
  createEmailTemplatesResponse: CreateEmailTemplatesResponse,
): string {
  return JSON.stringify(
    CreateEmailTemplatesResponse$outboundSchema.parse(
      createEmailTemplatesResponse,
    ),
  );
}

export function createEmailTemplatesResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateEmailTemplatesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEmailTemplatesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEmailTemplatesResponse' from JSON`,
  );
}
