/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteJobPaymentsRequest = {
  /**
   * UUID of the Job Payment
   */
  uuid: string;
};

/** @internal */
export const DeleteJobPaymentsRequest$inboundSchema: z.ZodType<
  DeleteJobPaymentsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type DeleteJobPaymentsRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const DeleteJobPaymentsRequest$outboundSchema: z.ZodType<
  DeleteJobPaymentsRequest$Outbound,
  z.ZodTypeDef,
  DeleteJobPaymentsRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteJobPaymentsRequest$ {
  /** @deprecated use `DeleteJobPaymentsRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteJobPaymentsRequest$inboundSchema;
  /** @deprecated use `DeleteJobPaymentsRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteJobPaymentsRequest$outboundSchema;
  /** @deprecated use `DeleteJobPaymentsRequest$Outbound` instead. */
  export type Outbound = DeleteJobPaymentsRequest$Outbound;
}

export function deleteJobPaymentsRequestToJSON(
  deleteJobPaymentsRequest: DeleteJobPaymentsRequest,
): string {
  return JSON.stringify(
    DeleteJobPaymentsRequest$outboundSchema.parse(deleteJobPaymentsRequest),
  );
}

export function deleteJobPaymentsRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteJobPaymentsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteJobPaymentsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteJobPaymentsRequest' from JSON`,
  );
}
