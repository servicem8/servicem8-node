/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateAssetsSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type UpdateAssetsRequest = {
  /**
   * UUID of the Asset
   */
  uuid: string;
  /**
   * Asset fields to update
   */
  asset: components.AssetInput;
};

export type UpdateAssetsResponse = components.Result | components.ErrorT;

/** @internal */
export const UpdateAssetsSecurity$inboundSchema: z.ZodType<
  UpdateAssetsSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type UpdateAssetsSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const UpdateAssetsSecurity$outboundSchema: z.ZodType<
  UpdateAssetsSecurity$Outbound,
  z.ZodTypeDef,
  UpdateAssetsSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAssetsSecurity$ {
  /** @deprecated use `UpdateAssetsSecurity$inboundSchema` instead. */
  export const inboundSchema = UpdateAssetsSecurity$inboundSchema;
  /** @deprecated use `UpdateAssetsSecurity$outboundSchema` instead. */
  export const outboundSchema = UpdateAssetsSecurity$outboundSchema;
  /** @deprecated use `UpdateAssetsSecurity$Outbound` instead. */
  export type Outbound = UpdateAssetsSecurity$Outbound;
}

export function updateAssetsSecurityToJSON(
  updateAssetsSecurity: UpdateAssetsSecurity,
): string {
  return JSON.stringify(
    UpdateAssetsSecurity$outboundSchema.parse(updateAssetsSecurity),
  );
}

export function updateAssetsSecurityFromJSON(
  jsonString: string,
): SafeParseResult<UpdateAssetsSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateAssetsSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateAssetsSecurity' from JSON`,
  );
}

/** @internal */
export const UpdateAssetsRequest$inboundSchema: z.ZodType<
  UpdateAssetsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  Asset: components.AssetInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Asset": "asset",
  });
});

/** @internal */
export type UpdateAssetsRequest$Outbound = {
  uuid: string;
  Asset: components.AssetInput$Outbound;
};

/** @internal */
export const UpdateAssetsRequest$outboundSchema: z.ZodType<
  UpdateAssetsRequest$Outbound,
  z.ZodTypeDef,
  UpdateAssetsRequest
> = z.object({
  uuid: z.string(),
  asset: components.AssetInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    asset: "Asset",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAssetsRequest$ {
  /** @deprecated use `UpdateAssetsRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateAssetsRequest$inboundSchema;
  /** @deprecated use `UpdateAssetsRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateAssetsRequest$outboundSchema;
  /** @deprecated use `UpdateAssetsRequest$Outbound` instead. */
  export type Outbound = UpdateAssetsRequest$Outbound;
}

export function updateAssetsRequestToJSON(
  updateAssetsRequest: UpdateAssetsRequest,
): string {
  return JSON.stringify(
    UpdateAssetsRequest$outboundSchema.parse(updateAssetsRequest),
  );
}

export function updateAssetsRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateAssetsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateAssetsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateAssetsRequest' from JSON`,
  );
}

/** @internal */
export const UpdateAssetsResponse$inboundSchema: z.ZodType<
  UpdateAssetsResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type UpdateAssetsResponse$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const UpdateAssetsResponse$outboundSchema: z.ZodType<
  UpdateAssetsResponse$Outbound,
  z.ZodTypeDef,
  UpdateAssetsResponse
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAssetsResponse$ {
  /** @deprecated use `UpdateAssetsResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateAssetsResponse$inboundSchema;
  /** @deprecated use `UpdateAssetsResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateAssetsResponse$outboundSchema;
  /** @deprecated use `UpdateAssetsResponse$Outbound` instead. */
  export type Outbound = UpdateAssetsResponse$Outbound;
}

export function updateAssetsResponseToJSON(
  updateAssetsResponse: UpdateAssetsResponse,
): string {
  return JSON.stringify(
    UpdateAssetsResponse$outboundSchema.parse(updateAssetsResponse),
  );
}

export function updateAssetsResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateAssetsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateAssetsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateAssetsResponse' from JSON`,
  );
}
