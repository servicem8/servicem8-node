/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetJobContactsRequest = {
  /**
   * UUID of the Job Contact
   */
  uuid: string;
};

/** @internal */
export const GetJobContactsRequest$inboundSchema: z.ZodType<
  GetJobContactsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type GetJobContactsRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const GetJobContactsRequest$outboundSchema: z.ZodType<
  GetJobContactsRequest$Outbound,
  z.ZodTypeDef,
  GetJobContactsRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetJobContactsRequest$ {
  /** @deprecated use `GetJobContactsRequest$inboundSchema` instead. */
  export const inboundSchema = GetJobContactsRequest$inboundSchema;
  /** @deprecated use `GetJobContactsRequest$outboundSchema` instead. */
  export const outboundSchema = GetJobContactsRequest$outboundSchema;
  /** @deprecated use `GetJobContactsRequest$Outbound` instead. */
  export type Outbound = GetJobContactsRequest$Outbound;
}

export function getJobContactsRequestToJSON(
  getJobContactsRequest: GetJobContactsRequest,
): string {
  return JSON.stringify(
    GetJobContactsRequest$outboundSchema.parse(getJobContactsRequest),
  );
}

export function getJobContactsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetJobContactsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetJobContactsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetJobContactsRequest' from JSON`,
  );
}
