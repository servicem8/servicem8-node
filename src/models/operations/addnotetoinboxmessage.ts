/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AddNoteToInboxMessageRequest = {
  /**
   * UUID of the inbox message
   */
  uuid: string;
  addNoteRequest: components.AddNoteRequest;
};

/** @internal */
export const AddNoteToInboxMessageRequest$inboundSchema: z.ZodType<
  AddNoteToInboxMessageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  AddNoteRequest: components.AddNoteRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "AddNoteRequest": "addNoteRequest",
  });
});

/** @internal */
export type AddNoteToInboxMessageRequest$Outbound = {
  uuid: string;
  AddNoteRequest: components.AddNoteRequest$Outbound;
};

/** @internal */
export const AddNoteToInboxMessageRequest$outboundSchema: z.ZodType<
  AddNoteToInboxMessageRequest$Outbound,
  z.ZodTypeDef,
  AddNoteToInboxMessageRequest
> = z.object({
  uuid: z.string(),
  addNoteRequest: components.AddNoteRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    addNoteRequest: "AddNoteRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddNoteToInboxMessageRequest$ {
  /** @deprecated use `AddNoteToInboxMessageRequest$inboundSchema` instead. */
  export const inboundSchema = AddNoteToInboxMessageRequest$inboundSchema;
  /** @deprecated use `AddNoteToInboxMessageRequest$outboundSchema` instead. */
  export const outboundSchema = AddNoteToInboxMessageRequest$outboundSchema;
  /** @deprecated use `AddNoteToInboxMessageRequest$Outbound` instead. */
  export type Outbound = AddNoteToInboxMessageRequest$Outbound;
}

export function addNoteToInboxMessageRequestToJSON(
  addNoteToInboxMessageRequest: AddNoteToInboxMessageRequest,
): string {
  return JSON.stringify(
    AddNoteToInboxMessageRequest$outboundSchema.parse(
      addNoteToInboxMessageRequest,
    ),
  );
}

export function addNoteToInboxMessageRequestFromJSON(
  jsonString: string,
): SafeParseResult<AddNoteToInboxMessageRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AddNoteToInboxMessageRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AddNoteToInboxMessageRequest' from JSON`,
  );
}
