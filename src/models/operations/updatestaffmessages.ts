/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateStaffMessagesRequest = {
  /**
   * UUID of the Staff Message
   */
  uuid: string;
  /**
   * Staff Message fields to update
   */
  staffMessage: components.StaffMessageInput;
};

/** @internal */
export const UpdateStaffMessagesRequest$inboundSchema: z.ZodType<
  UpdateStaffMessagesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  StaffMessage: components.StaffMessageInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "StaffMessage": "staffMessage",
  });
});

/** @internal */
export type UpdateStaffMessagesRequest$Outbound = {
  uuid: string;
  StaffMessage: components.StaffMessageInput$Outbound;
};

/** @internal */
export const UpdateStaffMessagesRequest$outboundSchema: z.ZodType<
  UpdateStaffMessagesRequest$Outbound,
  z.ZodTypeDef,
  UpdateStaffMessagesRequest
> = z.object({
  uuid: z.string(),
  staffMessage: components.StaffMessageInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    staffMessage: "StaffMessage",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateStaffMessagesRequest$ {
  /** @deprecated use `UpdateStaffMessagesRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateStaffMessagesRequest$inboundSchema;
  /** @deprecated use `UpdateStaffMessagesRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateStaffMessagesRequest$outboundSchema;
  /** @deprecated use `UpdateStaffMessagesRequest$Outbound` instead. */
  export type Outbound = UpdateStaffMessagesRequest$Outbound;
}

export function updateStaffMessagesRequestToJSON(
  updateStaffMessagesRequest: UpdateStaffMessagesRequest,
): string {
  return JSON.stringify(
    UpdateStaffMessagesRequest$outboundSchema.parse(updateStaffMessagesRequest),
  );
}

export function updateStaffMessagesRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateStaffMessagesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateStaffMessagesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateStaffMessagesRequest' from JSON`,
  );
}
