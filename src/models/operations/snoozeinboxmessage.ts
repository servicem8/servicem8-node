/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SnoozeInboxMessageRequest = {
  /**
   * UUID of the inbox message
   */
  uuid: string;
  snoozeRequest: components.SnoozeRequest;
};

/** @internal */
export const SnoozeInboxMessageRequest$inboundSchema: z.ZodType<
  SnoozeInboxMessageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  SnoozeRequest: components.SnoozeRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "SnoozeRequest": "snoozeRequest",
  });
});

/** @internal */
export type SnoozeInboxMessageRequest$Outbound = {
  uuid: string;
  SnoozeRequest: components.SnoozeRequest$Outbound;
};

/** @internal */
export const SnoozeInboxMessageRequest$outboundSchema: z.ZodType<
  SnoozeInboxMessageRequest$Outbound,
  z.ZodTypeDef,
  SnoozeInboxMessageRequest
> = z.object({
  uuid: z.string(),
  snoozeRequest: components.SnoozeRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    snoozeRequest: "SnoozeRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SnoozeInboxMessageRequest$ {
  /** @deprecated use `SnoozeInboxMessageRequest$inboundSchema` instead. */
  export const inboundSchema = SnoozeInboxMessageRequest$inboundSchema;
  /** @deprecated use `SnoozeInboxMessageRequest$outboundSchema` instead. */
  export const outboundSchema = SnoozeInboxMessageRequest$outboundSchema;
  /** @deprecated use `SnoozeInboxMessageRequest$Outbound` instead. */
  export type Outbound = SnoozeInboxMessageRequest$Outbound;
}

export function snoozeInboxMessageRequestToJSON(
  snoozeInboxMessageRequest: SnoozeInboxMessageRequest,
): string {
  return JSON.stringify(
    SnoozeInboxMessageRequest$outboundSchema.parse(snoozeInboxMessageRequest),
  );
}

export function snoozeInboxMessageRequestFromJSON(
  jsonString: string,
): SafeParseResult<SnoozeInboxMessageRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SnoozeInboxMessageRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SnoozeInboxMessageRequest' from JSON`,
  );
}
