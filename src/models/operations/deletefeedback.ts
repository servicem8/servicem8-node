/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteFeedbackRequest = {
  /**
   * UUID of the Feedback
   */
  uuid: string;
};

/** @internal */
export const DeleteFeedbackRequest$inboundSchema: z.ZodType<
  DeleteFeedbackRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type DeleteFeedbackRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const DeleteFeedbackRequest$outboundSchema: z.ZodType<
  DeleteFeedbackRequest$Outbound,
  z.ZodTypeDef,
  DeleteFeedbackRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteFeedbackRequest$ {
  /** @deprecated use `DeleteFeedbackRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteFeedbackRequest$inboundSchema;
  /** @deprecated use `DeleteFeedbackRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteFeedbackRequest$outboundSchema;
  /** @deprecated use `DeleteFeedbackRequest$Outbound` instead. */
  export type Outbound = DeleteFeedbackRequest$Outbound;
}

export function deleteFeedbackRequestToJSON(
  deleteFeedbackRequest: DeleteFeedbackRequest,
): string {
  return JSON.stringify(
    DeleteFeedbackRequest$outboundSchema.parse(deleteFeedbackRequest),
  );
}

export function deleteFeedbackRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteFeedbackRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteFeedbackRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteFeedbackRequest' from JSON`,
  );
}
