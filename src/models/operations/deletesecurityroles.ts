/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteSecurityRolesRequest = {
  /**
   * UUID of the Security Role
   */
  uuid: string;
};

export type DeleteSecurityRolesResponse = components.Result | components.ErrorT;

/** @internal */
export const DeleteSecurityRolesRequest$inboundSchema: z.ZodType<
  DeleteSecurityRolesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type DeleteSecurityRolesRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const DeleteSecurityRolesRequest$outboundSchema: z.ZodType<
  DeleteSecurityRolesRequest$Outbound,
  z.ZodTypeDef,
  DeleteSecurityRolesRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteSecurityRolesRequest$ {
  /** @deprecated use `DeleteSecurityRolesRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteSecurityRolesRequest$inboundSchema;
  /** @deprecated use `DeleteSecurityRolesRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteSecurityRolesRequest$outboundSchema;
  /** @deprecated use `DeleteSecurityRolesRequest$Outbound` instead. */
  export type Outbound = DeleteSecurityRolesRequest$Outbound;
}

export function deleteSecurityRolesRequestToJSON(
  deleteSecurityRolesRequest: DeleteSecurityRolesRequest,
): string {
  return JSON.stringify(
    DeleteSecurityRolesRequest$outboundSchema.parse(deleteSecurityRolesRequest),
  );
}

export function deleteSecurityRolesRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteSecurityRolesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteSecurityRolesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteSecurityRolesRequest' from JSON`,
  );
}

/** @internal */
export const DeleteSecurityRolesResponse$inboundSchema: z.ZodType<
  DeleteSecurityRolesResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type DeleteSecurityRolesResponse$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const DeleteSecurityRolesResponse$outboundSchema: z.ZodType<
  DeleteSecurityRolesResponse$Outbound,
  z.ZodTypeDef,
  DeleteSecurityRolesResponse
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteSecurityRolesResponse$ {
  /** @deprecated use `DeleteSecurityRolesResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteSecurityRolesResponse$inboundSchema;
  /** @deprecated use `DeleteSecurityRolesResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteSecurityRolesResponse$outboundSchema;
  /** @deprecated use `DeleteSecurityRolesResponse$Outbound` instead. */
  export type Outbound = DeleteSecurityRolesResponse$Outbound;
}

export function deleteSecurityRolesResponseToJSON(
  deleteSecurityRolesResponse: DeleteSecurityRolesResponse,
): string {
  return JSON.stringify(
    DeleteSecurityRolesResponse$outboundSchema.parse(
      deleteSecurityRolesResponse,
    ),
  );
}

export function deleteSecurityRolesResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteSecurityRolesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteSecurityRolesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteSecurityRolesResponse' from JSON`,
  );
}
