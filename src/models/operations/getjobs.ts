/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetJobsSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type GetJobsRequest = {
  /**
   * UUID of the Job
   */
  uuid: string;
};

export type GetJobsResponse = components.ErrorT | components.Job;

/** @internal */
export const GetJobsSecurity$inboundSchema: z.ZodType<
  GetJobsSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type GetJobsSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const GetJobsSecurity$outboundSchema: z.ZodType<
  GetJobsSecurity$Outbound,
  z.ZodTypeDef,
  GetJobsSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetJobsSecurity$ {
  /** @deprecated use `GetJobsSecurity$inboundSchema` instead. */
  export const inboundSchema = GetJobsSecurity$inboundSchema;
  /** @deprecated use `GetJobsSecurity$outboundSchema` instead. */
  export const outboundSchema = GetJobsSecurity$outboundSchema;
  /** @deprecated use `GetJobsSecurity$Outbound` instead. */
  export type Outbound = GetJobsSecurity$Outbound;
}

export function getJobsSecurityToJSON(
  getJobsSecurity: GetJobsSecurity,
): string {
  return JSON.stringify(GetJobsSecurity$outboundSchema.parse(getJobsSecurity));
}

export function getJobsSecurityFromJSON(
  jsonString: string,
): SafeParseResult<GetJobsSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetJobsSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetJobsSecurity' from JSON`,
  );
}

/** @internal */
export const GetJobsRequest$inboundSchema: z.ZodType<
  GetJobsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type GetJobsRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const GetJobsRequest$outboundSchema: z.ZodType<
  GetJobsRequest$Outbound,
  z.ZodTypeDef,
  GetJobsRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetJobsRequest$ {
  /** @deprecated use `GetJobsRequest$inboundSchema` instead. */
  export const inboundSchema = GetJobsRequest$inboundSchema;
  /** @deprecated use `GetJobsRequest$outboundSchema` instead. */
  export const outboundSchema = GetJobsRequest$outboundSchema;
  /** @deprecated use `GetJobsRequest$Outbound` instead. */
  export type Outbound = GetJobsRequest$Outbound;
}

export function getJobsRequestToJSON(getJobsRequest: GetJobsRequest): string {
  return JSON.stringify(GetJobsRequest$outboundSchema.parse(getJobsRequest));
}

export function getJobsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetJobsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetJobsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetJobsRequest' from JSON`,
  );
}

/** @internal */
export const GetJobsResponse$inboundSchema: z.ZodType<
  GetJobsResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.ErrorT$inboundSchema, components.Job$inboundSchema]);

/** @internal */
export type GetJobsResponse$Outbound =
  | components.ErrorT$Outbound
  | components.Job$Outbound;

/** @internal */
export const GetJobsResponse$outboundSchema: z.ZodType<
  GetJobsResponse$Outbound,
  z.ZodTypeDef,
  GetJobsResponse
> = z.union([components.ErrorT$outboundSchema, components.Job$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetJobsResponse$ {
  /** @deprecated use `GetJobsResponse$inboundSchema` instead. */
  export const inboundSchema = GetJobsResponse$inboundSchema;
  /** @deprecated use `GetJobsResponse$outboundSchema` instead. */
  export const outboundSchema = GetJobsResponse$outboundSchema;
  /** @deprecated use `GetJobsResponse$Outbound` instead. */
  export type Outbound = GetJobsResponse$Outbound;
}

export function getJobsResponseToJSON(
  getJobsResponse: GetJobsResponse,
): string {
  return JSON.stringify(GetJobsResponse$outboundSchema.parse(getJobsResponse));
}

export function getJobsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetJobsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetJobsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetJobsResponse' from JSON`,
  );
}
