/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetNotesRequest = {
  /**
   * UUID of the Note
   */
  uuid: string;
};

/** @internal */
export const GetNotesRequest$inboundSchema: z.ZodType<
  GetNotesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type GetNotesRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const GetNotesRequest$outboundSchema: z.ZodType<
  GetNotesRequest$Outbound,
  z.ZodTypeDef,
  GetNotesRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetNotesRequest$ {
  /** @deprecated use `GetNotesRequest$inboundSchema` instead. */
  export const inboundSchema = GetNotesRequest$inboundSchema;
  /** @deprecated use `GetNotesRequest$outboundSchema` instead. */
  export const outboundSchema = GetNotesRequest$outboundSchema;
  /** @deprecated use `GetNotesRequest$Outbound` instead. */
  export type Outbound = GetNotesRequest$Outbound;
}

export function getNotesRequestToJSON(
  getNotesRequest: GetNotesRequest,
): string {
  return JSON.stringify(GetNotesRequest$outboundSchema.parse(getNotesRequest));
}

export function getNotesRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetNotesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetNotesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetNotesRequest' from JSON`,
  );
}
