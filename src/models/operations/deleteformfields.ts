/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteFormFieldsRequest = {
  /**
   * UUID of the Form Field
   */
  uuid: string;
};

/** @internal */
export const DeleteFormFieldsRequest$inboundSchema: z.ZodType<
  DeleteFormFieldsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type DeleteFormFieldsRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const DeleteFormFieldsRequest$outboundSchema: z.ZodType<
  DeleteFormFieldsRequest$Outbound,
  z.ZodTypeDef,
  DeleteFormFieldsRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteFormFieldsRequest$ {
  /** @deprecated use `DeleteFormFieldsRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteFormFieldsRequest$inboundSchema;
  /** @deprecated use `DeleteFormFieldsRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteFormFieldsRequest$outboundSchema;
  /** @deprecated use `DeleteFormFieldsRequest$Outbound` instead. */
  export type Outbound = DeleteFormFieldsRequest$Outbound;
}

export function deleteFormFieldsRequestToJSON(
  deleteFormFieldsRequest: DeleteFormFieldsRequest,
): string {
  return JSON.stringify(
    DeleteFormFieldsRequest$outboundSchema.parse(deleteFormFieldsRequest),
  );
}

export function deleteFormFieldsRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteFormFieldsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteFormFieldsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteFormFieldsRequest' from JSON`,
  );
}
