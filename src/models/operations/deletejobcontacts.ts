/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteJobContactsRequest = {
  /**
   * UUID of the Job Contact
   */
  uuid: string;
};

/** @internal */
export const DeleteJobContactsRequest$inboundSchema: z.ZodType<
  DeleteJobContactsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type DeleteJobContactsRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const DeleteJobContactsRequest$outboundSchema: z.ZodType<
  DeleteJobContactsRequest$Outbound,
  z.ZodTypeDef,
  DeleteJobContactsRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteJobContactsRequest$ {
  /** @deprecated use `DeleteJobContactsRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteJobContactsRequest$inboundSchema;
  /** @deprecated use `DeleteJobContactsRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteJobContactsRequest$outboundSchema;
  /** @deprecated use `DeleteJobContactsRequest$Outbound` instead. */
  export type Outbound = DeleteJobContactsRequest$Outbound;
}

export function deleteJobContactsRequestToJSON(
  deleteJobContactsRequest: DeleteJobContactsRequest,
): string {
  return JSON.stringify(
    DeleteJobContactsRequest$outboundSchema.parse(deleteJobContactsRequest),
  );
}

export function deleteJobContactsRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteJobContactsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteJobContactsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteJobContactsRequest' from JSON`,
  );
}
