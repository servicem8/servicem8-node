/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteDocumentTemplatesRequest = {
  /**
   * UUID of the Document Template
   */
  uuid: string;
};

export type DeleteDocumentTemplatesResponse =
  | components.Result
  | components.ErrorT;

/** @internal */
export const DeleteDocumentTemplatesRequest$inboundSchema: z.ZodType<
  DeleteDocumentTemplatesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type DeleteDocumentTemplatesRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const DeleteDocumentTemplatesRequest$outboundSchema: z.ZodType<
  DeleteDocumentTemplatesRequest$Outbound,
  z.ZodTypeDef,
  DeleteDocumentTemplatesRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteDocumentTemplatesRequest$ {
  /** @deprecated use `DeleteDocumentTemplatesRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteDocumentTemplatesRequest$inboundSchema;
  /** @deprecated use `DeleteDocumentTemplatesRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteDocumentTemplatesRequest$outboundSchema;
  /** @deprecated use `DeleteDocumentTemplatesRequest$Outbound` instead. */
  export type Outbound = DeleteDocumentTemplatesRequest$Outbound;
}

export function deleteDocumentTemplatesRequestToJSON(
  deleteDocumentTemplatesRequest: DeleteDocumentTemplatesRequest,
): string {
  return JSON.stringify(
    DeleteDocumentTemplatesRequest$outboundSchema.parse(
      deleteDocumentTemplatesRequest,
    ),
  );
}

export function deleteDocumentTemplatesRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteDocumentTemplatesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteDocumentTemplatesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteDocumentTemplatesRequest' from JSON`,
  );
}

/** @internal */
export const DeleteDocumentTemplatesResponse$inboundSchema: z.ZodType<
  DeleteDocumentTemplatesResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type DeleteDocumentTemplatesResponse$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const DeleteDocumentTemplatesResponse$outboundSchema: z.ZodType<
  DeleteDocumentTemplatesResponse$Outbound,
  z.ZodTypeDef,
  DeleteDocumentTemplatesResponse
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteDocumentTemplatesResponse$ {
  /** @deprecated use `DeleteDocumentTemplatesResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteDocumentTemplatesResponse$inboundSchema;
  /** @deprecated use `DeleteDocumentTemplatesResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteDocumentTemplatesResponse$outboundSchema;
  /** @deprecated use `DeleteDocumentTemplatesResponse$Outbound` instead. */
  export type Outbound = DeleteDocumentTemplatesResponse$Outbound;
}

export function deleteDocumentTemplatesResponseToJSON(
  deleteDocumentTemplatesResponse: DeleteDocumentTemplatesResponse,
): string {
  return JSON.stringify(
    DeleteDocumentTemplatesResponse$outboundSchema.parse(
      deleteDocumentTemplatesResponse,
    ),
  );
}

export function deleteDocumentTemplatesResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteDocumentTemplatesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteDocumentTemplatesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteDocumentTemplatesResponse' from JSON`,
  );
}
