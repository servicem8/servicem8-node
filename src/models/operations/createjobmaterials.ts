/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateJobMaterialsSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type CreateJobMaterialsResponseResult =
  | components.Result
  | components.ErrorT;

export type CreateJobMaterialsResponse = {
  headers: { [k: string]: Array<string> };
  result: components.Result | components.ErrorT;
};

/** @internal */
export const CreateJobMaterialsSecurity$inboundSchema: z.ZodType<
  CreateJobMaterialsSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type CreateJobMaterialsSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const CreateJobMaterialsSecurity$outboundSchema: z.ZodType<
  CreateJobMaterialsSecurity$Outbound,
  z.ZodTypeDef,
  CreateJobMaterialsSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateJobMaterialsSecurity$ {
  /** @deprecated use `CreateJobMaterialsSecurity$inboundSchema` instead. */
  export const inboundSchema = CreateJobMaterialsSecurity$inboundSchema;
  /** @deprecated use `CreateJobMaterialsSecurity$outboundSchema` instead. */
  export const outboundSchema = CreateJobMaterialsSecurity$outboundSchema;
  /** @deprecated use `CreateJobMaterialsSecurity$Outbound` instead. */
  export type Outbound = CreateJobMaterialsSecurity$Outbound;
}

export function createJobMaterialsSecurityToJSON(
  createJobMaterialsSecurity: CreateJobMaterialsSecurity,
): string {
  return JSON.stringify(
    CreateJobMaterialsSecurity$outboundSchema.parse(createJobMaterialsSecurity),
  );
}

export function createJobMaterialsSecurityFromJSON(
  jsonString: string,
): SafeParseResult<CreateJobMaterialsSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateJobMaterialsSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateJobMaterialsSecurity' from JSON`,
  );
}

/** @internal */
export const CreateJobMaterialsResponseResult$inboundSchema: z.ZodType<
  CreateJobMaterialsResponseResult,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type CreateJobMaterialsResponseResult$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const CreateJobMaterialsResponseResult$outboundSchema: z.ZodType<
  CreateJobMaterialsResponseResult$Outbound,
  z.ZodTypeDef,
  CreateJobMaterialsResponseResult
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateJobMaterialsResponseResult$ {
  /** @deprecated use `CreateJobMaterialsResponseResult$inboundSchema` instead. */
  export const inboundSchema = CreateJobMaterialsResponseResult$inboundSchema;
  /** @deprecated use `CreateJobMaterialsResponseResult$outboundSchema` instead. */
  export const outboundSchema = CreateJobMaterialsResponseResult$outboundSchema;
  /** @deprecated use `CreateJobMaterialsResponseResult$Outbound` instead. */
  export type Outbound = CreateJobMaterialsResponseResult$Outbound;
}

export function createJobMaterialsResponseResultToJSON(
  createJobMaterialsResponseResult: CreateJobMaterialsResponseResult,
): string {
  return JSON.stringify(
    CreateJobMaterialsResponseResult$outboundSchema.parse(
      createJobMaterialsResponseResult,
    ),
  );
}

export function createJobMaterialsResponseResultFromJSON(
  jsonString: string,
): SafeParseResult<CreateJobMaterialsResponseResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateJobMaterialsResponseResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateJobMaterialsResponseResult' from JSON`,
  );
}

/** @internal */
export const CreateJobMaterialsResponse$inboundSchema: z.ZodType<
  CreateJobMaterialsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: z.union([
    components.Result$inboundSchema,
    components.ErrorT$inboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type CreateJobMaterialsResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result: components.Result$Outbound | components.ErrorT$Outbound;
};

/** @internal */
export const CreateJobMaterialsResponse$outboundSchema: z.ZodType<
  CreateJobMaterialsResponse$Outbound,
  z.ZodTypeDef,
  CreateJobMaterialsResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateJobMaterialsResponse$ {
  /** @deprecated use `CreateJobMaterialsResponse$inboundSchema` instead. */
  export const inboundSchema = CreateJobMaterialsResponse$inboundSchema;
  /** @deprecated use `CreateJobMaterialsResponse$outboundSchema` instead. */
  export const outboundSchema = CreateJobMaterialsResponse$outboundSchema;
  /** @deprecated use `CreateJobMaterialsResponse$Outbound` instead. */
  export type Outbound = CreateJobMaterialsResponse$Outbound;
}

export function createJobMaterialsResponseToJSON(
  createJobMaterialsResponse: CreateJobMaterialsResponse,
): string {
  return JSON.stringify(
    CreateJobMaterialsResponse$outboundSchema.parse(createJobMaterialsResponse),
  );
}

export function createJobMaterialsResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateJobMaterialsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateJobMaterialsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateJobMaterialsResponse' from JSON`,
  );
}
