/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetAttachmentsRequest = {
  /**
   * UUID of the Attachment
   */
  uuid: string;
};

/** @internal */
export const GetAttachmentsRequest$inboundSchema: z.ZodType<
  GetAttachmentsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type GetAttachmentsRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const GetAttachmentsRequest$outboundSchema: z.ZodType<
  GetAttachmentsRequest$Outbound,
  z.ZodTypeDef,
  GetAttachmentsRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAttachmentsRequest$ {
  /** @deprecated use `GetAttachmentsRequest$inboundSchema` instead. */
  export const inboundSchema = GetAttachmentsRequest$inboundSchema;
  /** @deprecated use `GetAttachmentsRequest$outboundSchema` instead. */
  export const outboundSchema = GetAttachmentsRequest$outboundSchema;
  /** @deprecated use `GetAttachmentsRequest$Outbound` instead. */
  export type Outbound = GetAttachmentsRequest$Outbound;
}

export function getAttachmentsRequestToJSON(
  getAttachmentsRequest: GetAttachmentsRequest,
): string {
  return JSON.stringify(
    GetAttachmentsRequest$outboundSchema.parse(getAttachmentsRequest),
  );
}

export function getAttachmentsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAttachmentsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAttachmentsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAttachmentsRequest' from JSON`,
  );
}
