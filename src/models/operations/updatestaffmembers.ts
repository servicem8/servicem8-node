/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateStaffMembersRequest = {
  /**
   * UUID of the Staff Member
   */
  uuid: string;
  /**
   * Staff Member fields to update
   */
  staff: components.StaffInput;
};

/** @internal */
export const UpdateStaffMembersRequest$inboundSchema: z.ZodType<
  UpdateStaffMembersRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  Staff: components.StaffInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Staff": "staff",
  });
});

/** @internal */
export type UpdateStaffMembersRequest$Outbound = {
  uuid: string;
  Staff: components.StaffInput$Outbound;
};

/** @internal */
export const UpdateStaffMembersRequest$outboundSchema: z.ZodType<
  UpdateStaffMembersRequest$Outbound,
  z.ZodTypeDef,
  UpdateStaffMembersRequest
> = z.object({
  uuid: z.string(),
  staff: components.StaffInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    staff: "Staff",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateStaffMembersRequest$ {
  /** @deprecated use `UpdateStaffMembersRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateStaffMembersRequest$inboundSchema;
  /** @deprecated use `UpdateStaffMembersRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateStaffMembersRequest$outboundSchema;
  /** @deprecated use `UpdateStaffMembersRequest$Outbound` instead. */
  export type Outbound = UpdateStaffMembersRequest$Outbound;
}

export function updateStaffMembersRequestToJSON(
  updateStaffMembersRequest: UpdateStaffMembersRequest,
): string {
  return JSON.stringify(
    UpdateStaffMembersRequest$outboundSchema.parse(updateStaffMembersRequest),
  );
}

export function updateStaffMembersRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateStaffMembersRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateStaffMembersRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateStaffMembersRequest' from JSON`,
  );
}
