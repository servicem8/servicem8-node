/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetJobMaterialsRequest = {
  /**
   * UUID of the Job Material
   */
  uuid: string;
};

/** @internal */
export const GetJobMaterialsRequest$inboundSchema: z.ZodType<
  GetJobMaterialsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type GetJobMaterialsRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const GetJobMaterialsRequest$outboundSchema: z.ZodType<
  GetJobMaterialsRequest$Outbound,
  z.ZodTypeDef,
  GetJobMaterialsRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetJobMaterialsRequest$ {
  /** @deprecated use `GetJobMaterialsRequest$inboundSchema` instead. */
  export const inboundSchema = GetJobMaterialsRequest$inboundSchema;
  /** @deprecated use `GetJobMaterialsRequest$outboundSchema` instead. */
  export const outboundSchema = GetJobMaterialsRequest$outboundSchema;
  /** @deprecated use `GetJobMaterialsRequest$Outbound` instead. */
  export type Outbound = GetJobMaterialsRequest$Outbound;
}

export function getJobMaterialsRequestToJSON(
  getJobMaterialsRequest: GetJobMaterialsRequest,
): string {
  return JSON.stringify(
    GetJobMaterialsRequest$outboundSchema.parse(getJobMaterialsRequest),
  );
}

export function getJobMaterialsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetJobMaterialsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetJobMaterialsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetJobMaterialsRequest' from JSON`,
  );
}
