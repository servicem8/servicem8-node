/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListJobActivitiesResponse =
  | components.ErrorT
  | Array<components.JobActivity>;

/** @internal */
export const ListJobActivitiesResponse$inboundSchema: z.ZodType<
  ListJobActivitiesResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.ErrorT$inboundSchema,
  z.array(components.JobActivity$inboundSchema),
]);

/** @internal */
export type ListJobActivitiesResponse$Outbound =
  | components.ErrorT$Outbound
  | Array<components.JobActivity$Outbound>;

/** @internal */
export const ListJobActivitiesResponse$outboundSchema: z.ZodType<
  ListJobActivitiesResponse$Outbound,
  z.ZodTypeDef,
  ListJobActivitiesResponse
> = z.union([
  components.ErrorT$outboundSchema,
  z.array(components.JobActivity$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListJobActivitiesResponse$ {
  /** @deprecated use `ListJobActivitiesResponse$inboundSchema` instead. */
  export const inboundSchema = ListJobActivitiesResponse$inboundSchema;
  /** @deprecated use `ListJobActivitiesResponse$outboundSchema` instead. */
  export const outboundSchema = ListJobActivitiesResponse$outboundSchema;
  /** @deprecated use `ListJobActivitiesResponse$Outbound` instead. */
  export type Outbound = ListJobActivitiesResponse$Outbound;
}

export function listJobActivitiesResponseToJSON(
  listJobActivitiesResponse: ListJobActivitiesResponse,
): string {
  return JSON.stringify(
    ListJobActivitiesResponse$outboundSchema.parse(listJobActivitiesResponse),
  );
}

export function listJobActivitiesResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListJobActivitiesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListJobActivitiesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListJobActivitiesResponse' from JSON`,
  );
}
