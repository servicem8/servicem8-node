/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateJobContactsSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type CreateJobContactsResponseResult =
  | components.Result
  | components.ErrorT;

export type CreateJobContactsResponse = {
  headers: { [k: string]: Array<string> };
  result: components.Result | components.ErrorT;
};

/** @internal */
export const CreateJobContactsSecurity$inboundSchema: z.ZodType<
  CreateJobContactsSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type CreateJobContactsSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const CreateJobContactsSecurity$outboundSchema: z.ZodType<
  CreateJobContactsSecurity$Outbound,
  z.ZodTypeDef,
  CreateJobContactsSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateJobContactsSecurity$ {
  /** @deprecated use `CreateJobContactsSecurity$inboundSchema` instead. */
  export const inboundSchema = CreateJobContactsSecurity$inboundSchema;
  /** @deprecated use `CreateJobContactsSecurity$outboundSchema` instead. */
  export const outboundSchema = CreateJobContactsSecurity$outboundSchema;
  /** @deprecated use `CreateJobContactsSecurity$Outbound` instead. */
  export type Outbound = CreateJobContactsSecurity$Outbound;
}

export function createJobContactsSecurityToJSON(
  createJobContactsSecurity: CreateJobContactsSecurity,
): string {
  return JSON.stringify(
    CreateJobContactsSecurity$outboundSchema.parse(createJobContactsSecurity),
  );
}

export function createJobContactsSecurityFromJSON(
  jsonString: string,
): SafeParseResult<CreateJobContactsSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateJobContactsSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateJobContactsSecurity' from JSON`,
  );
}

/** @internal */
export const CreateJobContactsResponseResult$inboundSchema: z.ZodType<
  CreateJobContactsResponseResult,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type CreateJobContactsResponseResult$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const CreateJobContactsResponseResult$outboundSchema: z.ZodType<
  CreateJobContactsResponseResult$Outbound,
  z.ZodTypeDef,
  CreateJobContactsResponseResult
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateJobContactsResponseResult$ {
  /** @deprecated use `CreateJobContactsResponseResult$inboundSchema` instead. */
  export const inboundSchema = CreateJobContactsResponseResult$inboundSchema;
  /** @deprecated use `CreateJobContactsResponseResult$outboundSchema` instead. */
  export const outboundSchema = CreateJobContactsResponseResult$outboundSchema;
  /** @deprecated use `CreateJobContactsResponseResult$Outbound` instead. */
  export type Outbound = CreateJobContactsResponseResult$Outbound;
}

export function createJobContactsResponseResultToJSON(
  createJobContactsResponseResult: CreateJobContactsResponseResult,
): string {
  return JSON.stringify(
    CreateJobContactsResponseResult$outboundSchema.parse(
      createJobContactsResponseResult,
    ),
  );
}

export function createJobContactsResponseResultFromJSON(
  jsonString: string,
): SafeParseResult<CreateJobContactsResponseResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateJobContactsResponseResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateJobContactsResponseResult' from JSON`,
  );
}

/** @internal */
export const CreateJobContactsResponse$inboundSchema: z.ZodType<
  CreateJobContactsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: z.union([
    components.Result$inboundSchema,
    components.ErrorT$inboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type CreateJobContactsResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result: components.Result$Outbound | components.ErrorT$Outbound;
};

/** @internal */
export const CreateJobContactsResponse$outboundSchema: z.ZodType<
  CreateJobContactsResponse$Outbound,
  z.ZodTypeDef,
  CreateJobContactsResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateJobContactsResponse$ {
  /** @deprecated use `CreateJobContactsResponse$inboundSchema` instead. */
  export const inboundSchema = CreateJobContactsResponse$inboundSchema;
  /** @deprecated use `CreateJobContactsResponse$outboundSchema` instead. */
  export const outboundSchema = CreateJobContactsResponse$outboundSchema;
  /** @deprecated use `CreateJobContactsResponse$Outbound` instead. */
  export type Outbound = CreateJobContactsResponse$Outbound;
}

export function createJobContactsResponseToJSON(
  createJobContactsResponse: CreateJobContactsResponse,
): string {
  return JSON.stringify(
    CreateJobContactsResponse$outboundSchema.parse(createJobContactsResponse),
  );
}

export function createJobContactsResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateJobContactsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateJobContactsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateJobContactsResponse' from JSON`,
  );
}
