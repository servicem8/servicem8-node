/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateJobQueuesSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type UpdateJobQueuesRequest = {
  /**
   * UUID of the Job Queue
   */
  uuid: string;
  /**
   * Job Queue fields to update
   */
  queue: components.QueueInput;
};

export type UpdateJobQueuesResponse = components.Result | components.ErrorT;

/** @internal */
export const UpdateJobQueuesSecurity$inboundSchema: z.ZodType<
  UpdateJobQueuesSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type UpdateJobQueuesSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const UpdateJobQueuesSecurity$outboundSchema: z.ZodType<
  UpdateJobQueuesSecurity$Outbound,
  z.ZodTypeDef,
  UpdateJobQueuesSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateJobQueuesSecurity$ {
  /** @deprecated use `UpdateJobQueuesSecurity$inboundSchema` instead. */
  export const inboundSchema = UpdateJobQueuesSecurity$inboundSchema;
  /** @deprecated use `UpdateJobQueuesSecurity$outboundSchema` instead. */
  export const outboundSchema = UpdateJobQueuesSecurity$outboundSchema;
  /** @deprecated use `UpdateJobQueuesSecurity$Outbound` instead. */
  export type Outbound = UpdateJobQueuesSecurity$Outbound;
}

export function updateJobQueuesSecurityToJSON(
  updateJobQueuesSecurity: UpdateJobQueuesSecurity,
): string {
  return JSON.stringify(
    UpdateJobQueuesSecurity$outboundSchema.parse(updateJobQueuesSecurity),
  );
}

export function updateJobQueuesSecurityFromJSON(
  jsonString: string,
): SafeParseResult<UpdateJobQueuesSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateJobQueuesSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateJobQueuesSecurity' from JSON`,
  );
}

/** @internal */
export const UpdateJobQueuesRequest$inboundSchema: z.ZodType<
  UpdateJobQueuesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  Queue: components.QueueInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Queue": "queue",
  });
});

/** @internal */
export type UpdateJobQueuesRequest$Outbound = {
  uuid: string;
  Queue: components.QueueInput$Outbound;
};

/** @internal */
export const UpdateJobQueuesRequest$outboundSchema: z.ZodType<
  UpdateJobQueuesRequest$Outbound,
  z.ZodTypeDef,
  UpdateJobQueuesRequest
> = z.object({
  uuid: z.string(),
  queue: components.QueueInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    queue: "Queue",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateJobQueuesRequest$ {
  /** @deprecated use `UpdateJobQueuesRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateJobQueuesRequest$inboundSchema;
  /** @deprecated use `UpdateJobQueuesRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateJobQueuesRequest$outboundSchema;
  /** @deprecated use `UpdateJobQueuesRequest$Outbound` instead. */
  export type Outbound = UpdateJobQueuesRequest$Outbound;
}

export function updateJobQueuesRequestToJSON(
  updateJobQueuesRequest: UpdateJobQueuesRequest,
): string {
  return JSON.stringify(
    UpdateJobQueuesRequest$outboundSchema.parse(updateJobQueuesRequest),
  );
}

export function updateJobQueuesRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateJobQueuesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateJobQueuesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateJobQueuesRequest' from JSON`,
  );
}

/** @internal */
export const UpdateJobQueuesResponse$inboundSchema: z.ZodType<
  UpdateJobQueuesResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type UpdateJobQueuesResponse$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const UpdateJobQueuesResponse$outboundSchema: z.ZodType<
  UpdateJobQueuesResponse$Outbound,
  z.ZodTypeDef,
  UpdateJobQueuesResponse
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateJobQueuesResponse$ {
  /** @deprecated use `UpdateJobQueuesResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateJobQueuesResponse$inboundSchema;
  /** @deprecated use `UpdateJobQueuesResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateJobQueuesResponse$outboundSchema;
  /** @deprecated use `UpdateJobQueuesResponse$Outbound` instead. */
  export type Outbound = UpdateJobQueuesResponse$Outbound;
}

export function updateJobQueuesResponseToJSON(
  updateJobQueuesResponse: UpdateJobQueuesResponse,
): string {
  return JSON.stringify(
    UpdateJobQueuesResponse$outboundSchema.parse(updateJobQueuesResponse),
  );
}

export function updateJobQueuesResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateJobQueuesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateJobQueuesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateJobQueuesResponse' from JSON`,
  );
}
