/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateJobQueuesRequest = {
  /**
   * UUID of the Job Queue
   */
  uuid: string;
  /**
   * Job Queue fields to update
   */
  queue: components.QueueInput;
};

/** @internal */
export const UpdateJobQueuesRequest$inboundSchema: z.ZodType<
  UpdateJobQueuesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  Queue: components.QueueInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Queue": "queue",
  });
});

/** @internal */
export type UpdateJobQueuesRequest$Outbound = {
  uuid: string;
  Queue: components.QueueInput$Outbound;
};

/** @internal */
export const UpdateJobQueuesRequest$outboundSchema: z.ZodType<
  UpdateJobQueuesRequest$Outbound,
  z.ZodTypeDef,
  UpdateJobQueuesRequest
> = z.object({
  uuid: z.string(),
  queue: components.QueueInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    queue: "Queue",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateJobQueuesRequest$ {
  /** @deprecated use `UpdateJobQueuesRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateJobQueuesRequest$inboundSchema;
  /** @deprecated use `UpdateJobQueuesRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateJobQueuesRequest$outboundSchema;
  /** @deprecated use `UpdateJobQueuesRequest$Outbound` instead. */
  export type Outbound = UpdateJobQueuesRequest$Outbound;
}

export function updateJobQueuesRequestToJSON(
  updateJobQueuesRequest: UpdateJobQueuesRequest,
): string {
  return JSON.stringify(
    UpdateJobQueuesRequest$outboundSchema.parse(updateJobQueuesRequest),
  );
}

export function updateJobQueuesRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateJobQueuesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateJobQueuesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateJobQueuesRequest' from JSON`,
  );
}
