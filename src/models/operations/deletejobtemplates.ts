/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteJobTemplatesRequest = {
  /**
   * UUID of the Job Template
   */
  uuid: string;
};

export type DeleteJobTemplatesResponse = components.Result | components.ErrorT;

/** @internal */
export const DeleteJobTemplatesRequest$inboundSchema: z.ZodType<
  DeleteJobTemplatesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type DeleteJobTemplatesRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const DeleteJobTemplatesRequest$outboundSchema: z.ZodType<
  DeleteJobTemplatesRequest$Outbound,
  z.ZodTypeDef,
  DeleteJobTemplatesRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteJobTemplatesRequest$ {
  /** @deprecated use `DeleteJobTemplatesRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteJobTemplatesRequest$inboundSchema;
  /** @deprecated use `DeleteJobTemplatesRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteJobTemplatesRequest$outboundSchema;
  /** @deprecated use `DeleteJobTemplatesRequest$Outbound` instead. */
  export type Outbound = DeleteJobTemplatesRequest$Outbound;
}

export function deleteJobTemplatesRequestToJSON(
  deleteJobTemplatesRequest: DeleteJobTemplatesRequest,
): string {
  return JSON.stringify(
    DeleteJobTemplatesRequest$outboundSchema.parse(deleteJobTemplatesRequest),
  );
}

export function deleteJobTemplatesRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteJobTemplatesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteJobTemplatesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteJobTemplatesRequest' from JSON`,
  );
}

/** @internal */
export const DeleteJobTemplatesResponse$inboundSchema: z.ZodType<
  DeleteJobTemplatesResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type DeleteJobTemplatesResponse$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const DeleteJobTemplatesResponse$outboundSchema: z.ZodType<
  DeleteJobTemplatesResponse$Outbound,
  z.ZodTypeDef,
  DeleteJobTemplatesResponse
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteJobTemplatesResponse$ {
  /** @deprecated use `DeleteJobTemplatesResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteJobTemplatesResponse$inboundSchema;
  /** @deprecated use `DeleteJobTemplatesResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteJobTemplatesResponse$outboundSchema;
  /** @deprecated use `DeleteJobTemplatesResponse$Outbound` instead. */
  export type Outbound = DeleteJobTemplatesResponse$Outbound;
}

export function deleteJobTemplatesResponseToJSON(
  deleteJobTemplatesResponse: DeleteJobTemplatesResponse,
): string {
  return JSON.stringify(
    DeleteJobTemplatesResponse$outboundSchema.parse(deleteJobTemplatesResponse),
  );
}

export function deleteJobTemplatesResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteJobTemplatesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteJobTemplatesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteJobTemplatesResponse' from JSON`,
  );
}
