/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetStaffMessagesSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type GetStaffMessagesRequest = {
  /**
   * UUID of the Staff Message
   */
  uuid: string;
};

export type GetStaffMessagesResponse =
  | components.ErrorT
  | components.StaffMessage;

/** @internal */
export const GetStaffMessagesSecurity$inboundSchema: z.ZodType<
  GetStaffMessagesSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type GetStaffMessagesSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const GetStaffMessagesSecurity$outboundSchema: z.ZodType<
  GetStaffMessagesSecurity$Outbound,
  z.ZodTypeDef,
  GetStaffMessagesSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetStaffMessagesSecurity$ {
  /** @deprecated use `GetStaffMessagesSecurity$inboundSchema` instead. */
  export const inboundSchema = GetStaffMessagesSecurity$inboundSchema;
  /** @deprecated use `GetStaffMessagesSecurity$outboundSchema` instead. */
  export const outboundSchema = GetStaffMessagesSecurity$outboundSchema;
  /** @deprecated use `GetStaffMessagesSecurity$Outbound` instead. */
  export type Outbound = GetStaffMessagesSecurity$Outbound;
}

export function getStaffMessagesSecurityToJSON(
  getStaffMessagesSecurity: GetStaffMessagesSecurity,
): string {
  return JSON.stringify(
    GetStaffMessagesSecurity$outboundSchema.parse(getStaffMessagesSecurity),
  );
}

export function getStaffMessagesSecurityFromJSON(
  jsonString: string,
): SafeParseResult<GetStaffMessagesSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetStaffMessagesSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetStaffMessagesSecurity' from JSON`,
  );
}

/** @internal */
export const GetStaffMessagesRequest$inboundSchema: z.ZodType<
  GetStaffMessagesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type GetStaffMessagesRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const GetStaffMessagesRequest$outboundSchema: z.ZodType<
  GetStaffMessagesRequest$Outbound,
  z.ZodTypeDef,
  GetStaffMessagesRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetStaffMessagesRequest$ {
  /** @deprecated use `GetStaffMessagesRequest$inboundSchema` instead. */
  export const inboundSchema = GetStaffMessagesRequest$inboundSchema;
  /** @deprecated use `GetStaffMessagesRequest$outboundSchema` instead. */
  export const outboundSchema = GetStaffMessagesRequest$outboundSchema;
  /** @deprecated use `GetStaffMessagesRequest$Outbound` instead. */
  export type Outbound = GetStaffMessagesRequest$Outbound;
}

export function getStaffMessagesRequestToJSON(
  getStaffMessagesRequest: GetStaffMessagesRequest,
): string {
  return JSON.stringify(
    GetStaffMessagesRequest$outboundSchema.parse(getStaffMessagesRequest),
  );
}

export function getStaffMessagesRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetStaffMessagesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetStaffMessagesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetStaffMessagesRequest' from JSON`,
  );
}

/** @internal */
export const GetStaffMessagesResponse$inboundSchema: z.ZodType<
  GetStaffMessagesResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.ErrorT$inboundSchema,
  components.StaffMessage$inboundSchema,
]);

/** @internal */
export type GetStaffMessagesResponse$Outbound =
  | components.ErrorT$Outbound
  | components.StaffMessage$Outbound;

/** @internal */
export const GetStaffMessagesResponse$outboundSchema: z.ZodType<
  GetStaffMessagesResponse$Outbound,
  z.ZodTypeDef,
  GetStaffMessagesResponse
> = z.union([
  components.ErrorT$outboundSchema,
  components.StaffMessage$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetStaffMessagesResponse$ {
  /** @deprecated use `GetStaffMessagesResponse$inboundSchema` instead. */
  export const inboundSchema = GetStaffMessagesResponse$inboundSchema;
  /** @deprecated use `GetStaffMessagesResponse$outboundSchema` instead. */
  export const outboundSchema = GetStaffMessagesResponse$outboundSchema;
  /** @deprecated use `GetStaffMessagesResponse$Outbound` instead. */
  export type Outbound = GetStaffMessagesResponse$Outbound;
}

export function getStaffMessagesResponseToJSON(
  getStaffMessagesResponse: GetStaffMessagesResponse,
): string {
  return JSON.stringify(
    GetStaffMessagesResponse$outboundSchema.parse(getStaffMessagesResponse),
  );
}

export function getStaffMessagesResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetStaffMessagesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetStaffMessagesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetStaffMessagesResponse' from JSON`,
  );
}
