/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetAssetsSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type GetAssetsRequest = {
  /**
   * UUID of the Asset
   */
  uuid: string;
};

export type GetAssetsResponse = components.ErrorT | components.Asset;

/** @internal */
export const GetAssetsSecurity$inboundSchema: z.ZodType<
  GetAssetsSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type GetAssetsSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const GetAssetsSecurity$outboundSchema: z.ZodType<
  GetAssetsSecurity$Outbound,
  z.ZodTypeDef,
  GetAssetsSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAssetsSecurity$ {
  /** @deprecated use `GetAssetsSecurity$inboundSchema` instead. */
  export const inboundSchema = GetAssetsSecurity$inboundSchema;
  /** @deprecated use `GetAssetsSecurity$outboundSchema` instead. */
  export const outboundSchema = GetAssetsSecurity$outboundSchema;
  /** @deprecated use `GetAssetsSecurity$Outbound` instead. */
  export type Outbound = GetAssetsSecurity$Outbound;
}

export function getAssetsSecurityToJSON(
  getAssetsSecurity: GetAssetsSecurity,
): string {
  return JSON.stringify(
    GetAssetsSecurity$outboundSchema.parse(getAssetsSecurity),
  );
}

export function getAssetsSecurityFromJSON(
  jsonString: string,
): SafeParseResult<GetAssetsSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAssetsSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAssetsSecurity' from JSON`,
  );
}

/** @internal */
export const GetAssetsRequest$inboundSchema: z.ZodType<
  GetAssetsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type GetAssetsRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const GetAssetsRequest$outboundSchema: z.ZodType<
  GetAssetsRequest$Outbound,
  z.ZodTypeDef,
  GetAssetsRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAssetsRequest$ {
  /** @deprecated use `GetAssetsRequest$inboundSchema` instead. */
  export const inboundSchema = GetAssetsRequest$inboundSchema;
  /** @deprecated use `GetAssetsRequest$outboundSchema` instead. */
  export const outboundSchema = GetAssetsRequest$outboundSchema;
  /** @deprecated use `GetAssetsRequest$Outbound` instead. */
  export type Outbound = GetAssetsRequest$Outbound;
}

export function getAssetsRequestToJSON(
  getAssetsRequest: GetAssetsRequest,
): string {
  return JSON.stringify(
    GetAssetsRequest$outboundSchema.parse(getAssetsRequest),
  );
}

export function getAssetsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAssetsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAssetsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAssetsRequest' from JSON`,
  );
}

/** @internal */
export const GetAssetsResponse$inboundSchema: z.ZodType<
  GetAssetsResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.ErrorT$inboundSchema, components.Asset$inboundSchema]);

/** @internal */
export type GetAssetsResponse$Outbound =
  | components.ErrorT$Outbound
  | components.Asset$Outbound;

/** @internal */
export const GetAssetsResponse$outboundSchema: z.ZodType<
  GetAssetsResponse$Outbound,
  z.ZodTypeDef,
  GetAssetsResponse
> = z.union([
  components.ErrorT$outboundSchema,
  components.Asset$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAssetsResponse$ {
  /** @deprecated use `GetAssetsResponse$inboundSchema` instead. */
  export const inboundSchema = GetAssetsResponse$inboundSchema;
  /** @deprecated use `GetAssetsResponse$outboundSchema` instead. */
  export const outboundSchema = GetAssetsResponse$outboundSchema;
  /** @deprecated use `GetAssetsResponse$Outbound` instead. */
  export type Outbound = GetAssetsResponse$Outbound;
}

export function getAssetsResponseToJSON(
  getAssetsResponse: GetAssetsResponse,
): string {
  return JSON.stringify(
    GetAssetsResponse$outboundSchema.parse(getAssetsResponse),
  );
}

export function getAssetsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAssetsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAssetsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAssetsResponse' from JSON`,
  );
}
