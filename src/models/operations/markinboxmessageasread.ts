/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type MarkInboxMessageAsReadRequest = {
  /**
   * UUID of the inbox message
   */
  uuid: string;
};

/** @internal */
export const MarkInboxMessageAsReadRequest$inboundSchema: z.ZodType<
  MarkInboxMessageAsReadRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type MarkInboxMessageAsReadRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const MarkInboxMessageAsReadRequest$outboundSchema: z.ZodType<
  MarkInboxMessageAsReadRequest$Outbound,
  z.ZodTypeDef,
  MarkInboxMessageAsReadRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MarkInboxMessageAsReadRequest$ {
  /** @deprecated use `MarkInboxMessageAsReadRequest$inboundSchema` instead. */
  export const inboundSchema = MarkInboxMessageAsReadRequest$inboundSchema;
  /** @deprecated use `MarkInboxMessageAsReadRequest$outboundSchema` instead. */
  export const outboundSchema = MarkInboxMessageAsReadRequest$outboundSchema;
  /** @deprecated use `MarkInboxMessageAsReadRequest$Outbound` instead. */
  export type Outbound = MarkInboxMessageAsReadRequest$Outbound;
}

export function markInboxMessageAsReadRequestToJSON(
  markInboxMessageAsReadRequest: MarkInboxMessageAsReadRequest,
): string {
  return JSON.stringify(
    MarkInboxMessageAsReadRequest$outboundSchema.parse(
      markInboxMessageAsReadRequest,
    ),
  );
}

export function markInboxMessageAsReadRequestFromJSON(
  jsonString: string,
): SafeParseResult<MarkInboxMessageAsReadRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MarkInboxMessageAsReadRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MarkInboxMessageAsReadRequest' from JSON`,
  );
}
