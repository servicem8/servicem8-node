/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateJobAllocationsSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type CreateJobAllocationsResponseResult =
  | components.Result
  | components.ErrorT;

export type CreateJobAllocationsResponse = {
  headers: { [k: string]: Array<string> };
  result: components.Result | components.ErrorT;
};

/** @internal */
export const CreateJobAllocationsSecurity$inboundSchema: z.ZodType<
  CreateJobAllocationsSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type CreateJobAllocationsSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const CreateJobAllocationsSecurity$outboundSchema: z.ZodType<
  CreateJobAllocationsSecurity$Outbound,
  z.ZodTypeDef,
  CreateJobAllocationsSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateJobAllocationsSecurity$ {
  /** @deprecated use `CreateJobAllocationsSecurity$inboundSchema` instead. */
  export const inboundSchema = CreateJobAllocationsSecurity$inboundSchema;
  /** @deprecated use `CreateJobAllocationsSecurity$outboundSchema` instead. */
  export const outboundSchema = CreateJobAllocationsSecurity$outboundSchema;
  /** @deprecated use `CreateJobAllocationsSecurity$Outbound` instead. */
  export type Outbound = CreateJobAllocationsSecurity$Outbound;
}

export function createJobAllocationsSecurityToJSON(
  createJobAllocationsSecurity: CreateJobAllocationsSecurity,
): string {
  return JSON.stringify(
    CreateJobAllocationsSecurity$outboundSchema.parse(
      createJobAllocationsSecurity,
    ),
  );
}

export function createJobAllocationsSecurityFromJSON(
  jsonString: string,
): SafeParseResult<CreateJobAllocationsSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateJobAllocationsSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateJobAllocationsSecurity' from JSON`,
  );
}

/** @internal */
export const CreateJobAllocationsResponseResult$inboundSchema: z.ZodType<
  CreateJobAllocationsResponseResult,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type CreateJobAllocationsResponseResult$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const CreateJobAllocationsResponseResult$outboundSchema: z.ZodType<
  CreateJobAllocationsResponseResult$Outbound,
  z.ZodTypeDef,
  CreateJobAllocationsResponseResult
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateJobAllocationsResponseResult$ {
  /** @deprecated use `CreateJobAllocationsResponseResult$inboundSchema` instead. */
  export const inboundSchema = CreateJobAllocationsResponseResult$inboundSchema;
  /** @deprecated use `CreateJobAllocationsResponseResult$outboundSchema` instead. */
  export const outboundSchema =
    CreateJobAllocationsResponseResult$outboundSchema;
  /** @deprecated use `CreateJobAllocationsResponseResult$Outbound` instead. */
  export type Outbound = CreateJobAllocationsResponseResult$Outbound;
}

export function createJobAllocationsResponseResultToJSON(
  createJobAllocationsResponseResult: CreateJobAllocationsResponseResult,
): string {
  return JSON.stringify(
    CreateJobAllocationsResponseResult$outboundSchema.parse(
      createJobAllocationsResponseResult,
    ),
  );
}

export function createJobAllocationsResponseResultFromJSON(
  jsonString: string,
): SafeParseResult<CreateJobAllocationsResponseResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateJobAllocationsResponseResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateJobAllocationsResponseResult' from JSON`,
  );
}

/** @internal */
export const CreateJobAllocationsResponse$inboundSchema: z.ZodType<
  CreateJobAllocationsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: z.union([
    components.Result$inboundSchema,
    components.ErrorT$inboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type CreateJobAllocationsResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result: components.Result$Outbound | components.ErrorT$Outbound;
};

/** @internal */
export const CreateJobAllocationsResponse$outboundSchema: z.ZodType<
  CreateJobAllocationsResponse$Outbound,
  z.ZodTypeDef,
  CreateJobAllocationsResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateJobAllocationsResponse$ {
  /** @deprecated use `CreateJobAllocationsResponse$inboundSchema` instead. */
  export const inboundSchema = CreateJobAllocationsResponse$inboundSchema;
  /** @deprecated use `CreateJobAllocationsResponse$outboundSchema` instead. */
  export const outboundSchema = CreateJobAllocationsResponse$outboundSchema;
  /** @deprecated use `CreateJobAllocationsResponse$Outbound` instead. */
  export type Outbound = CreateJobAllocationsResponse$Outbound;
}

export function createJobAllocationsResponseToJSON(
  createJobAllocationsResponse: CreateJobAllocationsResponse,
): string {
  return JSON.stringify(
    CreateJobAllocationsResponse$outboundSchema.parse(
      createJobAllocationsResponse,
    ),
  );
}

export function createJobAllocationsResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateJobAllocationsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateJobAllocationsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateJobAllocationsResponse' from JSON`,
  );
}
