/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateAllocationWindowsRequest = {
  /**
   * UUID of the Allocation Window
   */
  uuid: string;
  /**
   * Allocation Window fields to update
   */
  allocationWindowCreate: components.AllocationWindowCreate;
};

/** @internal */
export const UpdateAllocationWindowsRequest$inboundSchema: z.ZodType<
  UpdateAllocationWindowsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  AllocationWindowCreate: components.AllocationWindowCreate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "AllocationWindowCreate": "allocationWindowCreate",
  });
});

/** @internal */
export type UpdateAllocationWindowsRequest$Outbound = {
  uuid: string;
  AllocationWindowCreate: components.AllocationWindowCreate$Outbound;
};

/** @internal */
export const UpdateAllocationWindowsRequest$outboundSchema: z.ZodType<
  UpdateAllocationWindowsRequest$Outbound,
  z.ZodTypeDef,
  UpdateAllocationWindowsRequest
> = z.object({
  uuid: z.string(),
  allocationWindowCreate: components.AllocationWindowCreate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    allocationWindowCreate: "AllocationWindowCreate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAllocationWindowsRequest$ {
  /** @deprecated use `UpdateAllocationWindowsRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateAllocationWindowsRequest$inboundSchema;
  /** @deprecated use `UpdateAllocationWindowsRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateAllocationWindowsRequest$outboundSchema;
  /** @deprecated use `UpdateAllocationWindowsRequest$Outbound` instead. */
  export type Outbound = UpdateAllocationWindowsRequest$Outbound;
}

export function updateAllocationWindowsRequestToJSON(
  updateAllocationWindowsRequest: UpdateAllocationWindowsRequest,
): string {
  return JSON.stringify(
    UpdateAllocationWindowsRequest$outboundSchema.parse(
      updateAllocationWindowsRequest,
    ),
  );
}

export function updateAllocationWindowsRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateAllocationWindowsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateAllocationWindowsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateAllocationWindowsRequest' from JSON`,
  );
}
