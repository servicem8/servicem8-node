/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateAllocationWindowsSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type CreateAllocationWindowsResponseResult =
  | components.Result
  | components.ErrorT;

export type CreateAllocationWindowsResponse = {
  headers: { [k: string]: Array<string> };
  result: components.Result | components.ErrorT;
};

/** @internal */
export const CreateAllocationWindowsSecurity$inboundSchema: z.ZodType<
  CreateAllocationWindowsSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type CreateAllocationWindowsSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const CreateAllocationWindowsSecurity$outboundSchema: z.ZodType<
  CreateAllocationWindowsSecurity$Outbound,
  z.ZodTypeDef,
  CreateAllocationWindowsSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAllocationWindowsSecurity$ {
  /** @deprecated use `CreateAllocationWindowsSecurity$inboundSchema` instead. */
  export const inboundSchema = CreateAllocationWindowsSecurity$inboundSchema;
  /** @deprecated use `CreateAllocationWindowsSecurity$outboundSchema` instead. */
  export const outboundSchema = CreateAllocationWindowsSecurity$outboundSchema;
  /** @deprecated use `CreateAllocationWindowsSecurity$Outbound` instead. */
  export type Outbound = CreateAllocationWindowsSecurity$Outbound;
}

export function createAllocationWindowsSecurityToJSON(
  createAllocationWindowsSecurity: CreateAllocationWindowsSecurity,
): string {
  return JSON.stringify(
    CreateAllocationWindowsSecurity$outboundSchema.parse(
      createAllocationWindowsSecurity,
    ),
  );
}

export function createAllocationWindowsSecurityFromJSON(
  jsonString: string,
): SafeParseResult<CreateAllocationWindowsSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateAllocationWindowsSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateAllocationWindowsSecurity' from JSON`,
  );
}

/** @internal */
export const CreateAllocationWindowsResponseResult$inboundSchema: z.ZodType<
  CreateAllocationWindowsResponseResult,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type CreateAllocationWindowsResponseResult$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const CreateAllocationWindowsResponseResult$outboundSchema: z.ZodType<
  CreateAllocationWindowsResponseResult$Outbound,
  z.ZodTypeDef,
  CreateAllocationWindowsResponseResult
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAllocationWindowsResponseResult$ {
  /** @deprecated use `CreateAllocationWindowsResponseResult$inboundSchema` instead. */
  export const inboundSchema =
    CreateAllocationWindowsResponseResult$inboundSchema;
  /** @deprecated use `CreateAllocationWindowsResponseResult$outboundSchema` instead. */
  export const outboundSchema =
    CreateAllocationWindowsResponseResult$outboundSchema;
  /** @deprecated use `CreateAllocationWindowsResponseResult$Outbound` instead. */
  export type Outbound = CreateAllocationWindowsResponseResult$Outbound;
}

export function createAllocationWindowsResponseResultToJSON(
  createAllocationWindowsResponseResult: CreateAllocationWindowsResponseResult,
): string {
  return JSON.stringify(
    CreateAllocationWindowsResponseResult$outboundSchema.parse(
      createAllocationWindowsResponseResult,
    ),
  );
}

export function createAllocationWindowsResponseResultFromJSON(
  jsonString: string,
): SafeParseResult<CreateAllocationWindowsResponseResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateAllocationWindowsResponseResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateAllocationWindowsResponseResult' from JSON`,
  );
}

/** @internal */
export const CreateAllocationWindowsResponse$inboundSchema: z.ZodType<
  CreateAllocationWindowsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: z.union([
    components.Result$inboundSchema,
    components.ErrorT$inboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type CreateAllocationWindowsResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result: components.Result$Outbound | components.ErrorT$Outbound;
};

/** @internal */
export const CreateAllocationWindowsResponse$outboundSchema: z.ZodType<
  CreateAllocationWindowsResponse$Outbound,
  z.ZodTypeDef,
  CreateAllocationWindowsResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: z.union([
    components.Result$outboundSchema,
    components.ErrorT$outboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAllocationWindowsResponse$ {
  /** @deprecated use `CreateAllocationWindowsResponse$inboundSchema` instead. */
  export const inboundSchema = CreateAllocationWindowsResponse$inboundSchema;
  /** @deprecated use `CreateAllocationWindowsResponse$outboundSchema` instead. */
  export const outboundSchema = CreateAllocationWindowsResponse$outboundSchema;
  /** @deprecated use `CreateAllocationWindowsResponse$Outbound` instead. */
  export type Outbound = CreateAllocationWindowsResponse$Outbound;
}

export function createAllocationWindowsResponseToJSON(
  createAllocationWindowsResponse: CreateAllocationWindowsResponse,
): string {
  return JSON.stringify(
    CreateAllocationWindowsResponse$outboundSchema.parse(
      createAllocationWindowsResponse,
    ),
  );
}

export function createAllocationWindowsResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateAllocationWindowsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateAllocationWindowsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateAllocationWindowsResponse' from JSON`,
  );
}
