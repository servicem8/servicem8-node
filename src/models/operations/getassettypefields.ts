/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetAssetTypeFieldsRequest = {
  /**
   * UUID of the Asset Type Field
   */
  uuid: string;
};

export type GetAssetTypeFieldsResponse =
  | components.ErrorT
  | components.AssetTypeField;

/** @internal */
export const GetAssetTypeFieldsRequest$inboundSchema: z.ZodType<
  GetAssetTypeFieldsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type GetAssetTypeFieldsRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const GetAssetTypeFieldsRequest$outboundSchema: z.ZodType<
  GetAssetTypeFieldsRequest$Outbound,
  z.ZodTypeDef,
  GetAssetTypeFieldsRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAssetTypeFieldsRequest$ {
  /** @deprecated use `GetAssetTypeFieldsRequest$inboundSchema` instead. */
  export const inboundSchema = GetAssetTypeFieldsRequest$inboundSchema;
  /** @deprecated use `GetAssetTypeFieldsRequest$outboundSchema` instead. */
  export const outboundSchema = GetAssetTypeFieldsRequest$outboundSchema;
  /** @deprecated use `GetAssetTypeFieldsRequest$Outbound` instead. */
  export type Outbound = GetAssetTypeFieldsRequest$Outbound;
}

export function getAssetTypeFieldsRequestToJSON(
  getAssetTypeFieldsRequest: GetAssetTypeFieldsRequest,
): string {
  return JSON.stringify(
    GetAssetTypeFieldsRequest$outboundSchema.parse(getAssetTypeFieldsRequest),
  );
}

export function getAssetTypeFieldsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAssetTypeFieldsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAssetTypeFieldsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAssetTypeFieldsRequest' from JSON`,
  );
}

/** @internal */
export const GetAssetTypeFieldsResponse$inboundSchema: z.ZodType<
  GetAssetTypeFieldsResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.ErrorT$inboundSchema,
  components.AssetTypeField$inboundSchema,
]);

/** @internal */
export type GetAssetTypeFieldsResponse$Outbound =
  | components.ErrorT$Outbound
  | components.AssetTypeField$Outbound;

/** @internal */
export const GetAssetTypeFieldsResponse$outboundSchema: z.ZodType<
  GetAssetTypeFieldsResponse$Outbound,
  z.ZodTypeDef,
  GetAssetTypeFieldsResponse
> = z.union([
  components.ErrorT$outboundSchema,
  components.AssetTypeField$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAssetTypeFieldsResponse$ {
  /** @deprecated use `GetAssetTypeFieldsResponse$inboundSchema` instead. */
  export const inboundSchema = GetAssetTypeFieldsResponse$inboundSchema;
  /** @deprecated use `GetAssetTypeFieldsResponse$outboundSchema` instead. */
  export const outboundSchema = GetAssetTypeFieldsResponse$outboundSchema;
  /** @deprecated use `GetAssetTypeFieldsResponse$Outbound` instead. */
  export type Outbound = GetAssetTypeFieldsResponse$Outbound;
}

export function getAssetTypeFieldsResponseToJSON(
  getAssetTypeFieldsResponse: GetAssetTypeFieldsResponse,
): string {
  return JSON.stringify(
    GetAssetTypeFieldsResponse$outboundSchema.parse(getAssetTypeFieldsResponse),
  );
}

export function getAssetTypeFieldsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAssetTypeFieldsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAssetTypeFieldsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAssetTypeFieldsResponse' from JSON`,
  );
}
