/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteStaffMessagesSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type DeleteStaffMessagesRequest = {
  /**
   * UUID of the Staff Message
   */
  uuid: string;
};

export type DeleteStaffMessagesResponse = components.Result | components.ErrorT;

/** @internal */
export const DeleteStaffMessagesSecurity$inboundSchema: z.ZodType<
  DeleteStaffMessagesSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type DeleteStaffMessagesSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const DeleteStaffMessagesSecurity$outboundSchema: z.ZodType<
  DeleteStaffMessagesSecurity$Outbound,
  z.ZodTypeDef,
  DeleteStaffMessagesSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteStaffMessagesSecurity$ {
  /** @deprecated use `DeleteStaffMessagesSecurity$inboundSchema` instead. */
  export const inboundSchema = DeleteStaffMessagesSecurity$inboundSchema;
  /** @deprecated use `DeleteStaffMessagesSecurity$outboundSchema` instead. */
  export const outboundSchema = DeleteStaffMessagesSecurity$outboundSchema;
  /** @deprecated use `DeleteStaffMessagesSecurity$Outbound` instead. */
  export type Outbound = DeleteStaffMessagesSecurity$Outbound;
}

export function deleteStaffMessagesSecurityToJSON(
  deleteStaffMessagesSecurity: DeleteStaffMessagesSecurity,
): string {
  return JSON.stringify(
    DeleteStaffMessagesSecurity$outboundSchema.parse(
      deleteStaffMessagesSecurity,
    ),
  );
}

export function deleteStaffMessagesSecurityFromJSON(
  jsonString: string,
): SafeParseResult<DeleteStaffMessagesSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteStaffMessagesSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteStaffMessagesSecurity' from JSON`,
  );
}

/** @internal */
export const DeleteStaffMessagesRequest$inboundSchema: z.ZodType<
  DeleteStaffMessagesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type DeleteStaffMessagesRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const DeleteStaffMessagesRequest$outboundSchema: z.ZodType<
  DeleteStaffMessagesRequest$Outbound,
  z.ZodTypeDef,
  DeleteStaffMessagesRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteStaffMessagesRequest$ {
  /** @deprecated use `DeleteStaffMessagesRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteStaffMessagesRequest$inboundSchema;
  /** @deprecated use `DeleteStaffMessagesRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteStaffMessagesRequest$outboundSchema;
  /** @deprecated use `DeleteStaffMessagesRequest$Outbound` instead. */
  export type Outbound = DeleteStaffMessagesRequest$Outbound;
}

export function deleteStaffMessagesRequestToJSON(
  deleteStaffMessagesRequest: DeleteStaffMessagesRequest,
): string {
  return JSON.stringify(
    DeleteStaffMessagesRequest$outboundSchema.parse(deleteStaffMessagesRequest),
  );
}

export function deleteStaffMessagesRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteStaffMessagesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteStaffMessagesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteStaffMessagesRequest' from JSON`,
  );
}

/** @internal */
export const DeleteStaffMessagesResponse$inboundSchema: z.ZodType<
  DeleteStaffMessagesResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type DeleteStaffMessagesResponse$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const DeleteStaffMessagesResponse$outboundSchema: z.ZodType<
  DeleteStaffMessagesResponse$Outbound,
  z.ZodTypeDef,
  DeleteStaffMessagesResponse
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteStaffMessagesResponse$ {
  /** @deprecated use `DeleteStaffMessagesResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteStaffMessagesResponse$inboundSchema;
  /** @deprecated use `DeleteStaffMessagesResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteStaffMessagesResponse$outboundSchema;
  /** @deprecated use `DeleteStaffMessagesResponse$Outbound` instead. */
  export type Outbound = DeleteStaffMessagesResponse$Outbound;
}

export function deleteStaffMessagesResponseToJSON(
  deleteStaffMessagesResponse: DeleteStaffMessagesResponse,
): string {
  return JSON.stringify(
    DeleteStaffMessagesResponse$outboundSchema.parse(
      deleteStaffMessagesResponse,
    ),
  );
}

export function deleteStaffMessagesResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteStaffMessagesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteStaffMessagesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteStaffMessagesResponse' from JSON`,
  );
}
