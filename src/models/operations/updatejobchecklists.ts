/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateJobChecklistsSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type UpdateJobChecklistsRequest = {
  /**
   * UUID of the Job Checklist
   */
  uuid: string;
  /**
   * Job Checklist fields to update
   */
  jobChecklist: components.JobChecklistInput;
};

export type UpdateJobChecklistsResponse = components.Result | components.ErrorT;

/** @internal */
export const UpdateJobChecklistsSecurity$inboundSchema: z.ZodType<
  UpdateJobChecklistsSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type UpdateJobChecklistsSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const UpdateJobChecklistsSecurity$outboundSchema: z.ZodType<
  UpdateJobChecklistsSecurity$Outbound,
  z.ZodTypeDef,
  UpdateJobChecklistsSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateJobChecklistsSecurity$ {
  /** @deprecated use `UpdateJobChecklistsSecurity$inboundSchema` instead. */
  export const inboundSchema = UpdateJobChecklistsSecurity$inboundSchema;
  /** @deprecated use `UpdateJobChecklistsSecurity$outboundSchema` instead. */
  export const outboundSchema = UpdateJobChecklistsSecurity$outboundSchema;
  /** @deprecated use `UpdateJobChecklistsSecurity$Outbound` instead. */
  export type Outbound = UpdateJobChecklistsSecurity$Outbound;
}

export function updateJobChecklistsSecurityToJSON(
  updateJobChecklistsSecurity: UpdateJobChecklistsSecurity,
): string {
  return JSON.stringify(
    UpdateJobChecklistsSecurity$outboundSchema.parse(
      updateJobChecklistsSecurity,
    ),
  );
}

export function updateJobChecklistsSecurityFromJSON(
  jsonString: string,
): SafeParseResult<UpdateJobChecklistsSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateJobChecklistsSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateJobChecklistsSecurity' from JSON`,
  );
}

/** @internal */
export const UpdateJobChecklistsRequest$inboundSchema: z.ZodType<
  UpdateJobChecklistsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  JobChecklist: components.JobChecklistInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "JobChecklist": "jobChecklist",
  });
});

/** @internal */
export type UpdateJobChecklistsRequest$Outbound = {
  uuid: string;
  JobChecklist: components.JobChecklistInput$Outbound;
};

/** @internal */
export const UpdateJobChecklistsRequest$outboundSchema: z.ZodType<
  UpdateJobChecklistsRequest$Outbound,
  z.ZodTypeDef,
  UpdateJobChecklistsRequest
> = z.object({
  uuid: z.string(),
  jobChecklist: components.JobChecklistInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    jobChecklist: "JobChecklist",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateJobChecklistsRequest$ {
  /** @deprecated use `UpdateJobChecklistsRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateJobChecklistsRequest$inboundSchema;
  /** @deprecated use `UpdateJobChecklistsRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateJobChecklistsRequest$outboundSchema;
  /** @deprecated use `UpdateJobChecklistsRequest$Outbound` instead. */
  export type Outbound = UpdateJobChecklistsRequest$Outbound;
}

export function updateJobChecklistsRequestToJSON(
  updateJobChecklistsRequest: UpdateJobChecklistsRequest,
): string {
  return JSON.stringify(
    UpdateJobChecklistsRequest$outboundSchema.parse(updateJobChecklistsRequest),
  );
}

export function updateJobChecklistsRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateJobChecklistsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateJobChecklistsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateJobChecklistsRequest' from JSON`,
  );
}

/** @internal */
export const UpdateJobChecklistsResponse$inboundSchema: z.ZodType<
  UpdateJobChecklistsResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type UpdateJobChecklistsResponse$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const UpdateJobChecklistsResponse$outboundSchema: z.ZodType<
  UpdateJobChecklistsResponse$Outbound,
  z.ZodTypeDef,
  UpdateJobChecklistsResponse
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateJobChecklistsResponse$ {
  /** @deprecated use `UpdateJobChecklistsResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateJobChecklistsResponse$inboundSchema;
  /** @deprecated use `UpdateJobChecklistsResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateJobChecklistsResponse$outboundSchema;
  /** @deprecated use `UpdateJobChecklistsResponse$Outbound` instead. */
  export type Outbound = UpdateJobChecklistsResponse$Outbound;
}

export function updateJobChecklistsResponseToJSON(
  updateJobChecklistsResponse: UpdateJobChecklistsResponse,
): string {
  return JSON.stringify(
    UpdateJobChecklistsResponse$outboundSchema.parse(
      updateJobChecklistsResponse,
    ),
  );
}

export function updateJobChecklistsResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateJobChecklistsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateJobChecklistsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateJobChecklistsResponse' from JSON`,
  );
}
