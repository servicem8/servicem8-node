/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AttachInboxMessageToJobRequest = {
  /**
   * UUID of the inbox message
   */
  uuid: string;
  attachToJobRequest: components.AttachToJobRequest;
};

/** @internal */
export const AttachInboxMessageToJobRequest$inboundSchema: z.ZodType<
  AttachInboxMessageToJobRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  AttachToJobRequest: components.AttachToJobRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "AttachToJobRequest": "attachToJobRequest",
  });
});

/** @internal */
export type AttachInboxMessageToJobRequest$Outbound = {
  uuid: string;
  AttachToJobRequest: components.AttachToJobRequest$Outbound;
};

/** @internal */
export const AttachInboxMessageToJobRequest$outboundSchema: z.ZodType<
  AttachInboxMessageToJobRequest$Outbound,
  z.ZodTypeDef,
  AttachInboxMessageToJobRequest
> = z.object({
  uuid: z.string(),
  attachToJobRequest: components.AttachToJobRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    attachToJobRequest: "AttachToJobRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AttachInboxMessageToJobRequest$ {
  /** @deprecated use `AttachInboxMessageToJobRequest$inboundSchema` instead. */
  export const inboundSchema = AttachInboxMessageToJobRequest$inboundSchema;
  /** @deprecated use `AttachInboxMessageToJobRequest$outboundSchema` instead. */
  export const outboundSchema = AttachInboxMessageToJobRequest$outboundSchema;
  /** @deprecated use `AttachInboxMessageToJobRequest$Outbound` instead. */
  export type Outbound = AttachInboxMessageToJobRequest$Outbound;
}

export function attachInboxMessageToJobRequestToJSON(
  attachInboxMessageToJobRequest: AttachInboxMessageToJobRequest,
): string {
  return JSON.stringify(
    AttachInboxMessageToJobRequest$outboundSchema.parse(
      attachInboxMessageToJobRequest,
    ),
  );
}

export function attachInboxMessageToJobRequestFromJSON(
  jsonString: string,
): SafeParseResult<AttachInboxMessageToJobRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AttachInboxMessageToJobRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AttachInboxMessageToJobRequest' from JSON`,
  );
}
