/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteAttachmentsRequest = {
  /**
   * UUID of the Attachment
   */
  uuid: string;
};

/** @internal */
export const DeleteAttachmentsRequest$inboundSchema: z.ZodType<
  DeleteAttachmentsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type DeleteAttachmentsRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const DeleteAttachmentsRequest$outboundSchema: z.ZodType<
  DeleteAttachmentsRequest$Outbound,
  z.ZodTypeDef,
  DeleteAttachmentsRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteAttachmentsRequest$ {
  /** @deprecated use `DeleteAttachmentsRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteAttachmentsRequest$inboundSchema;
  /** @deprecated use `DeleteAttachmentsRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteAttachmentsRequest$outboundSchema;
  /** @deprecated use `DeleteAttachmentsRequest$Outbound` instead. */
  export type Outbound = DeleteAttachmentsRequest$Outbound;
}

export function deleteAttachmentsRequestToJSON(
  deleteAttachmentsRequest: DeleteAttachmentsRequest,
): string {
  return JSON.stringify(
    DeleteAttachmentsRequest$outboundSchema.parse(deleteAttachmentsRequest),
  );
}

export function deleteAttachmentsRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteAttachmentsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteAttachmentsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteAttachmentsRequest' from JSON`,
  );
}
