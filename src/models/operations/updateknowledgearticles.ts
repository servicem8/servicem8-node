/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateKnowledgeArticlesRequest = {
  /**
   * UUID of the Knowledge Article
   */
  uuid: string;
  /**
   * Knowledge Article fields to update
   */
  knowledgeArticle: components.KnowledgeArticleInput;
};

export type UpdateKnowledgeArticlesResponse =
  | components.Result
  | components.ErrorT;

/** @internal */
export const UpdateKnowledgeArticlesRequest$inboundSchema: z.ZodType<
  UpdateKnowledgeArticlesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  KnowledgeArticle: components.KnowledgeArticleInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "KnowledgeArticle": "knowledgeArticle",
  });
});

/** @internal */
export type UpdateKnowledgeArticlesRequest$Outbound = {
  uuid: string;
  KnowledgeArticle: components.KnowledgeArticleInput$Outbound;
};

/** @internal */
export const UpdateKnowledgeArticlesRequest$outboundSchema: z.ZodType<
  UpdateKnowledgeArticlesRequest$Outbound,
  z.ZodTypeDef,
  UpdateKnowledgeArticlesRequest
> = z.object({
  uuid: z.string(),
  knowledgeArticle: components.KnowledgeArticleInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    knowledgeArticle: "KnowledgeArticle",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeArticlesRequest$ {
  /** @deprecated use `UpdateKnowledgeArticlesRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateKnowledgeArticlesRequest$inboundSchema;
  /** @deprecated use `UpdateKnowledgeArticlesRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateKnowledgeArticlesRequest$outboundSchema;
  /** @deprecated use `UpdateKnowledgeArticlesRequest$Outbound` instead. */
  export type Outbound = UpdateKnowledgeArticlesRequest$Outbound;
}

export function updateKnowledgeArticlesRequestToJSON(
  updateKnowledgeArticlesRequest: UpdateKnowledgeArticlesRequest,
): string {
  return JSON.stringify(
    UpdateKnowledgeArticlesRequest$outboundSchema.parse(
      updateKnowledgeArticlesRequest,
    ),
  );
}

export function updateKnowledgeArticlesRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateKnowledgeArticlesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateKnowledgeArticlesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeArticlesRequest' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeArticlesResponse$inboundSchema: z.ZodType<
  UpdateKnowledgeArticlesResponse,
  z.ZodTypeDef,
  unknown
> = z.union([components.Result$inboundSchema, components.ErrorT$inboundSchema]);

/** @internal */
export type UpdateKnowledgeArticlesResponse$Outbound =
  | components.Result$Outbound
  | components.ErrorT$Outbound;

/** @internal */
export const UpdateKnowledgeArticlesResponse$outboundSchema: z.ZodType<
  UpdateKnowledgeArticlesResponse$Outbound,
  z.ZodTypeDef,
  UpdateKnowledgeArticlesResponse
> = z.union([
  components.Result$outboundSchema,
  components.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeArticlesResponse$ {
  /** @deprecated use `UpdateKnowledgeArticlesResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateKnowledgeArticlesResponse$inboundSchema;
  /** @deprecated use `UpdateKnowledgeArticlesResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateKnowledgeArticlesResponse$outboundSchema;
  /** @deprecated use `UpdateKnowledgeArticlesResponse$Outbound` instead. */
  export type Outbound = UpdateKnowledgeArticlesResponse$Outbound;
}

export function updateKnowledgeArticlesResponseToJSON(
  updateKnowledgeArticlesResponse: UpdateKnowledgeArticlesResponse,
): string {
  return JSON.stringify(
    UpdateKnowledgeArticlesResponse$outboundSchema.parse(
      updateKnowledgeArticlesResponse,
    ),
  );
}

export function updateKnowledgeArticlesResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateKnowledgeArticlesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateKnowledgeArticlesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeArticlesResponse' from JSON`,
  );
}
