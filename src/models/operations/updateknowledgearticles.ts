/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateKnowledgeArticlesRequest = {
  /**
   * UUID of the Knowledge Article
   */
  uuid: string;
  /**
   * Knowledge Article fields to update
   */
  knowledgeArticleCreate: components.KnowledgeArticleCreate;
};

/** @internal */
export const UpdateKnowledgeArticlesRequest$inboundSchema: z.ZodType<
  UpdateKnowledgeArticlesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  KnowledgeArticleCreate: components.KnowledgeArticleCreate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "KnowledgeArticleCreate": "knowledgeArticleCreate",
  });
});

/** @internal */
export type UpdateKnowledgeArticlesRequest$Outbound = {
  uuid: string;
  KnowledgeArticleCreate: components.KnowledgeArticleCreate$Outbound;
};

/** @internal */
export const UpdateKnowledgeArticlesRequest$outboundSchema: z.ZodType<
  UpdateKnowledgeArticlesRequest$Outbound,
  z.ZodTypeDef,
  UpdateKnowledgeArticlesRequest
> = z.object({
  uuid: z.string(),
  knowledgeArticleCreate: components.KnowledgeArticleCreate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    knowledgeArticleCreate: "KnowledgeArticleCreate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeArticlesRequest$ {
  /** @deprecated use `UpdateKnowledgeArticlesRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateKnowledgeArticlesRequest$inboundSchema;
  /** @deprecated use `UpdateKnowledgeArticlesRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateKnowledgeArticlesRequest$outboundSchema;
  /** @deprecated use `UpdateKnowledgeArticlesRequest$Outbound` instead. */
  export type Outbound = UpdateKnowledgeArticlesRequest$Outbound;
}

export function updateKnowledgeArticlesRequestToJSON(
  updateKnowledgeArticlesRequest: UpdateKnowledgeArticlesRequest,
): string {
  return JSON.stringify(
    UpdateKnowledgeArticlesRequest$outboundSchema.parse(
      updateKnowledgeArticlesRequest,
    ),
  );
}

export function updateKnowledgeArticlesRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateKnowledgeArticlesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateKnowledgeArticlesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeArticlesRequest' from JSON`,
  );
}
