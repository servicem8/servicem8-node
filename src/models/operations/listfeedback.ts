/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListFeedbackSecurity = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

export type ListFeedbackResponse =
  | components.ErrorT
  | Array<components.Feedback>;

/** @internal */
export const ListFeedbackSecurity$inboundSchema: z.ZodType<
  ListFeedbackSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/** @internal */
export type ListFeedbackSecurity$Outbound = {
  apiKey?: string | undefined;
  oauth2?: string | undefined;
};

/** @internal */
export const ListFeedbackSecurity$outboundSchema: z.ZodType<
  ListFeedbackSecurity$Outbound,
  z.ZodTypeDef,
  ListFeedbackSecurity
> = z.object({
  apiKey: z.string().optional(),
  oauth2: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListFeedbackSecurity$ {
  /** @deprecated use `ListFeedbackSecurity$inboundSchema` instead. */
  export const inboundSchema = ListFeedbackSecurity$inboundSchema;
  /** @deprecated use `ListFeedbackSecurity$outboundSchema` instead. */
  export const outboundSchema = ListFeedbackSecurity$outboundSchema;
  /** @deprecated use `ListFeedbackSecurity$Outbound` instead. */
  export type Outbound = ListFeedbackSecurity$Outbound;
}

export function listFeedbackSecurityToJSON(
  listFeedbackSecurity: ListFeedbackSecurity,
): string {
  return JSON.stringify(
    ListFeedbackSecurity$outboundSchema.parse(listFeedbackSecurity),
  );
}

export function listFeedbackSecurityFromJSON(
  jsonString: string,
): SafeParseResult<ListFeedbackSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListFeedbackSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListFeedbackSecurity' from JSON`,
  );
}

/** @internal */
export const ListFeedbackResponse$inboundSchema: z.ZodType<
  ListFeedbackResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.ErrorT$inboundSchema,
  z.array(components.Feedback$inboundSchema),
]);

/** @internal */
export type ListFeedbackResponse$Outbound =
  | components.ErrorT$Outbound
  | Array<components.Feedback$Outbound>;

/** @internal */
export const ListFeedbackResponse$outboundSchema: z.ZodType<
  ListFeedbackResponse$Outbound,
  z.ZodTypeDef,
  ListFeedbackResponse
> = z.union([
  components.ErrorT$outboundSchema,
  z.array(components.Feedback$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListFeedbackResponse$ {
  /** @deprecated use `ListFeedbackResponse$inboundSchema` instead. */
  export const inboundSchema = ListFeedbackResponse$inboundSchema;
  /** @deprecated use `ListFeedbackResponse$outboundSchema` instead. */
  export const outboundSchema = ListFeedbackResponse$outboundSchema;
  /** @deprecated use `ListFeedbackResponse$Outbound` instead. */
  export type Outbound = ListFeedbackResponse$Outbound;
}

export function listFeedbackResponseToJSON(
  listFeedbackResponse: ListFeedbackResponse,
): string {
  return JSON.stringify(
    ListFeedbackResponse$outboundSchema.parse(listFeedbackResponse),
  );
}

export function listFeedbackResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListFeedbackResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListFeedbackResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListFeedbackResponse' from JSON`,
  );
}
