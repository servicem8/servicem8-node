/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ConvertInboxMessageToJobRequest = {
  /**
   * UUID of the inbox message
   */
  uuid: string;
  /**
   * Parameters for converting the inbox message into a job (send an empty object to accept defaults)
   */
  convertToJobRequest: components.ConvertToJobRequest;
};

/** @internal */
export const ConvertInboxMessageToJobRequest$inboundSchema: z.ZodType<
  ConvertInboxMessageToJobRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  ConvertToJobRequest: components.ConvertToJobRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "ConvertToJobRequest": "convertToJobRequest",
  });
});

/** @internal */
export type ConvertInboxMessageToJobRequest$Outbound = {
  uuid: string;
  ConvertToJobRequest: components.ConvertToJobRequest$Outbound;
};

/** @internal */
export const ConvertInboxMessageToJobRequest$outboundSchema: z.ZodType<
  ConvertInboxMessageToJobRequest$Outbound,
  z.ZodTypeDef,
  ConvertInboxMessageToJobRequest
> = z.object({
  uuid: z.string(),
  convertToJobRequest: components.ConvertToJobRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    convertToJobRequest: "ConvertToJobRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConvertInboxMessageToJobRequest$ {
  /** @deprecated use `ConvertInboxMessageToJobRequest$inboundSchema` instead. */
  export const inboundSchema = ConvertInboxMessageToJobRequest$inboundSchema;
  /** @deprecated use `ConvertInboxMessageToJobRequest$outboundSchema` instead. */
  export const outboundSchema = ConvertInboxMessageToJobRequest$outboundSchema;
  /** @deprecated use `ConvertInboxMessageToJobRequest$Outbound` instead. */
  export type Outbound = ConvertInboxMessageToJobRequest$Outbound;
}

export function convertInboxMessageToJobRequestToJSON(
  convertInboxMessageToJobRequest: ConvertInboxMessageToJobRequest,
): string {
  return JSON.stringify(
    ConvertInboxMessageToJobRequest$outboundSchema.parse(
      convertInboxMessageToJobRequest,
    ),
  );
}

export function convertInboxMessageToJobRequestFromJSON(
  jsonString: string,
): SafeParseResult<ConvertInboxMessageToJobRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ConvertInboxMessageToJobRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ConvertInboxMessageToJobRequest' from JSON`,
  );
}
