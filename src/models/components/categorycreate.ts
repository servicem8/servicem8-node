/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CategoryCreate = {
  /**
   * The name of the job category. Used to classify and organize jobs.
   */
  name: string;
  /**
   * The colour associated with this job category. This colour is used to visually identify the category on the dispatch board and in calendar views. The value is a hexadecimal colour code (6 characters 0-9a-f).
   */
  colour?: string | undefined;
  /**
   * Unique identifier for this record
   */
  uuid?: string | undefined;
};

/** @internal */
export const CategoryCreate$inboundSchema: z.ZodType<
  CategoryCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  colour: z.string().optional(),
  uuid: z.string().optional(),
});

/** @internal */
export type CategoryCreate$Outbound = {
  name: string;
  colour?: string | undefined;
  uuid?: string | undefined;
};

/** @internal */
export const CategoryCreate$outboundSchema: z.ZodType<
  CategoryCreate$Outbound,
  z.ZodTypeDef,
  CategoryCreate
> = z.object({
  name: z.string(),
  colour: z.string().optional(),
  uuid: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CategoryCreate$ {
  /** @deprecated use `CategoryCreate$inboundSchema` instead. */
  export const inboundSchema = CategoryCreate$inboundSchema;
  /** @deprecated use `CategoryCreate$outboundSchema` instead. */
  export const outboundSchema = CategoryCreate$outboundSchema;
  /** @deprecated use `CategoryCreate$Outbound` instead. */
  export type Outbound = CategoryCreate$Outbound;
}

export function categoryCreateToJSON(categoryCreate: CategoryCreate): string {
  return JSON.stringify(CategoryCreate$outboundSchema.parse(categoryCreate));
}

export function categoryCreateFromJSON(
  jsonString: string,
): SafeParseResult<CategoryCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CategoryCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CategoryCreate' from JSON`,
  );
}
