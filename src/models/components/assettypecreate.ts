/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AssetTypeCreate = {
  /**
   * Unique identifier for this record
   */
  uuid?: string | undefined;
  /**
   * The name of the asset type. Used to identify different categories of assets that can be tracked in the system. Examples might include 'Air Conditioner', 'Fire Extinguisher', etc.
   */
  name?: string | undefined;
};

/** @internal */
export const AssetTypeCreate$inboundSchema: z.ZodType<
  AssetTypeCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string().optional(),
  name: z.string().optional(),
});

/** @internal */
export type AssetTypeCreate$Outbound = {
  uuid?: string | undefined;
  name?: string | undefined;
};

/** @internal */
export const AssetTypeCreate$outboundSchema: z.ZodType<
  AssetTypeCreate$Outbound,
  z.ZodTypeDef,
  AssetTypeCreate
> = z.object({
  uuid: z.string().optional(),
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssetTypeCreate$ {
  /** @deprecated use `AssetTypeCreate$inboundSchema` instead. */
  export const inboundSchema = AssetTypeCreate$inboundSchema;
  /** @deprecated use `AssetTypeCreate$outboundSchema` instead. */
  export const outboundSchema = AssetTypeCreate$outboundSchema;
  /** @deprecated use `AssetTypeCreate$Outbound` instead. */
  export type Outbound = AssetTypeCreate$Outbound;
}

export function assetTypeCreateToJSON(
  assetTypeCreate: AssetTypeCreate,
): string {
  return JSON.stringify(AssetTypeCreate$outboundSchema.parse(assetTypeCreate));
}

export function assetTypeCreateFromJSON(
  jsonString: string,
): SafeParseResult<AssetTypeCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AssetTypeCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AssetTypeCreate' from JSON`,
  );
}
