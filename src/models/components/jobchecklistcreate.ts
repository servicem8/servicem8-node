/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const JobChecklistCreateBaseDate = {
  JobCreateTime: "JOB_CREATE_TIME",
  NextBookingTime: "NEXT_BOOKING_TIME",
} as const;
export type JobChecklistCreateBaseDate = ClosedEnum<
  typeof JobChecklistCreateBaseDate
>;

export const JobChecklistCreateUnit = {
  Day: "DAY",
  Hour: "HOUR",
  Minute: "MINUTE",
} as const;
export type JobChecklistCreateUnit = ClosedEnum<typeof JobChecklistCreateUnit>;

export type JobChecklistCreateRelativeDateTime = {
  baseDate: JobChecklistCreateBaseDate;
  unit: JobChecklistCreateUnit;
  /**
   * Number of units to add/subtract from base date. Negative quantities mean the reminder occurs before the base date. Reminders scheduled into the past will not occur.
   */
  quantity: number;
};

export type JobChecklistCreateReminderData2 = {
  relativeDateTime: JobChecklistCreateRelativeDateTime;
};

export type JobChecklistCreateReminderDataUnion2 =
  | JobChecklistCreateReminderData2
  | string;

export type JobChecklistCreateReminderData1 = {
  absoluteDateTime: string;
};

export type JobChecklistCreateReminderDataUnion1 =
  | JobChecklistCreateReminderData1
  | string;

/**
 * JSON data containing additional information for the reminder. Format depends on the reminder_type. For ABSOLUTE_DATETIME, includes 'absoluteDateTime'. For RELATIVE_DATETIME, includes 'relativeDateTime' with 'baseDate', 'unit', and 'quantity'. Exposed via API as 'reminder_data'.
 */
export type JobChecklistCreateReminderDataUnion3 =
  | JobChecklistCreateReminderData1
  | string
  | JobChecklistCreateReminderData2
  | string;

export type JobChecklistCreate = {
  /**
   * Unique identifier for this record
   */
  uuid?: string | undefined;
  /**
   * UUID of the job this checklist item belongs to. This links the checklist item to a specific job in the system.
   */
  jobUuid?: string | undefined;
  /**
   * The name or description of the checklist item. This is displayed to users in the mobile app and web interface.
   */
  name?: string | undefined;
  /**
   * The section or category name under which this checklist item is grouped. This helps organize related checklist items together.
   */
  sectionName?: string | undefined;
  /**
   * The type of checklist item. Valid values are: 'Todo', 'Asset', 'Photo', 'Form', and 'Document'. Defaults to 'Todo' if not specified. This determines the functionality and appearance of the checklist item.
   */
  itemType?: string | undefined;
  /**
   * A numeric value determining the order in which checklist items appear in the user interface. Lower values appear first. Used to customize the display sequence of items.
   */
  sortOrder?: number | undefined;
  /**
   * The date and time when the checklist item was marked as completed. Empty or '0000-00-00 00:00:00' indicates the item is not completed.
   */
  completedTimestamp?: string | undefined;
  /**
   * UUID of the staff member who completed this checklist item. References a Staff object. Empty if the item is not completed.
   */
  completedByStaffUuid?: string | undefined;
  /**
   * UUID of the job check-in during which this checklist item was completed. This links the checklist completion to a specific check-in event in the job history.
   */
  completedDuringCheckinUuid?: string | undefined;
  /**
   * The type of reminder associated with this checklist item. Valid values are: '' (no reminder), 'CHECK_IN', 'NAVIGATE', 'CHECK_OUT', 'ABSOLUTE_DATETIME', or 'RELATIVE_DATETIME'. Determines when the system will remind users about this checklist item.
   */
  reminderType?: string | undefined;
  /**
   * JSON data containing additional information for the reminder. Format depends on the reminder_type. For ABSOLUTE_DATETIME, includes 'absoluteDateTime'. For RELATIVE_DATETIME, includes 'relativeDateTime' with 'baseDate', 'unit', and 'quantity'. Exposed via API as 'reminder_data'.
   */
  reminderData?:
    | JobChecklistCreateReminderData1
    | string
    | JobChecklistCreateReminderData2
    | string
    | undefined;
  /**
   * The type of object which this checklist item is related to. For example, for Form checklists, this will be 'Form'.
   */
  regardingObject?: string | undefined;
  /**
   * The UUID of the object which this checklists item is related to. For example, for Form checklists, this is the UUID of the Form that must be completed to complete the checklist item.
   */
  regardingObjectUuid?: string | undefined;
  /**
   * The type of object which completes this checklist item. For example, for Form checklists, this will be 'FormResponse'.
   */
  fulfilledByObjectName?: string | undefined;
  /**
   * The UUID of the object which completes this checklist item. For example, for Form checklists, this references the UUID of a FormResponse record.
   */
  fulfilledByObjectUuid?: string | undefined;
  /**
   * JSON array of staff UUIDs to whom this checklist item is assigned. Determines which staff members are responsible for completing this checklist item. Currently limited to a maximum of 1 staff member.
   */
  assignedToStaffUuids?: Array<string> | undefined;
};

/** @internal */
export const JobChecklistCreateBaseDate$inboundSchema: z.ZodNativeEnum<
  typeof JobChecklistCreateBaseDate
> = z.nativeEnum(JobChecklistCreateBaseDate);

/** @internal */
export const JobChecklistCreateBaseDate$outboundSchema: z.ZodNativeEnum<
  typeof JobChecklistCreateBaseDate
> = JobChecklistCreateBaseDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobChecklistCreateBaseDate$ {
  /** @deprecated use `JobChecklistCreateBaseDate$inboundSchema` instead. */
  export const inboundSchema = JobChecklistCreateBaseDate$inboundSchema;
  /** @deprecated use `JobChecklistCreateBaseDate$outboundSchema` instead. */
  export const outboundSchema = JobChecklistCreateBaseDate$outboundSchema;
}

/** @internal */
export const JobChecklistCreateUnit$inboundSchema: z.ZodNativeEnum<
  typeof JobChecklistCreateUnit
> = z.nativeEnum(JobChecklistCreateUnit);

/** @internal */
export const JobChecklistCreateUnit$outboundSchema: z.ZodNativeEnum<
  typeof JobChecklistCreateUnit
> = JobChecklistCreateUnit$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobChecklistCreateUnit$ {
  /** @deprecated use `JobChecklistCreateUnit$inboundSchema` instead. */
  export const inboundSchema = JobChecklistCreateUnit$inboundSchema;
  /** @deprecated use `JobChecklistCreateUnit$outboundSchema` instead. */
  export const outboundSchema = JobChecklistCreateUnit$outboundSchema;
}

/** @internal */
export const JobChecklistCreateRelativeDateTime$inboundSchema: z.ZodType<
  JobChecklistCreateRelativeDateTime,
  z.ZodTypeDef,
  unknown
> = z.object({
  baseDate: JobChecklistCreateBaseDate$inboundSchema,
  unit: JobChecklistCreateUnit$inboundSchema,
  quantity: z.number().int(),
});

/** @internal */
export type JobChecklistCreateRelativeDateTime$Outbound = {
  baseDate: string;
  unit: string;
  quantity: number;
};

/** @internal */
export const JobChecklistCreateRelativeDateTime$outboundSchema: z.ZodType<
  JobChecklistCreateRelativeDateTime$Outbound,
  z.ZodTypeDef,
  JobChecklistCreateRelativeDateTime
> = z.object({
  baseDate: JobChecklistCreateBaseDate$outboundSchema,
  unit: JobChecklistCreateUnit$outboundSchema,
  quantity: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobChecklistCreateRelativeDateTime$ {
  /** @deprecated use `JobChecklistCreateRelativeDateTime$inboundSchema` instead. */
  export const inboundSchema = JobChecklistCreateRelativeDateTime$inboundSchema;
  /** @deprecated use `JobChecklistCreateRelativeDateTime$outboundSchema` instead. */
  export const outboundSchema =
    JobChecklistCreateRelativeDateTime$outboundSchema;
  /** @deprecated use `JobChecklistCreateRelativeDateTime$Outbound` instead. */
  export type Outbound = JobChecklistCreateRelativeDateTime$Outbound;
}

export function jobChecklistCreateRelativeDateTimeToJSON(
  jobChecklistCreateRelativeDateTime: JobChecklistCreateRelativeDateTime,
): string {
  return JSON.stringify(
    JobChecklistCreateRelativeDateTime$outboundSchema.parse(
      jobChecklistCreateRelativeDateTime,
    ),
  );
}

export function jobChecklistCreateRelativeDateTimeFromJSON(
  jsonString: string,
): SafeParseResult<JobChecklistCreateRelativeDateTime, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      JobChecklistCreateRelativeDateTime$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'JobChecklistCreateRelativeDateTime' from JSON`,
  );
}

/** @internal */
export const JobChecklistCreateReminderData2$inboundSchema: z.ZodType<
  JobChecklistCreateReminderData2,
  z.ZodTypeDef,
  unknown
> = z.object({
  relativeDateTime: z.lazy(() =>
    JobChecklistCreateRelativeDateTime$inboundSchema
  ),
});

/** @internal */
export type JobChecklistCreateReminderData2$Outbound = {
  relativeDateTime: JobChecklistCreateRelativeDateTime$Outbound;
};

/** @internal */
export const JobChecklistCreateReminderData2$outboundSchema: z.ZodType<
  JobChecklistCreateReminderData2$Outbound,
  z.ZodTypeDef,
  JobChecklistCreateReminderData2
> = z.object({
  relativeDateTime: z.lazy(() =>
    JobChecklistCreateRelativeDateTime$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobChecklistCreateReminderData2$ {
  /** @deprecated use `JobChecklistCreateReminderData2$inboundSchema` instead. */
  export const inboundSchema = JobChecklistCreateReminderData2$inboundSchema;
  /** @deprecated use `JobChecklistCreateReminderData2$outboundSchema` instead. */
  export const outboundSchema = JobChecklistCreateReminderData2$outboundSchema;
  /** @deprecated use `JobChecklistCreateReminderData2$Outbound` instead. */
  export type Outbound = JobChecklistCreateReminderData2$Outbound;
}

export function jobChecklistCreateReminderData2ToJSON(
  jobChecklistCreateReminderData2: JobChecklistCreateReminderData2,
): string {
  return JSON.stringify(
    JobChecklistCreateReminderData2$outboundSchema.parse(
      jobChecklistCreateReminderData2,
    ),
  );
}

export function jobChecklistCreateReminderData2FromJSON(
  jsonString: string,
): SafeParseResult<JobChecklistCreateReminderData2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => JobChecklistCreateReminderData2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'JobChecklistCreateReminderData2' from JSON`,
  );
}

/** @internal */
export const JobChecklistCreateReminderDataUnion2$inboundSchema: z.ZodType<
  JobChecklistCreateReminderDataUnion2,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => JobChecklistCreateReminderData2$inboundSchema),
  z.string(),
]);

/** @internal */
export type JobChecklistCreateReminderDataUnion2$Outbound =
  | JobChecklistCreateReminderData2$Outbound
  | string;

/** @internal */
export const JobChecklistCreateReminderDataUnion2$outboundSchema: z.ZodType<
  JobChecklistCreateReminderDataUnion2$Outbound,
  z.ZodTypeDef,
  JobChecklistCreateReminderDataUnion2
> = z.union([
  z.lazy(() => JobChecklistCreateReminderData2$outboundSchema),
  z.string(),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobChecklistCreateReminderDataUnion2$ {
  /** @deprecated use `JobChecklistCreateReminderDataUnion2$inboundSchema` instead. */
  export const inboundSchema =
    JobChecklistCreateReminderDataUnion2$inboundSchema;
  /** @deprecated use `JobChecklistCreateReminderDataUnion2$outboundSchema` instead. */
  export const outboundSchema =
    JobChecklistCreateReminderDataUnion2$outboundSchema;
  /** @deprecated use `JobChecklistCreateReminderDataUnion2$Outbound` instead. */
  export type Outbound = JobChecklistCreateReminderDataUnion2$Outbound;
}

export function jobChecklistCreateReminderDataUnion2ToJSON(
  jobChecklistCreateReminderDataUnion2: JobChecklistCreateReminderDataUnion2,
): string {
  return JSON.stringify(
    JobChecklistCreateReminderDataUnion2$outboundSchema.parse(
      jobChecklistCreateReminderDataUnion2,
    ),
  );
}

export function jobChecklistCreateReminderDataUnion2FromJSON(
  jsonString: string,
): SafeParseResult<JobChecklistCreateReminderDataUnion2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      JobChecklistCreateReminderDataUnion2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'JobChecklistCreateReminderDataUnion2' from JSON`,
  );
}

/** @internal */
export const JobChecklistCreateReminderData1$inboundSchema: z.ZodType<
  JobChecklistCreateReminderData1,
  z.ZodTypeDef,
  unknown
> = z.object({
  absoluteDateTime: z.string(),
});

/** @internal */
export type JobChecklistCreateReminderData1$Outbound = {
  absoluteDateTime: string;
};

/** @internal */
export const JobChecklistCreateReminderData1$outboundSchema: z.ZodType<
  JobChecklistCreateReminderData1$Outbound,
  z.ZodTypeDef,
  JobChecklistCreateReminderData1
> = z.object({
  absoluteDateTime: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobChecklistCreateReminderData1$ {
  /** @deprecated use `JobChecklistCreateReminderData1$inboundSchema` instead. */
  export const inboundSchema = JobChecklistCreateReminderData1$inboundSchema;
  /** @deprecated use `JobChecklistCreateReminderData1$outboundSchema` instead. */
  export const outboundSchema = JobChecklistCreateReminderData1$outboundSchema;
  /** @deprecated use `JobChecklistCreateReminderData1$Outbound` instead. */
  export type Outbound = JobChecklistCreateReminderData1$Outbound;
}

export function jobChecklistCreateReminderData1ToJSON(
  jobChecklistCreateReminderData1: JobChecklistCreateReminderData1,
): string {
  return JSON.stringify(
    JobChecklistCreateReminderData1$outboundSchema.parse(
      jobChecklistCreateReminderData1,
    ),
  );
}

export function jobChecklistCreateReminderData1FromJSON(
  jsonString: string,
): SafeParseResult<JobChecklistCreateReminderData1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => JobChecklistCreateReminderData1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'JobChecklistCreateReminderData1' from JSON`,
  );
}

/** @internal */
export const JobChecklistCreateReminderDataUnion1$inboundSchema: z.ZodType<
  JobChecklistCreateReminderDataUnion1,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => JobChecklistCreateReminderData1$inboundSchema),
  z.string(),
]);

/** @internal */
export type JobChecklistCreateReminderDataUnion1$Outbound =
  | JobChecklistCreateReminderData1$Outbound
  | string;

/** @internal */
export const JobChecklistCreateReminderDataUnion1$outboundSchema: z.ZodType<
  JobChecklistCreateReminderDataUnion1$Outbound,
  z.ZodTypeDef,
  JobChecklistCreateReminderDataUnion1
> = z.union([
  z.lazy(() => JobChecklistCreateReminderData1$outboundSchema),
  z.string(),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobChecklistCreateReminderDataUnion1$ {
  /** @deprecated use `JobChecklistCreateReminderDataUnion1$inboundSchema` instead. */
  export const inboundSchema =
    JobChecklistCreateReminderDataUnion1$inboundSchema;
  /** @deprecated use `JobChecklistCreateReminderDataUnion1$outboundSchema` instead. */
  export const outboundSchema =
    JobChecklistCreateReminderDataUnion1$outboundSchema;
  /** @deprecated use `JobChecklistCreateReminderDataUnion1$Outbound` instead. */
  export type Outbound = JobChecklistCreateReminderDataUnion1$Outbound;
}

export function jobChecklistCreateReminderDataUnion1ToJSON(
  jobChecklistCreateReminderDataUnion1: JobChecklistCreateReminderDataUnion1,
): string {
  return JSON.stringify(
    JobChecklistCreateReminderDataUnion1$outboundSchema.parse(
      jobChecklistCreateReminderDataUnion1,
    ),
  );
}

export function jobChecklistCreateReminderDataUnion1FromJSON(
  jsonString: string,
): SafeParseResult<JobChecklistCreateReminderDataUnion1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      JobChecklistCreateReminderDataUnion1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'JobChecklistCreateReminderDataUnion1' from JSON`,
  );
}

/** @internal */
export const JobChecklistCreateReminderDataUnion3$inboundSchema: z.ZodType<
  JobChecklistCreateReminderDataUnion3,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.union([
    z.lazy(() => JobChecklistCreateReminderData1$inboundSchema),
    z.string(),
  ]),
  z.union([
    z.lazy(() => JobChecklistCreateReminderData2$inboundSchema),
    z.string(),
  ]),
]);

/** @internal */
export type JobChecklistCreateReminderDataUnion3$Outbound =
  | JobChecklistCreateReminderData1$Outbound
  | string
  | JobChecklistCreateReminderData2$Outbound
  | string;

/** @internal */
export const JobChecklistCreateReminderDataUnion3$outboundSchema: z.ZodType<
  JobChecklistCreateReminderDataUnion3$Outbound,
  z.ZodTypeDef,
  JobChecklistCreateReminderDataUnion3
> = z.union([
  z.union([
    z.lazy(() => JobChecklistCreateReminderData1$outboundSchema),
    z.string(),
  ]),
  z.union([
    z.lazy(() => JobChecklistCreateReminderData2$outboundSchema),
    z.string(),
  ]),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobChecklistCreateReminderDataUnion3$ {
  /** @deprecated use `JobChecklistCreateReminderDataUnion3$inboundSchema` instead. */
  export const inboundSchema =
    JobChecklistCreateReminderDataUnion3$inboundSchema;
  /** @deprecated use `JobChecklistCreateReminderDataUnion3$outboundSchema` instead. */
  export const outboundSchema =
    JobChecklistCreateReminderDataUnion3$outboundSchema;
  /** @deprecated use `JobChecklistCreateReminderDataUnion3$Outbound` instead. */
  export type Outbound = JobChecklistCreateReminderDataUnion3$Outbound;
}

export function jobChecklistCreateReminderDataUnion3ToJSON(
  jobChecklistCreateReminderDataUnion3: JobChecklistCreateReminderDataUnion3,
): string {
  return JSON.stringify(
    JobChecklistCreateReminderDataUnion3$outboundSchema.parse(
      jobChecklistCreateReminderDataUnion3,
    ),
  );
}

export function jobChecklistCreateReminderDataUnion3FromJSON(
  jsonString: string,
): SafeParseResult<JobChecklistCreateReminderDataUnion3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      JobChecklistCreateReminderDataUnion3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'JobChecklistCreateReminderDataUnion3' from JSON`,
  );
}

/** @internal */
export const JobChecklistCreate$inboundSchema: z.ZodType<
  JobChecklistCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string().optional(),
  job_uuid: z.string().optional(),
  name: z.string().optional(),
  section_name: z.string().optional(),
  item_type: z.string().optional(),
  sort_order: z.number().int().optional(),
  completed_timestamp: z.string().optional(),
  completed_by_staff_uuid: z.string().optional(),
  completed_during_checkin_uuid: z.string().optional(),
  reminder_type: z.string().optional(),
  reminder_data: z.union([
    z.union([
      z.lazy(() => JobChecklistCreateReminderData1$inboundSchema),
      z.string(),
    ]),
    z.union([
      z.lazy(() => JobChecklistCreateReminderData2$inboundSchema),
      z.string(),
    ]),
  ]).optional(),
  regarding_object: z.string().optional(),
  regarding_object_uuid: z.string().optional(),
  fulfilled_by_object_name: z.string().optional(),
  fulfilled_by_object_uuid: z.string().optional(),
  assigned_to_staff_uuids: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "job_uuid": "jobUuid",
    "section_name": "sectionName",
    "item_type": "itemType",
    "sort_order": "sortOrder",
    "completed_timestamp": "completedTimestamp",
    "completed_by_staff_uuid": "completedByStaffUuid",
    "completed_during_checkin_uuid": "completedDuringCheckinUuid",
    "reminder_type": "reminderType",
    "reminder_data": "reminderData",
    "regarding_object": "regardingObject",
    "regarding_object_uuid": "regardingObjectUuid",
    "fulfilled_by_object_name": "fulfilledByObjectName",
    "fulfilled_by_object_uuid": "fulfilledByObjectUuid",
    "assigned_to_staff_uuids": "assignedToStaffUuids",
  });
});

/** @internal */
export type JobChecklistCreate$Outbound = {
  uuid?: string | undefined;
  job_uuid?: string | undefined;
  name?: string | undefined;
  section_name?: string | undefined;
  item_type?: string | undefined;
  sort_order?: number | undefined;
  completed_timestamp?: string | undefined;
  completed_by_staff_uuid?: string | undefined;
  completed_during_checkin_uuid?: string | undefined;
  reminder_type?: string | undefined;
  reminder_data?:
    | JobChecklistCreateReminderData1$Outbound
    | string
    | JobChecklistCreateReminderData2$Outbound
    | string
    | undefined;
  regarding_object?: string | undefined;
  regarding_object_uuid?: string | undefined;
  fulfilled_by_object_name?: string | undefined;
  fulfilled_by_object_uuid?: string | undefined;
  assigned_to_staff_uuids?: Array<string> | undefined;
};

/** @internal */
export const JobChecklistCreate$outboundSchema: z.ZodType<
  JobChecklistCreate$Outbound,
  z.ZodTypeDef,
  JobChecklistCreate
> = z.object({
  uuid: z.string().optional(),
  jobUuid: z.string().optional(),
  name: z.string().optional(),
  sectionName: z.string().optional(),
  itemType: z.string().optional(),
  sortOrder: z.number().int().optional(),
  completedTimestamp: z.string().optional(),
  completedByStaffUuid: z.string().optional(),
  completedDuringCheckinUuid: z.string().optional(),
  reminderType: z.string().optional(),
  reminderData: z.union([
    z.union([
      z.lazy(() => JobChecklistCreateReminderData1$outboundSchema),
      z.string(),
    ]),
    z.union([
      z.lazy(() => JobChecklistCreateReminderData2$outboundSchema),
      z.string(),
    ]),
  ]).optional(),
  regardingObject: z.string().optional(),
  regardingObjectUuid: z.string().optional(),
  fulfilledByObjectName: z.string().optional(),
  fulfilledByObjectUuid: z.string().optional(),
  assignedToStaffUuids: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    jobUuid: "job_uuid",
    sectionName: "section_name",
    itemType: "item_type",
    sortOrder: "sort_order",
    completedTimestamp: "completed_timestamp",
    completedByStaffUuid: "completed_by_staff_uuid",
    completedDuringCheckinUuid: "completed_during_checkin_uuid",
    reminderType: "reminder_type",
    reminderData: "reminder_data",
    regardingObject: "regarding_object",
    regardingObjectUuid: "regarding_object_uuid",
    fulfilledByObjectName: "fulfilled_by_object_name",
    fulfilledByObjectUuid: "fulfilled_by_object_uuid",
    assignedToStaffUuids: "assigned_to_staff_uuids",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobChecklistCreate$ {
  /** @deprecated use `JobChecklistCreate$inboundSchema` instead. */
  export const inboundSchema = JobChecklistCreate$inboundSchema;
  /** @deprecated use `JobChecklistCreate$outboundSchema` instead. */
  export const outboundSchema = JobChecklistCreate$outboundSchema;
  /** @deprecated use `JobChecklistCreate$Outbound` instead. */
  export type Outbound = JobChecklistCreate$Outbound;
}

export function jobChecklistCreateToJSON(
  jobChecklistCreate: JobChecklistCreate,
): string {
  return JSON.stringify(
    JobChecklistCreate$outboundSchema.parse(jobChecklistCreate),
  );
}

export function jobChecklistCreateFromJSON(
  jsonString: string,
): SafeParseResult<JobChecklistCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => JobChecklistCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'JobChecklistCreate' from JSON`,
  );
}
