/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AddNoteRequest = {
  note: string;
};

/** @internal */
export const AddNoteRequest$inboundSchema: z.ZodType<
  AddNoteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  note: z.string(),
});

/** @internal */
export type AddNoteRequest$Outbound = {
  note: string;
};

/** @internal */
export const AddNoteRequest$outboundSchema: z.ZodType<
  AddNoteRequest$Outbound,
  z.ZodTypeDef,
  AddNoteRequest
> = z.object({
  note: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddNoteRequest$ {
  /** @deprecated use `AddNoteRequest$inboundSchema` instead. */
  export const inboundSchema = AddNoteRequest$inboundSchema;
  /** @deprecated use `AddNoteRequest$outboundSchema` instead. */
  export const outboundSchema = AddNoteRequest$outboundSchema;
  /** @deprecated use `AddNoteRequest$Outbound` instead. */
  export type Outbound = AddNoteRequest$Outbound;
}

export function addNoteRequestToJSON(addNoteRequest: AddNoteRequest): string {
  return JSON.stringify(AddNoteRequest$outboundSchema.parse(addNoteRequest));
}

export function addNoteRequestFromJSON(
  jsonString: string,
): SafeParseResult<AddNoteRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AddNoteRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AddNoteRequest' from JSON`,
  );
}
