/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SmsTemplateCreate = {
  /**
   * The name of the SMS template. This is a unique identifier for the template within the system. Examples include 'Tech Delayed Template', 'Parts Ordered Template', etc.
   */
  name: string;
  /**
   * The SMS message content that will be sent to recipients. Supports template variables like {job.contact_first}, {vendor.name}, {job.generated_job_id}, {job.total_price}, etc. Maximum length is determined by the SMS service provider's limit. Messages exceeding this limit will not be saved.
   */
  message?: string | undefined;
  /**
   * Unique identifier for this record
   */
  uuid?: string | undefined;
};

/** @internal */
export const SmsTemplateCreate$inboundSchema: z.ZodType<
  SmsTemplateCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  message: z.string().optional(),
  uuid: z.string().optional(),
});

/** @internal */
export type SmsTemplateCreate$Outbound = {
  name: string;
  message?: string | undefined;
  uuid?: string | undefined;
};

/** @internal */
export const SmsTemplateCreate$outboundSchema: z.ZodType<
  SmsTemplateCreate$Outbound,
  z.ZodTypeDef,
  SmsTemplateCreate
> = z.object({
  name: z.string(),
  message: z.string().optional(),
  uuid: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SmsTemplateCreate$ {
  /** @deprecated use `SmsTemplateCreate$inboundSchema` instead. */
  export const inboundSchema = SmsTemplateCreate$inboundSchema;
  /** @deprecated use `SmsTemplateCreate$outboundSchema` instead. */
  export const outboundSchema = SmsTemplateCreate$outboundSchema;
  /** @deprecated use `SmsTemplateCreate$Outbound` instead. */
  export type Outbound = SmsTemplateCreate$Outbound;
}

export function smsTemplateCreateToJSON(
  smsTemplateCreate: SmsTemplateCreate,
): string {
  return JSON.stringify(
    SmsTemplateCreate$outboundSchema.parse(smsTemplateCreate),
  );
}

export function smsTemplateCreateFromJSON(
  jsonString: string,
): SafeParseResult<SmsTemplateCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SmsTemplateCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SmsTemplateCreate' from JSON`,
  );
}
