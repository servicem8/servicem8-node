/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { jobChecklistsCreateJobChecklists } from "../funcs/jobChecklistsCreateJobChecklists.js";
import { jobChecklistsDeleteJobChecklists } from "../funcs/jobChecklistsDeleteJobChecklists.js";
import { jobChecklistsGetJobChecklists } from "../funcs/jobChecklistsGetJobChecklists.js";
import { jobChecklistsListJobChecklists } from "../funcs/jobChecklistsListJobChecklists.js";
import { jobChecklistsUpdateJobChecklists } from "../funcs/jobChecklistsUpdateJobChecklists.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class JobChecklists extends ClientSDK {
  /**
   * List all Job Checklists
   *
   * @remarks
   *
   * #### Filtering
   * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_job_checklists**.
   */
  async listJobChecklists(
    options?: RequestOptions,
  ): Promise<operations.ListJobChecklistsResponse> {
    return unwrapAsync(jobChecklistsListJobChecklists(
      this,
      options,
    ));
  }

  /**
   * Create a new Job Checklist
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **manage_job_checklists**.
   *
   * #### Record UUID
   * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.
   */
  async createJobChecklists(
    request: components.JobChecklistInput,
    options?: RequestOptions,
  ): Promise<operations.CreateJobChecklistsResponse> {
    return unwrapAsync(jobChecklistsCreateJobChecklists(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a Job Checklist
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_job_checklists**.
   */
  async getJobChecklists(
    request: operations.GetJobChecklistsRequest,
    options?: RequestOptions,
  ): Promise<operations.GetJobChecklistsResponse> {
    return unwrapAsync(jobChecklistsGetJobChecklists(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a Job Checklist
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **manage_job_checklists**.
   */
  async updateJobChecklists(
    request: operations.UpdateJobChecklistsRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateJobChecklistsResponse> {
    return unwrapAsync(jobChecklistsUpdateJobChecklists(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Job Checklist
   *
   * @remarks
   *
   * In ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **manage_job_checklists**.
   */
  async deleteJobChecklists(
    request: operations.DeleteJobChecklistsRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteJobChecklistsResponse> {
    return unwrapAsync(jobChecklistsDeleteJobChecklists(
      this,
      request,
      options,
    ));
  }
}
