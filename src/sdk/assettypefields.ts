/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assetTypeFieldsCreateAssetTypeFields } from "../funcs/assetTypeFieldsCreateAssetTypeFields.js";
import { assetTypeFieldsDeleteAssetTypeFields } from "../funcs/assetTypeFieldsDeleteAssetTypeFields.js";
import { assetTypeFieldsGetAssetTypeFields } from "../funcs/assetTypeFieldsGetAssetTypeFields.js";
import { assetTypeFieldsListAssetTypeFields } from "../funcs/assetTypeFieldsListAssetTypeFields.js";
import { assetTypeFieldsUpdateAssetTypeFields } from "../funcs/assetTypeFieldsUpdateAssetTypeFields.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class AssetTypeFields extends ClientSDK {
  /**
   * List all Asset Type Fields
   *
   * @remarks
   *
   * #### Filtering
   * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_assets**.
   */
  async listAssetTypeFields(
    options?: RequestOptions,
  ): Promise<operations.ListAssetTypeFieldsResponse> {
    return unwrapAsync(assetTypeFieldsListAssetTypeFields(
      this,
      options,
    ));
  }

  /**
   * Create a new Asset Type Field
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **manage_assets**.
   *
   * #### Record UUID
   * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.
   */
  async createAssetTypeFields(
    request: components.AssetTypeFieldInput,
    options?: RequestOptions,
  ): Promise<operations.CreateAssetTypeFieldsResponse> {
    return unwrapAsync(assetTypeFieldsCreateAssetTypeFields(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve an Asset Type Field
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_assets**.
   */
  async getAssetTypeFields(
    request: operations.GetAssetTypeFieldsRequest,
    options?: RequestOptions,
  ): Promise<operations.GetAssetTypeFieldsResponse> {
    return unwrapAsync(assetTypeFieldsGetAssetTypeFields(
      this,
      request,
      options,
    ));
  }

  /**
   * Update an Asset Type Field
   */
  async updateAssetTypeFields(
    request: operations.UpdateAssetTypeFieldsRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateAssetTypeFieldsResponse> {
    return unwrapAsync(assetTypeFieldsUpdateAssetTypeFields(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete an Asset Type Field
   *
   * @remarks
   *
   * In ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.
   */
  async deleteAssetTypeFields(
    request: operations.DeleteAssetTypeFieldsRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteAssetTypeFieldsResponse> {
    return unwrapAsync(assetTypeFieldsDeleteAssetTypeFields(
      this,
      request,
      options,
    ));
  }
}
