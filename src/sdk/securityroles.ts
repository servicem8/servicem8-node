/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { securityRolesGetSecurityRoles } from "../funcs/securityRolesGetSecurityRoles.js";
import { securityRolesListSecurityRoles } from "../funcs/securityRolesListSecurityRoles.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class SecurityRoles extends ClientSDK {
  /**
   * List all Security Roles
   *
   * @remarks
   *
   * #### Filtering
   * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_security_roles**.
   */
  async listSecurityRoles(
    options?: RequestOptions,
  ): Promise<Array<components.SecurityRole>> {
    return unwrapAsync(securityRolesListSecurityRoles(
      this,
      options,
    ));
  }

  /**
   * Retrieve a Security Role
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_security_roles**.
   */
  async getSecurityRoles(
    request: operations.GetSecurityRolesRequest,
    options?: RequestOptions,
  ): Promise<components.SecurityRole> {
    return unwrapAsync(securityRolesGetSecurityRoles(
      this,
      request,
      options,
    ));
  }
}
