/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { formResponsesGetFormResponses } from "../funcs/formResponsesGetFormResponses.js";
import { formResponsesListFormResponses } from "../funcs/formResponsesListFormResponses.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class FormResponses extends ClientSDK {
  /**
   * List all Form Responses
   *
   * @remarks
   *
   * #### Filtering
   * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_forms**.
   */
  async listFormResponses(
    options?: RequestOptions,
  ): Promise<operations.ListFormResponsesResponse> {
    return unwrapAsync(formResponsesListFormResponses(
      this,
      options,
    ));
  }

  /**
   * Retrieve a Form Response
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_forms**.
   */
  async getFormResponses(
    request: operations.GetFormResponsesRequest,
    options?: RequestOptions,
  ): Promise<operations.GetFormResponsesResponse> {
    return unwrapAsync(formResponsesGetFormResponses(
      this,
      request,
      options,
    ));
  }
}
