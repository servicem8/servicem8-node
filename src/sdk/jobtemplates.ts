/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { jobTemplatesCreateJobFromTemplate } from "../funcs/jobTemplatesCreateJobFromTemplate.js";
import { jobTemplatesGetJobTemplates } from "../funcs/jobTemplatesGetJobTemplates.js";
import { jobTemplatesListJobTemplates } from "../funcs/jobTemplatesListJobTemplates.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class JobTemplates extends ClientSDK {
  /**
   * List all Job Templates
   *
   * @remarks
   *
   * #### Filtering
   * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_jobs**.
   */
  async listJobTemplates(
    options?: RequestOptions,
  ): Promise<Array<components.JobTemplate>> {
    return unwrapAsync(jobTemplatesListJobTemplates(
      this,
      options,
    ));
  }

  /**
   * Retrieve a Job Template
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_jobs**.
   */
  async getJobTemplates(
    request: operations.GetJobTemplatesRequest,
    options?: RequestOptions,
  ): Promise<components.JobTemplate> {
    return unwrapAsync(jobTemplatesGetJobTemplates(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a job from a template
   *
   * @remarks
   * Creates a new job by cloning an existing job template. All template entities (tasks, materials, checklists, quotes, custom fields) are cloned to the new job.
   *
   * #### Field Overrides
   * Only the following fields can be overridden when creating a job from a template:
   * - `job_description` - Job description
   * - `company_uuid` - UUID of the company/client
   * - `company_name` - Name of the company/client (will lookup existing or create new)
   * - `job_address` - Street address for the job
   *
   * **Note:** You cannot specify both `company_uuid` and `company_name`. If `company_name` is provided, the system will first search for an existing company with that name. If found, it will use that company's UUID. If not found, a new company will be created.
   *
   * Any other fields in the request body will be ignored.
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **create_jobs**.
   */
  async createJobFromTemplate(
    request: operations.CreateJobFromTemplateRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateJobFromTemplateResponse> {
    return unwrapAsync(jobTemplatesCreateJobFromTemplate(
      this,
      request,
      options,
    ));
  }
}
