/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { knowledgeArticlesCreateKnowledgeArticles } from "../funcs/knowledgeArticlesCreateKnowledgeArticles.js";
import { knowledgeArticlesDeleteKnowledgeArticles } from "../funcs/knowledgeArticlesDeleteKnowledgeArticles.js";
import { knowledgeArticlesGetKnowledgeArticles } from "../funcs/knowledgeArticlesGetKnowledgeArticles.js";
import { knowledgeArticlesListKnowledgeArticles } from "../funcs/knowledgeArticlesListKnowledgeArticles.js";
import { knowledgeArticlesUpdateKnowledgeArticles } from "../funcs/knowledgeArticlesUpdateKnowledgeArticles.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class KnowledgeArticles extends ClientSDK {
  /**
   * List all Knowledge Articles
   *
   * @remarks
   *
   * #### Filtering
   * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_knowledge**.
   */
  async listKnowledgeArticles(
    options?: RequestOptions,
  ): Promise<Array<components.KnowledgeArticle>> {
    return unwrapAsync(knowledgeArticlesListKnowledgeArticles(
      this,
      options,
    ));
  }

  /**
   * Create a new Knowledge Article
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **manage_knowledge**.
   *
   * #### Record UUID
   * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.
   */
  async createKnowledgeArticles(
    request: components.KnowledgeArticleCreate,
    options?: RequestOptions,
  ): Promise<operations.CreateKnowledgeArticlesResponse> {
    return unwrapAsync(knowledgeArticlesCreateKnowledgeArticles(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a Knowledge Article
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_knowledge**.
   */
  async getKnowledgeArticles(
    request: operations.GetKnowledgeArticlesRequest,
    options?: RequestOptions,
  ): Promise<components.KnowledgeArticle> {
    return unwrapAsync(knowledgeArticlesGetKnowledgeArticles(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a Knowledge Article
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **manage_knowledge**.
   */
  async updateKnowledgeArticles(
    request: operations.UpdateKnowledgeArticlesRequest,
    options?: RequestOptions,
  ): Promise<components.Result> {
    return unwrapAsync(knowledgeArticlesUpdateKnowledgeArticles(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Knowledge Article
   *
   * @remarks
   *
   * In ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **manage_knowledge**.
   */
  async deleteKnowledgeArticles(
    request: operations.DeleteKnowledgeArticlesRequest,
    options?: RequestOptions,
  ): Promise<components.Result> {
    return unwrapAsync(knowledgeArticlesDeleteKnowledgeArticles(
      this,
      request,
      options,
    ));
  }
}
