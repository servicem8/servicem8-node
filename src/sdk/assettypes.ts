/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assetTypesCreateAssetTypes } from "../funcs/assetTypesCreateAssetTypes.js";
import { assetTypesDeleteAssetTypes } from "../funcs/assetTypesDeleteAssetTypes.js";
import { assetTypesGetAssetTypes } from "../funcs/assetTypesGetAssetTypes.js";
import { assetTypesListAssetTypes } from "../funcs/assetTypesListAssetTypes.js";
import { assetTypesUpdateAssetTypes } from "../funcs/assetTypesUpdateAssetTypes.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class AssetTypes extends ClientSDK {
  /**
   * List all Asset Types
   *
   * @remarks
   *
   * #### Filtering
   * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_assets**.
   */
  async listAssetTypes(
    options?: RequestOptions,
  ): Promise<operations.ListAssetTypesResponse> {
    return unwrapAsync(assetTypesListAssetTypes(
      this,
      options,
    ));
  }

  /**
   * Create a new Asset Type
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **manage_assets**.
   *
   * #### Record UUID
   * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.
   */
  async createAssetTypes(
    request: components.AssetTypeInput,
    options?: RequestOptions,
  ): Promise<operations.CreateAssetTypesResponse> {
    return unwrapAsync(assetTypesCreateAssetTypes(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve an Asset Type
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_assets**.
   */
  async getAssetTypes(
    request: operations.GetAssetTypesRequest,
    options?: RequestOptions,
  ): Promise<operations.GetAssetTypesResponse> {
    return unwrapAsync(assetTypesGetAssetTypes(
      this,
      request,
      options,
    ));
  }

  /**
   * Update an Asset Type
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **manage_assets**.
   */
  async updateAssetTypes(
    request: operations.UpdateAssetTypesRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateAssetTypesResponse> {
    return unwrapAsync(assetTypesUpdateAssetTypes(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete an Asset Type
   *
   * @remarks
   *
   * In ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **manage_assets**.
   */
  async deleteAssetTypes(
    request: operations.DeleteAssetTypesRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteAssetTypesResponse> {
    return unwrapAsync(assetTypesDeleteAssetTypes(
      this,
      request,
      options,
    ));
  }
}
