/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { searchGeneralSearch } from "../funcs/searchGeneralSearch.js";
import { searchJobEmbeddingSearch } from "../funcs/searchJobEmbeddingSearch.js";
import { searchObjectSearch } from "../funcs/searchObjectSearch.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Search extends ClientSDK {
  /**
   * Search across multiple object types
   *
   * @remarks
   * Performs a text search across jobs, companies, and materials. Returns combined results sorted by relevance.
   */
  async generalSearch(
    request: operations.GeneralSearchRequest,
    options?: RequestOptions,
  ): Promise<components.SearchResponse> {
    return unwrapAsync(searchGeneralSearch(
      this,
      request,
      options,
    ));
  }

  /**
   * Search within a specific object type
   *
   * @remarks
   * Performs a text search within a specific object type. Supported types: job, company, material, knowledgearticle, attachment, formresponse, asset, materialbundle
   */
  async objectSearch(
    request: operations.ObjectSearchRequest,
    options?: RequestOptions,
  ): Promise<components.ObjectSearchResponse> {
    return unwrapAsync(searchObjectSearch(
      this,
      request,
      options,
    ));
  }

  /**
   * Semantic search for jobs
   *
   * @remarks
   * Harness the power of advanced AI embeddings to revolutionise how you search through job data. This endpoint transforms your search query into high-dimensional vector embeddings, then intelligently matches it against our entire job database using semantic similarity algorithms.
   *
   * How it works:
   * 1. AI Query Understanding - Your search terms are processed through neural embedding models that understand context, intent, and meaning
   * 2. Vector-Based Matching - The system compares your query against vector representations of all job content in real-time
   * 3. Intelligent Ranking - Returns results ranked by semantic similarity, not just keyword matching
   *
   * Why this matters:
   * - Find jobs about "plumbing repairs" even when searching for "fixing pipes"
   * - Discover relevant work orders that use different terminology but share the same intent
   * - Uncover hidden patterns and connections in your job data that traditional search would miss
   *
   * This isn't just searchâ€”it's AI that truly understands what you're looking for and delivers the most relevant results, even when the exact words don't match.
   */
  async jobEmbeddingSearch(
    request: operations.JobEmbeddingSearchRequest,
    options?: RequestOptions,
  ): Promise<components.EmbeddingSearchResponse> {
    return unwrapAsync(searchJobEmbeddingSearch(
      this,
      request,
      options,
    ));
  }
}
