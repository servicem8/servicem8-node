/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { materialsCreateMaterials } from "../funcs/materialsCreateMaterials.js";
import { materialsDeleteMaterials } from "../funcs/materialsDeleteMaterials.js";
import { materialsGetMaterials } from "../funcs/materialsGetMaterials.js";
import { materialsListMaterials } from "../funcs/materialsListMaterials.js";
import { materialsUpdateMaterials } from "../funcs/materialsUpdateMaterials.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Materials extends ClientSDK {
  /**
   * List all Materials
   *
   * @remarks
   *
   * #### Filtering
   * This endpoint supports result filtering. For more information on how to filter this request, [go here](/docs/filtering).
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_inventory**.
   */
  async listMaterials(
    security: operations.ListMaterialsSecurity,
    options?: RequestOptions,
  ): Promise<operations.ListMaterialsResponse> {
    return unwrapAsync(materialsListMaterials(
      this,
      security,
      options,
    ));
  }

  /**
   * Create a new Material
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **manage_inventory**.
   *
   * #### Record UUID
   * UUID is optional for record creation. If no UUID is supplied, a UUID will be automatically generated for the new record and returned in the `x-record-uuid` response header.
   */
  async createMaterials(
    security: operations.CreateMaterialsSecurity,
    request: components.MaterialInput,
    options?: RequestOptions,
  ): Promise<operations.CreateMaterialsResponse> {
    return unwrapAsync(materialsCreateMaterials(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Retrieve a Material
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **read_inventory**.
   */
  async getMaterials(
    security: operations.GetMaterialsSecurity,
    request: operations.GetMaterialsRequest,
    options?: RequestOptions,
  ): Promise<operations.GetMaterialsResponse> {
    return unwrapAsync(materialsGetMaterials(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Update a Material
   *
   * @remarks
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **manage_inventory**.
   */
  async updateMaterials(
    security: operations.UpdateMaterialsSecurity,
    request: operations.UpdateMaterialsRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateMaterialsResponse> {
    return unwrapAsync(materialsUpdateMaterials(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Delete a Material
   *
   * @remarks
   *
   * In ServiceM8, deleting a record sets its `active` field to `0`. Inactive records are still accessible on the API, but are hidden in the UI. Inactive records can be restored by setting their `active` field to `1`.
   *
   * #### OAuth Scope
   * This endpoint requires the following OAuth scope **manage_inventory**.
   */
  async deleteMaterials(
    security: operations.DeleteMaterialsSecurity,
    request: operations.DeleteMaterialsRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteMaterialsResponse> {
    return unwrapAsync(materialsDeleteMaterials(
      this,
      security,
      request,
      options,
    ));
  }
}
